{"version":3,"sources":["FLbackgrid2.js"],"names":[],"mappings":"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","file":"FLbackgrid2-compiled.js","sourcesContent":["//jo.js to test widgets in backgrid\r\nvar FL = FL || {};\r\n\r\n$.mockjax({\r\n    url: '/names/*',\r\n    type: 'GET',\r\n    responseTime: 750,\r\n    response: function (body) {\r\n        var searchTerm = body.url.split('/')[2];\r\n        this.status = 200;\r\n        this.responseText = JSON.stringify(_.filter([\r\n            {\r\n                name: \"Franz\"\r\n            },\r\n            {\r\n                name: \"Theodore\"\r\n            },\r\n            {\r\n                name: \"Matilda\"\r\n            },\r\n            {\r\n                name: \"Roosevelt\"\r\n            },\r\n            {\r\n                name: \"Ferdinand\"\r\n            },\r\n            {\r\n                name: \"Dillon\"\r\n            },\r\n            {\r\n                name: \"Sheila\"\r\n            },\r\n            {\r\n                name: \"Francine\"\r\n            }\r\n        ], function (obj) {\r\n            return obj.name.toLowerCase().indexOf(searchTerm.toLowerCase()) != -1;\r\n        }));\r\n    }\r\n});\r\nFL[\"bg\"] = (function () {//name space FL.common\r\n    validatePhone = function (phone) {\r\n        // var re = /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;//(123) 456-7890\r\n        var re = /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{3}(-|\\s)\\d{3}$/;//(123) 456-789-012\r\n        return re.test(phone);\r\n    };\r\n    validatePhone2 = function validatePhone(phoneVal) {//https://saikiran78.wordpress.com/2011/04/20/phone-number-validation-using-jquery/\r\n        var phoneRegExp = /^((\\+)?[1-9]{1,2})?([-\\s\\.])?((\\(\\d{1,4}\\))|\\d{1,4})(([-\\s\\.])?[0-9]{1,12}){1,2}$/;\r\n        //http://stackoverflow.com/questions/16385366/masking-input-with-optional-alphabet-prefix-to-a-phone-number-format\r\n        var numbers = phoneVal.split(\"\").length;\r\n        if (10 <= numbers && numbers <= 20 && phoneRegExp.test(phoneVal)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    validateDatetime = function (datetime) {//ex \"01/06/2015 12:00 am\"\r\n        var bRet = false;\r\n        var date = datetime.substr(0, 10);\r\n        if (FL.common.is_ValidDate(date)) {\r\n            var space = datetime.substr(10, 1);\r\n            if (space = \" \") {//a space is in position 10\r\n                var timeAnd = datetime.substr(11);//ex \"12:00 am\"\r\n                var time = datetime.substr(11, 5);\r\n                var re = /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;//HH:MM\r\n                if (re.test(time)) {//format correct for 12:00\r\n                    if (timeAnd.lenght == 5) {\r\n                        bRet = true;//the format is \"01/06/2015 22:14\"\r\n                    } else {\r\n                        space = timeAnd.substr(5, 1);\r\n                        if (space = \" \") {//a space is in position 5 of \"12:00 am\"\r\n                            var amPm = timeAnd.substr(6);\r\n                            var re = /^[APap][mM]$/;//am\r\n                            if (re.test(amPm)) {//format correct for am or pm\r\n                                bRet = true;//the format is \"01/06/2015 22:14 am\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return bRet;\r\n    };\r\n    var setDateformat = function () {//possible values:\"YMD\",\"MDY\",\"DMY\"\r\n        var oRet = {datetimepicker: \"yy/mm/dd\", format: \"YMD\"};//default value\r\n        if (FL.bg.dateFormat == \"MDY\")\r\n            oRet = {datetimepicker: \"mm/dd/yy\", format: \"MDY\"};\r\n        else if (FL.bg.dateFormat == \"DMY\")\r\n            oRet = {datetimepicker: \"dd/mm/yy\", format: \"DMY\"};\r\n        return oRet;\r\n    };\r\n    var NumberCellEditor = Backgrid.InputCellEditor.extend({\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            var decimals = NumberCellEditor.prototype.decimals;//4;\r\n            var decimalMask = (\"0000000000000000000\").substr(0, decimals);\r\n            var mask = \"#\" + FL.common.appsettings.thousandsSeparator + \"##0\" + FL.common.appsettings.radixpoint + decimalMask;//ex.\"#.##0,00\"\r\n            var cellVal = $(this.el).val();\r\n            $(this.el).focus(function () {\r\n                var paddedValue = function (cellValStr, decimals) {\r\n                    var xRet = cellValStr;\r\n                    var radixpoint = FL.common.appsettings.radixpoint;\r\n                    var decimalPos = cellValStr.indexOf(radixpoint);\r\n                    if (decimalPos >= 0) {\r\n                        var tail = FL.common.getTail(cellValStr);\r\n                        var intValueStr = cellValStr.substr(0, decimalPos);\r\n                        if (tail.length < decimals) {\r\n                            tail = tail.pad(decimals, \"0\", 1);\r\n                        }\r\n                        ;\r\n                        xRet = intValueStr + radixpoint + tail;\r\n                    }\r\n                    return xRet\r\n                };\r\n                var cellVal = $(this).val();\r\n                var paddedCell = paddedValue(cellVal, decimals);\r\n                console.log('------------->on focus ==>' + $(this).val() + \" -->\" + paddedCell);\r\n\r\n                $(this).val(paddedCell);\r\n                $(this).select();\r\n            });\r\n            var options = {\r\n                reverse: true,\r\n                maxlength: false,\r\n                onKeyPress: function (val, event, currentField, options) {\r\n                    console.log('------------->An key was pressed!:', val, ' event: ', event, 'currentField: ', currentField, ' options: ', options);\r\n                    console.log('------------->current value=' + val);\r\n                }\r\n            };\r\n            $(this.el).mask(mask, options);//https://github.com/igorescobar/jQuery-Mask-Plugin\r\n        },\r\n        render: function (model) {\r\n            var cellVal = this.model.get(this.column.get(\"name\"));//extracts from model\r\n            cellVal = this.formatter.fromRaw(cellVal);//converts to cell\r\n            this.$el.val(cellVal);\r\n            console.log(\"render number....<\" + cellVal + \">-->\" + JSON.stringify(this.model.toJSON()));\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n    var CurrencyCellEditor = Backgrid.InputCellEditor.extend({\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            var decimals = CurrencyCellEditor.prototype.decimals;\r\n            var currency = CurrencyCellEditor.prototype.currency;\r\n            var thousandsSeparator = FL.common.appsettings.thousandsSeparator;\r\n            if (thousandsSeparator == \"space\")\r\n                thousandsSeparator = \" \";\r\n            var decimalMask = (\"0000000000000000000\").substr(0, decimals);\r\n            var mask = \"#\" + thousandsSeparator + \"##0\" + FL.common.appsettings.radixpoint + decimalMask;//ex.\"#.##0,00\"\r\n            var cellVal = $(this.el).val();\r\n            $(this.el).focus(function () {\r\n                var paddedValue = function (cellValStr, decimals) {\r\n                    var xRet = cellValStr;\r\n                    var radixpoint = FL.common.appsettings.radixpoint;\r\n                    var decimalPos = cellValStr.indexOf(radixpoint);\r\n                    if (decimalPos >= 0) {\r\n                        var tail = FL.common.getTail(cellValStr);\r\n                        var intValueStr = cellValStr.substr(0, decimalPos);\r\n                        if (tail.length < decimals) {\r\n                            tail = tail.pad(decimals, \"0\", 1);\r\n                        }\r\n                        ;\r\n                        xRet = intValueStr + radixpoint + tail;\r\n                    }\r\n                    return xRet\r\n                };\r\n                var cellVal = $(this).val();\r\n                var paddedCell = paddedValue(cellVal, decimals);\r\n                console.log('------------->on focus ==>' + $(this).val() + \" -->\" + paddedCell);\r\n\r\n                $(this).val(paddedCell);\r\n                $(this).select();\r\n            });\r\n            var options = {\r\n                reverse: true,\r\n                maxlength: false,\r\n                onKeyPress: function (val, event, currentField, options) {\r\n                    console.log('------------->An key was pressed!:', val, ' event: ', event, 'currentField: ', currentField, ' options: ', options);\r\n                    console.log('------------->current value=' + val);\r\n                }\r\n            };\r\n            $(this.el).mask(mask, options);//https://github.com/igorescobar/jQuery-Mask-Plugin\r\n        },\r\n        render: function (model) {\r\n            var cellVal = this.model.get(this.column.get(\"name\"));//extracts from model\r\n            cellVal = this.formatter.fromRaw(cellVal);//converts to cell\r\n            this.$el.val(cellVal);\r\n            console.log(\"render number....<\" + cellVal + \">-->\" + JSON.stringify(this.model.toJSON()));\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n    var IntegerCellEditor = Backgrid.InputCellEditor.extend({\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            var mask = \"#\" + FL.common.appsettings.thousandsSeparator + \"##0\";//ex.\"#.##0\"\r\n            var cellVal = $(this.el).val();\r\n            $(this.el).focus(function () {\r\n                $(this).select();\r\n            });\r\n            var options = {\r\n                reverse: true,\r\n                maxlength: false,\r\n                onKeyPress: function (val, event, currentField, options) {\r\n                    console.log('------------->An key was pressed!:', val, ' event: ', event, 'currentField: ', currentField, ' options: ', options);\r\n                    console.log('------------->current value=' + val);\r\n                }\r\n            };\r\n            $(this.el).mask(mask, options);//https://github.com/igorescobar/jQuery-Mask-Plugin\r\n        },\r\n        render: function (model) {\r\n            var cellVal = this.model.get(this.column.get(\"name\"));//extracts from model\r\n            cellVal = this.formatter.fromRaw(cellVal);//converts to cell\r\n            this.$el.val(cellVal);\r\n            console.log(\"render number....<\" + cellVal + \">-->\" + JSON.stringify(this.model.toJSON()));\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n    var PercentCellEditor = Backgrid.InputCellEditor.extend({\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            var decimals = CurrencyCellEditor.prototype.decimals;\r\n            // var currency = CurrencyCellEditor.prototype.currency;\r\n\r\n            var decimalMask = (\"0000000000000000000\").substr(0, decimals);\r\n            var mask = \"#\" + FL.common.appsettings.thousandsSeparator + \"##0\" + FL.common.appsettings.radixpoint + decimalMask;//ex.\"#.##0,00\"\r\n            var cellVal = $(this.el).val();\r\n            $(this.el).focus(function () {\r\n                var paddedValue = function (cellValStr, decimals) {\r\n                    var xRet = cellValStr;\r\n                    var radixpoint = FL.common.appsettings.radixpoint;\r\n                    var decimalPos = cellValStr.indexOf(radixpoint);\r\n                    if (decimalPos >= 0) {\r\n                        var tail = FL.common.getTail(cellValStr);\r\n                        var intValueStr = cellValStr.substr(0, decimalPos);\r\n                        if (tail.length < decimals) {\r\n                            tail = tail.pad(decimals, \"0\", 1);\r\n                        }\r\n                        ;\r\n                        xRet = intValueStr + radixpoint + tail;\r\n                    }\r\n                    return xRet\r\n                };\r\n                var cellVal = $(this).val();\r\n                var paddedCell = paddedValue(cellVal, decimals);\r\n                console.log('------------->on focus ==>' + $(this).val() + \" -->\" + paddedCell);\r\n\r\n                $(this).val(paddedCell);\r\n                $(this).select();\r\n            });\r\n            var options = {\r\n                reverse: true,\r\n                maxlength: false,\r\n                onKeyPress: function (val, event, currentField, options) {\r\n                    console.log('------------->An key was pressed!:', val, ' event: ', event, 'currentField: ', currentField, ' options: ', options);\r\n                    console.log('------------->current value=' + val);\r\n                }\r\n            };\r\n            $(this.el).mask(mask, options);//https://github.com/igorescobar/jQuery-Mask-Plugin\r\n        },\r\n        render: function (model) {\r\n            var cellVal = this.model.get(this.column.get(\"name\"));//extracts from model\r\n            cellVal = this.formatter.fromRaw(cellVal);//converts to cell\r\n            this.$el.val(cellVal);\r\n            console.log(\"render number....<\" + cellVal + \">-->\" + JSON.stringify(this.model.toJSON()));\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n    // });\r\n    //http://jsfiddle.net/bh5nd/\r\n    //http://jsfiddle.net/Cj7UG/1/\r\n    var DateTimeCellEditor = Backgrid.InputCellEditor.extend({\r\n        //http://stackoverflow.com/questions/30115158/check-if-backgrid-cell-was-edited\r\n        events: {\r\n            \"change\": \"onDatePickerValueChange\",\r\n            \"keydown\": \"onKeydown\"\r\n        },\r\n        onDatePickerValueChange: function (e) {\r\n            var command = new Backgrid.Command(e);\r\n            var changedVal = this.$el.val();\r\n            console.log('onDatePickerValueChange CurrentCell with content: >' + changedVal + \"<---\" + JSON.stringify(this.model.toJSON()));\r\n            var isoDate = this.formatter.toRaw(changedVal);//transform cell value to isoDate\r\n            this.model.set(this.column.get(\"name\"), isoDate);//places isodate into the model\r\n            var val = this.formatter.fromRaw(changedVal);\r\n            this.onKeydown(e);\r\n        },\r\n        onKeydown: function (e) {\r\n            console.log(\"onKeydown !!!!!!!!!!!!!!!!!\");\r\n            var command = new Backgrid.Command(e);\r\n            if (command.passThru()) return true; // skip ahead to `change`\r\n            if (command.cancel()) {//the user pressed ESC\r\n                e.stopPropagation();\r\n                console.log(\"CANCEL !!!\");\r\n            }\r\n            if (command.save()) {//the user pressed enter\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.model.trigger(\"backgrid:edited\", this.model, this.column, command);\r\n                console.log(\"save !!!!!!!!!!!!!!!!!\");\r\n                $(\"#ui-datepicker-div\").css('visibility', 'hidden');//with enter the datepicker will disappear\r\n                // alert(setDateformat().datetimepicker);//to test setDateformat()\r\n            }\r\n        },\r\n        onCloseDatepicker: function (e) {\r\n            var command = new Backgrid.Command(e);\r\n            this.model.trigger(\"backgrid:edited\", this.model, this.column, command);//r4emove blue mark\r\n            console.log(\"onCloseDatepicker !!!!!!!!!!!!!!!!!\");\r\n        },\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            this.column = options.column;\r\n            var input = this;\r\n            var thisView = this;\r\n            var z = $(this.el);\r\n            _.bindAll(this, 'render');\r\n            $(\"#ui-datepicker-div\").css('visibility', 'visible');//works with onKeydown() ENTER\r\n            $(this.el).datetimepicker({\r\n                timeFormat: \"hh:mm tt\",\r\n                dateFormat: setDateformat().datetimepicker,//\"dd/mm/yy\",\r\n                controlType: 'select',\r\n                oneLine: true,\r\n                onClose: function (dateText, inst) {//an event belonging to the widget\r\n                    var newValue = thisView.formatter.toRaw(dateText);\r\n                    console.log(\"close !!!->\" + newValue + \" -->\" + inst.id);\r\n                    thisView.render(thisView.model);\r\n                    thisView.onCloseDatepicker(inst);\r\n                },\r\n                onSelect: function (selectedDateTime) {\r\n                    console.log(\"select ->\" + selectedDateTime);\r\n                }\r\n            });\r\n        },\r\n        render: function (model) {\r\n            var cellVal = this.model.get(this.column.get(\"name\"));//extracts from model\r\n            cellVal = this.formatter.fromRaw(cellVal);//converts to cell\r\n            this.$el.val(cellVal);\r\n            console.log(\"render....<\" + cellVal + \">-->\" + JSON.stringify(this.model.toJSON()));\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n    var PhoneCellEditor = Backgrid.InputCellEditor.extend({\r\n        events: {\r\n            'focus #customer_phone': \"entersCurrentCell\",\r\n            'focusout #customer_phone': \"updateCurrentCell\"\r\n        },\r\n        entersCurrentCell: function (event) {\r\n            console.log('enters CurrentCell  content: >' + this.$el.val() + \"<--- row:\" + JSON.stringify(this.model.toJSON()));\r\n        },\r\n        updateCurrentCell: function (event) {\r\n            console.log('Update CurrentCell with content: >' + this.$el.val() + \"<---\" + JSON.stringify(this.model.toJSON()));\r\n            var val = this.$el.val();// $(\"#customer_phone\").val();\r\n            var newValue = this.formatter.toRaw(val);\r\n            this.model.set(this.column.get(\"name\"), newValue);\r\n            console.log('After Update CurrentCell with content:' + JSON.stringify(this.model.toJSON()));\r\n            if (_.isUndefined(newValue)) {\r\n                this.model.trigger(\"backgrid:error\", this.model, this.column, val);\r\n            } else {\r\n                this.model.trigger(\"backgrid:edited\", this.model, this.column, new Backgrid.Command(event));\r\n            }\r\n        },\r\n        initialize: function () {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            this.$el.prop(\"id\", \"customer_phone\");\r\n            this.$el.prop(\"value\", \"\");\r\n            this.$el.prop(\"size\", \"25\");\r\n            var maskList = $.masksSort($.masksLoad(\"phone-codes.json\"), ['#'], /[0-9]|#/, \"mask\");\r\n            var maskOpts = {\r\n                inputmask: {\r\n                    definitions: {\r\n                        '#': {\r\n                            validator: \"[0-9]\",\r\n                            cardinality: 1\r\n                        }\r\n                    },\r\n                    //clearIncomplete: true,\r\n                    showMaskOnHover: false,\r\n                    autoUnmask: false,\r\n                    oncomplete: function () {\r\n                        // console.log('inputmask in complete');\r\n                        console.log(\"inputmask is complete \");\r\n                    }\r\n                },\r\n                match: /[0-9]/,\r\n                replace: '#',\r\n                list: maskList,\r\n                listKey: \"mask\",\r\n                onMaskChange: function (maskObj, determined) {\r\n                    if (determined) {\r\n                        var hint = maskObj.name_en;\r\n                        if (maskObj.desc_en && maskObj.desc_en != \"\") {\r\n                            hint += \" (\" + maskObj.desc_en + \")\";\r\n                        }\r\n                        $(\"#descr\").html(hint);\r\n                    } else {\r\n                        $(\"#descr\").html(\"Mask of input\");\r\n                    }\r\n                    var valWithMask = $('#customer_phone').val();\r\n                    console.log(\"--->\" + valWithMask);\r\n                }\r\n            };\r\n            this.$el.blur(function () {\r\n                console.log(\"This input field has lost its focus.\");\r\n            });\r\n            this.$el.inputmasks(maskOpts);\r\n        },\r\n    });\r\n    var UrlCellEditor = Backgrid.CellEditor.extend({\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            var cellVal = $(this.el).val();\r\n            // $(this.el).focus(function() {\r\n            // \t\t$(this).select();\r\n            // });\r\n            $(this.el).val(\"xxx\");\r\n        }\r\n    });\r\n    var AutocompleteCellEditor = Backgrid.Extension.AutocompleteCellEditor = Backgrid.InputCellEditor.extend({\r\n        formatter: Backgrid.StringFormatter,\r\n        tagName: \"input\",\r\n        attributes: {\r\n            type: \"text\"\r\n        },\r\n\r\n        /** @property */\r\n        autocompleteOptions: null,\r\n\r\n        /**\r\n         Sets the options for `autocomplete`. Called by the parent AutocompleteCell during edit mode.\r\n         */\r\n        setAutocompleteOptions: function (options) {\r\n            this.autocompleteOptions = options;\r\n        },\r\n        events: {},\r\n        initialize: function (options) {\r\n            Backgrid.InputCellEditor.prototype.initialize.apply(this, arguments);\r\n            //http://stackoverflow.com/questions/16907825/how-to-implement-sublime-text-like-fuzzy-search\r\n            var lookupObj = AutocompleteCellEditor.prototype.lookupObj;\r\n            if(lookupObj)\r\n                alert(\"AutocompleteCellEditor @@@@@@@@@=\" + JSON.stringify(lookupObj.data));\r\n            this.autocompleteUrl = options.column.get(\"autocompleteUrl\");\r\n            if (this.autocompleteUrl[this.autocompleteUrl.length] != '/') this.autocompleteUrl += '/';\r\n            this.minTermLength = options.column.get(\"minTermLength\");\r\n            this.resultsFormatter = options.column.get(\"resultsFormatter\");\r\n            this.labelProperty = options.column.get(\"labelProperty\");\r\n            _.bindAll(this, 'render', 'getAutocompleteCustomers', 'saveOrCancel', 'postRender');\r\n        },\r\n\r\n        /**\r\n         Renders an <input> element and then initializes an autocomplete widget off of it\r\n\r\n         @chainable\r\n         */\r\n        render: function () {\r\n            var thisView = this;\r\n            this.$el.autocomplete({\r\n                source: thisView.getAutocompleteCustomers,\r\n                select: function (event, ui) {\r\n                    if (!ui.item.value) {\r\n                        return;\r\n                    } else {\r\n                        thisView.model.set(thisView.column.attributes.name, ui.item.label);\r\n                    }\r\n                    thisView.saveOrCancel(event);\r\n                },\r\n                close: function (event) {\r\n                    thisView.saveOrCancel(event);\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n        getAutocompleteCustomers: function (request, response) {\r\n            var thisView = this;\r\n            var term = request.term;\r\n            if (term.length < this.minTermLength) {\r\n                response([]);\r\n                return;\r\n            }\r\n            $.ajax({\r\n                url: thisView.autocompleteUrl + term,\r\n                contentType: 'application/json',\r\n                type: 'GET',\r\n                success: function (data) {\r\n                    var results = [];\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        if (typeof thisView.resultsFormatter == 'function')\r\n                            results.push(thisView.resultsFormatter(data[i]));\r\n                        else if (thisView.labelProperty) results.push({\r\n                            label: data[i][thisView.labelProperty]\r\n                        });\r\n                        else results.push({\r\n                                label: data[i]\r\n                            });\r\n                    }\r\n                    results = _.compact(results);\r\n                    if (results.length == 0) {\r\n                        results.push({\r\n                            label: \"No results found\",\r\n                            value: \"\"\r\n                        });\r\n                    }\r\n                    response(results);\r\n                    return;\r\n                },\r\n                error: function (err) {\r\n                    results.push({\r\n                        label: \"No results found\",\r\n                        value: \"\"\r\n                    });\r\n                    response(results);\r\n                    return;\r\n                }\r\n            });\r\n        },\r\n        saveOrCancel: function (e) {\r\n            var model = this.model;\r\n            var column = this.column;\r\n\r\n            var command = new Backgrid.Command(e);\r\n            if (e.type == \"autocompleteclose\") {\r\n                e.stopPropagation();\r\n                model.trigger(\"backgrid:edited\", model, column, command);\r\n            }\r\n        },\r\n        postRender: function (model, column) {\r\n            if (column == null || column.get(\"name\") == this.column.get(\"name\")) {\r\n                // move the cursor to the end on firefox if text is right aligned\r\n                if (this.$el.css(\"text-align\") === \"right\") {\r\n                    var val = this.$el.val();\r\n                    this.$el.focus().val(null).val(val);\r\n                } else this.$el.focus();\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    var cellType = function (typeUI, enumerable, lookupObj) {\r\n        //type string is converted to \"StringCell\" and a corresponding class in the Backgrid package namespace\r\n        // Possible typeUI:     “textbox”,”textUpperbox”,\"numberbox\",\"currencybox\",\"integerbox\",\"percentbox\", \"urlbox\", ”areabox”, ”combobox”, ”checkbox”,\r\n        //                      “phonebox”, “datetimebox”,\"emailbox\",\"lookupbox\"\r\n        // enumerable - an array with the dropdown field options applicable to typeUI=\"combobox\" - if not combobox =>enumerable = null\r\n        // lookupObj - an object with property data, (and methods) applicable to typeUI=\"lookupbox\" - - if not lookupbox =>enumerable = null\r\n        if (typeUI == \"textbox\")\r\n            typeUI = \"string\";\r\n        else if (typeUI == \"datebox\")\r\n            typeUI = \"datetimebox\";\r\n        var retObj = {cell: typeUI};\r\n        // if( typeUI!=\"string\" && typeUI!=\"integer\" && typeUI!=\"number\" && typeUI!=\"date\" && typeUI!=\"uri\"){\r\n        if (typeUI != \"string\") {\r\n            if (typeUI == \"textUpperbox\") {\r\n                var formatterObj = {\r\n                    fromRaw: function (rawValue) {\r\n                        rawValue += ''; //to convert any value to string\r\n                        return rawValue.toUpperCase();\r\n                    }\r\n                };\r\n                retObj[\"cell\"] = \"string\";\r\n                retObj[\"formatter\"] = formatterObj;\r\n            } else if (typeUI == \"numberbox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                var decimals = FL.common.appsettings.decimals;\r\n                NumberCellEditor.prototype.decimals = decimals;\r\n                var decimalFormatter = {\r\n                    fromRaw: function (rawValue) {\r\n                        var num = Number(rawValue);\r\n                        // var numStr = accounting.formatMoney(num,\"€\",2,FL.common.appsettings.thousandsSeparator,FL.common.appsettings.radixpoint);\r\n                        // return numStr;\r\n                        return num.toFormattedString(decimals);\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        return FL.common.currencyToStringNumber(formattedData);\r\n                    }\r\n                };\r\n                var numberCell = Backgrid.StringCell.extend({\r\n                    className: \"_fl_numeric-cell\",\r\n                    formatter: decimalFormatter,\r\n                    editor: NumberCellEditor,\r\n                });\r\n                retObj[\"cell\"] = numberCell;\r\n            } else if (typeUI == \"currencybox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                var decimals = FL.common.appsettings.decimals;\r\n                var currency = FL.common.appsettings.currency;\r\n                CurrencyCellEditor.prototype.decimals = decimals;\r\n                CurrencyCellEditor.prototype.currency = currency;\r\n                var currencyFormatter = {\r\n                    fromRaw: function (rawValue) {\r\n                        var num = Number(rawValue);\r\n                        // var numStr = accounting.formatMoney(num,\"€\",2,FL.common.appsettings.thousandsSeparator,FL.common.appsettings.radixpoint);\r\n                        // return numStr;\r\n                        return currency + num.toFormattedString(decimals);\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        var z = FL.common.currencyToStringNumber(formattedData);\r\n                        return FL.common.currencyToStringNumber(formattedData);\r\n                    }\r\n                };\r\n                var currencyCell = Backgrid.StringCell.extend({\r\n                    className: \"_fl_numeric-cell\",\r\n                    formatter: currencyFormatter,\r\n                    editor: CurrencyCellEditor,\r\n                });\r\n                retObj[\"cell\"] = currencyCell;\r\n            } else if (typeUI == \"integerbox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                var integerFormatter = {\r\n                    fromRaw: function (rawValue) {\r\n                        var num = Number(rawValue);\r\n                        // var numStr = accounting.formatMoney(num,\"€\",2,FL.common.appsettings.thousandsSeparator,FL.common.appsettings.radixpoint);\r\n                        // return numStr;\r\n                        return num.toFormattedString(0);\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        var z = FL.common.currencyToStringNumber(formattedData);\r\n                        return FL.common.currencyToStringNumber(formattedData);\r\n                    }\r\n                };\r\n                var integerCell = Backgrid.StringCell.extend({\r\n                    className: \"_fl_integer-cell\",\r\n                    formatter: integerFormatter,\r\n                    editor: IntegerCellEditor,\r\n                });\r\n                retObj[\"cell\"] = integerCell;\r\n            } else if (typeUI == \"percentbox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                var decimals = FL.common.appsettings.decimals;\r\n                PercentCellEditor.prototype.decimals = decimals;\r\n                // PercentCellEditor.prototype.currency = currency;\r\n                var percentFormatter = {\r\n                    fromRaw: function (rawValue) {\r\n                        var num = Number(rawValue);\r\n                        // var numStr = accounting.formatMoney(num,\"€\",2,FL.common.appsettings.thousandsSeparator,FL.common.appsettings.radixpoint);\r\n                        // return numStr;\r\n                        return num.toFormattedString(decimals) + \"%\";\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        var z = FL.common.currencyToStringNumber(formattedData);\r\n                        return FL.common.currencyToStringNumber(formattedData);\r\n                    }\r\n                };\r\n                var percentCell = Backgrid.StringCell.extend({\r\n                    className: \"_fl_percent-cell\",\r\n                    formatter: percentFormatter,\r\n                    editor: PercentCellEditor,\r\n                });\r\n                retObj[\"cell\"] = percentCell;\r\n            } else if (typeUI == \"urlbox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                retObj[\"cell\"] = \"uri\";\r\n            } else if (typeUI == \"areabox\") {//http://backbone-paginator.github.io/backbone.paginator/examples/js/extensions/text-cell/backgrid-text-cell.js\r\n                retObj[\"cell\"] = \"text\";\r\n            } else if (typeUI == \"combobox\") {\r\n                var enumArrOfArr = _.map(enumerable, function (element) {\r\n                    return [element, element];\r\n                });\r\n                var comboCell = Backgrid.SelectCell.extend({\r\n                    // It's possible to render an option group or use a\r\n                    // function to provide option values too.\r\n                    // optionValues: [[\"Male\", \"m\"], [\"Female\", \"f\"]]\r\n                    optionValues: enumArrOfArr\r\n                });\r\n                retObj[\"cell\"] = comboCell;\r\n            } else if (typeUI == \"checkbox\") {\r\n                var BooleanCell = Backgrid.BooleanCell.extend({\r\n                    editor: Backgrid.BooleanCellEditor.extend({\r\n                        render: function () {\r\n                            var model = this.model;\r\n                            var columnName = this.column.get(\"name\");\r\n                            var val = this.formatter.fromRaw(model.get(columnName), model);\r\n                            /*\r\n                             * Toggle checked property since a click is what triggered enterEditMode\r\n                             */\r\n                            this.$el.prop(\"checked\", !val);\r\n                            model.set(columnName, !val);\r\n                            return this;\r\n                        }\r\n                    })\r\n                });\r\n                retObj[\"cell\"] = BooleanCell;\r\n            } else if (typeUI == \"phonebox\") {\r\n                var z = \"JOJO\";\r\n                PhoneCellEditor.prototype.z = z;\r\n                var phoneCell = Backgrid.Cell.extend({\r\n                    //z:\"JOJO\",\r\n                    initialize: function (options) {\r\n                        // alert(this.options.z);\r\n                        phoneCell.__super__.initialize.apply(this, arguments);\r\n                        this.listenTo(this.model, \"backgrid:editing\", function (model, column, command) {\r\n                            console.log(\"editing !!!!!!!!!!!!! ->\" + JSON.stringify(model.toJSON()));\r\n                        });\r\n                        this.model.on('change', function () {\r\n                            console.log(\"model change !!!!\");\r\n                        });\r\n                        // this.listenTo(this.model, \"backgrid:error\", function(model,column,command){\r\n                        // \talert(\"error !!!!!!!!!!!!! ->\");\r\n                        // });\r\n                    },\r\n                    editor: PhoneCellEditor,\r\n                    xrender: function () {\r\n                        //this.$el.html(this.template(this.model.attributes));\r\n                        console.log(\"render-->\" + this.$el.val());\r\n                        return this;\r\n                    }\r\n                });\r\n                var formatterObj = _.extend({}, Backgrid.CellFormatter.prototype, {\r\n                    fromRaw: function (rawValue) {\r\n                        // if ( !validatePhone2(rawValue) )\r\n                        // \trawValue = \"Invalid phone\";\r\n                        console.log(\"fromRaw------------------>\" + rawValue);\r\n                        return rawValue;\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        // if ( !FL.common.is_ValidDate(formattedData) )\r\n                        // \treturn undefined;\r\n                        console.log(\"toRaw-->\" + formattedData);\r\n                        return formattedData; //+ \"X\";\r\n                    }\r\n                });\r\n                retObj[\"cell\"] = phoneCell;\r\n                retObj[\"formatter\"] = formatterObj;\r\n            } else if (typeUI == \"datetimebox\") {\r\n                var DateCell = Backgrid.Cell.extend({\r\n                    initialize: function (options) {\r\n                        DateCell.__super__.initialize.apply(this, arguments);\r\n                        this.model.on('change', function (e) {\r\n                            console.log(\" datetime model change !!!! ----->\" + JSON.stringify(this.model.toJSON()));\r\n                        }, this);\r\n                    },\r\n                    editor: DateTimeCellEditor,\r\n                });\r\n                var formatterObj = _.extend({}, Backgrid.CellFormatter.prototype, {\r\n                    fromRaw: function (rawValue) {\r\n                        var initial = rawValue;\r\n                        rawValue = FL.common.fromISODateToShortdateTime(rawValue, setDateformat().format);\r\n                        if (!rawValue)\r\n                            rawValue = \"Invalid Datetime\";\r\n                        console.log(\"fromRaw  transformed:\" + initial + \" into -->\" + rawValue);\r\n                        return rawValue;\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        var initial = formattedData;\r\n                        if (validateDatetime(formattedData)) {\r\n                            formattedData = FL.common.toISODate(formattedData, setDateformat().format);\r\n                        } else {\r\n                            return \"invalid datetime\";\r\n                        }\r\n                        console.log(\"toRaw  transformed:\" + initial + \" into -->\" + formattedData);\r\n                        return formattedData; //+ \"X\";\r\n                    }\r\n                });\r\n                retObj[\"cell\"] = DateCell;\r\n                retObj[\"formatter\"] = formatterObj;\r\n            } else if (typeUI == \"emailbox\") {\r\n                var EmailCell = Backgrid.EmailCell.extend({\r\n                    className: \"email-cell\",\r\n                    render: function () {\r\n                        this.$el.empty();\r\n                        var formattedValue = this.formatter.fromRaw(this.model.get(this.column.get(\"name\")));\r\n                        this.$el.append($(\"<a>\", {\r\n                            tabIndex: -1,\r\n                            title: formattedValue\r\n                        }).text(formattedValue));\r\n                        this.delegateEvents();\r\n                        return this;\r\n                    }\r\n                });\r\n                var formatterObj = _.extend({}, Backgrid.CellFormatter.prototype, {\r\n                    fromRaw: function (rawValue) {\r\n                        if (!FL.common.validateEmail(rawValue))\r\n                            rawValue = \"Invalid email\";\r\n                        return rawValue;\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        if (!FL.common.validateEmail(formattedData))\r\n                            return undefined;\r\n                        return formattedData; //+ \"X\";\r\n                    }\r\n                });\r\n                retObj[\"cell\"] = EmailCell;\r\n                retObj[\"formatter\"] = formatterObj;\r\n            } else if (typeUI == \"lookupbox\") {\r\n                // var lookupCell = Backgrid.Extension.AutocompleteCell.extend({\r\n                // \trender: function(){\r\n                // \t\tconsole.log(\"lookup render-->\"+this.$el.val());\r\n                // \t\treturn this;\r\n                // \t}\r\n                // )};\r\n                //NumberCellEditor.prototype.decimals = decimals;\r\n                AutocompleteCellEditor.prototype.lookupObj = lookupObj;\r\n                var formatterObj = _.extend({}, Backgrid.CellFormatter.prototype, {\r\n                    fromRaw: function (rawValue) {\r\n                        console.log(\"fromRaw------------------>\" + rawValue);\r\n                        return rawValue + \"_In\";\r\n                    },\r\n                    toRaw: function (formattedData) {\r\n                        alert(\"searchbox toRaw-->\" + formattedData);\r\n                        return formattedData + \"_Out\";\r\n                    }\r\n                });\r\n                var autocompleteCell = Backgrid.StringCell.extend({\r\n                    initialize: function (options) {\r\n                        Backgrid.StringCell.prototype.initialize.apply(this, arguments);\r\n                        this.listenTo(this.model, \"backgrid:edit\", function (model, column, cell, editor) {\r\n                            if (column.get(\"name\") == this.column.get(\"name\")) {\r\n                                editor.setAutocompleteOptions(this.autocompleteOptions);\r\n                            }\r\n                        });\r\n                    },\r\n                    className: \"autocomplete-cell\",\r\n                    editor: AutocompleteCellEditor\r\n                });\r\n                //retObj[\"cell\"] = Backgrid.Extension.AutocompleteCell;\r\n                retObj[\"cell\"] = autocompleteCell;\r\n                // retObj[\"cell\"] = lookupCell;// Backgrid.Extension.AutocompleteCell;\r\n                retObj[\"autocompleteUrl\"] = \"/names\";\r\n                retObj[\"minTermLength\"] = 3;\r\n                retObj[\"labelProperty\"] = \"name\";\r\n                retObj[\"formatter\"] = formatterObj;\r\n            } else if (typeUI == \"urllbox\") {\r\n                retObj[\"cell\"] = \"uri\";\r\n            } else {\r\n                alert(\"FL.bg cellType error unknown typeUI !!!-->\" + typeUI);\r\n            }\r\n        }\r\n        return retObj;\r\n    };\r\n    return {\r\n        dateFormat: \"MDY\",//possible values:\"YMD\",\"MDY\",\"DMY\"\r\n        // colDef: function(name,label,nesting,width,type,enumerable) {\r\n        colDef: function (gridDefinition, field, lookupObj) {\r\n            //colDef will receive two type of data:\r\n            //\t grid definition data - label, nestingArr, width\r\n            //\t field dictionary data  - name, typeUI, enumerable, decimals\r\n            //   lookupObj - a table object (built with FL.API.openTable)\r\n            //name - The key of the model attribute\r\n            //label - The name to display in the header\r\n            //nesting - default is [], -->one title above [\"General\"], -->2 titles above  [\"General\", \"Detail\"]\r\n            //type ->\"string\",\"integer\",\"number\",\"date\",\"uri\",\"stringUpper\",\"email\",\"area\",\"phone\",\"datetime\"\r\n            // Old Examples\r\n            //\t   FL.bg.colDef(\"name\",\"Name JO\",[\"General JO\"],\"*\",\"datetime\"),\r\n            //     FL.bg.colDef(\"pop\",\"Population JO\", [\"Custom\",\"numbers\"],20,\"integer\"),\r\n            //     FL.bg.colDef(\"percentage\",\"% of World Population JO\",[\"Custom\", \"numbers\"],100,\"number\"),\r\n\r\n            // var retObj = {name:name,label:label,nesting:nesting,width:width,resizeable:true,orderable:true};\r\n            var retObj = {\r\n                name: field.name,\r\n                label: gridDefinition.label,\r\n                nesting: gridDefinition.nesting,\r\n                width: gridDefinition.width,\r\n                resizeable: true,\r\n                orderable: true\r\n            };\r\n            _.extend(retObj, cellType(field.typeUI, field.enumerable,lookupObj));\r\n            return retObj;\r\n        },\r\n        getGridDefaultLayout: function (eCN) {//returns an object {baseTable:eCN,format:[array of objects defining each column]}\r\n            // the array of objects returned in getGridDefaultLayout().format can be produced by a grid designer\r\n            // returns an array of {fCN:fCN,label:label,width:\"*\",nestingArr:nestingArr,type:\"field\"} with as many elements as attributres in data dictionary\r\n            //  where for column i:\r\n            //    fCN - field compressed name to present in column i\r\n            //    label - column title\r\n            //    width - column width\r\n            //ex : var gridLayout = FL.bg.getGridDefaultLayout(eCN);\r\n            var layoutObj = null;\r\n            var gridFormat = [];\r\n            // var colDefinition = {fCN:null,label:null,width:\"*\",nestingArr:[]};\r\n            var entityName = FL.dd.getEntityByCName(eCN);\r\n            if (entityName) {\r\n                var oEntity = FL.dd.getEntityBySingular(entityName);\r\n                var arrOfAttributes = oEntity.attributes;\r\n                var L2C = oEntity.L2C;\r\n                _.each(arrOfAttributes, function (element, index) {\r\n                    if (element.name != \"id\") {\r\n                        var fCN = L2C[element.name];//element.name;\r\n                        var label = element.label;\r\n                        var nestingArr = [];\r\n                        var colDefinition = {fCN: fCN, label: label, width: \"*\", nestingArr: nestingArr};\r\n                        gridFormat.push(colDefinition);\r\n                    }\r\n                }, this);\r\n                layoutObj = {\"baseTable\": eCN, \"format\": gridFormat};\r\n            } else {\r\n                alert(\"FL.bg.getGridDefaultDefinition Error: entity with compressed name='\" + eCN + \"' does not exist in local Dictionary.\");\r\n            }\r\n            return layoutObj;\r\n        },\r\n        setupGridColumnsArr: function (oLayout, lookupObj) {//returns the columnArr to be used in utils.mountGridInCsvStore\r\n            // ex: var columnsArr = FL.bg.setupGridColumnsArr(gridLayout);\r\n            var columnsArr = [];\r\n            //if(lookupObj){\r\n            //\talert(\"prepareGridColumnsArr lookup !!! ->\" + JSON.stringify(lookupObj));\r\n            //}\r\n            // FL.dd.init_t();//to init the temporary subsystem\r\n            // var arrOfFieldsObj = FL.dd.t.entities[oLayout.baseTable].fieldsList();\r\n            _.each(oLayout.format, function (element, index) {//each element of oLayout.format array is like {fCN:\"50\",\"1st Column\",width:20,nestingArr:[]}\r\n                console.log(element.fCN);\r\n                // var name = FL.dd.t.entities[oLayout.baseTable].fields[element.fCN].name;\r\n                // var typeUI = FL.dd.t.entities[oLayout.baseTable].fields[element.fCN].typeUI;\r\n                // var enumerable = FL.dd.t.entities[oLayout.baseTable].fields[element.fCN].enumerable;\r\n                // var ddFieldDefinition = {name:name,typeUI:typeUI,enumerable:enumerable};\r\n                var gridDefinition = {label: element.label, nestingArr: element.nestingArr, width: element.width};\r\n                //var arrElObj = FL.bg.colDef(name,element.label,element.nestingArr,element.width,typeUI,enumerable);\r\n                var field = FL.dd.t.entities[oLayout.baseTable].fields[element.fCN];\r\n                if (field.typeUI == \"lookupbox\") {\r\n                    //alert(\"setupGridColumnsArr  !!! ->\" + JSON.stringify(field) + \"\\n gridDefinition ->\" + JSON.stringify(gridDefinition));\r\n                    //alert(\"setupGridColumnsArr  specialTypeDef=\" + JSON.stringify(field.specialTypeDef));\r\n                    var fCN = field.specialTypeDef[0].fCN;\r\n                    alert(\"setupGridColumnsArr  ***********************************  specialTypeDef=\" + JSON.stringify(lookupObj.getColumn(fCN)));\r\n\r\n                    //FL.API.openTable(\"6A\")\r\n\r\n                }\r\n                var arrElObj = FL.bg.colDef(gridDefinition, field, lookupObj);\r\n                arrElObj = _.omit(arrElObj, [\"nesting\", \"orderable\", \"resizeable\", \"width\"]);//temporary while these propoerties are inactive\r\n                columnsArr.push(arrElObj);\r\n            }, this);\r\n            //inserts auxiliary columns upfront\r\n            columnsArr.unshift({name: \"\", cell: \"select-row\", headerCell: \"select-all\"}, {\r\n                editable: false,\r\n                label: \"#\",\r\n                name: \"id\",\r\n                cell: Backgrid.IntegerCell.extend({orderSeparator: ''})\r\n            });\r\n            return columnsArr;//each element of columnsArr array is like {cell:\"string\",label:\"a\",name:\"a\"...eventually others}\r\n        },\r\n        testFunc: function (x) {\r\n            return \"FL.bg.test() -->\" + x;\r\n        }\r\n    };\r\n})();"]}