{"version":3,"sources":["FLdd2.js"],"names":[],"mappings":";;;;;;;;;aAUA,EAAE,GAAG,AAAC,OAAO,EAAE,KAAK,WAAW,CAAI,EAAE,CAAG,EAAE,CAAC,AAC3C,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GpB,IAAI,aAAa,CAAG,SAAhB,aAAa,CAAa,QAAQ,CAAE;AACpC,IAAI,IAAI,CAAG,EAAE,CAAC;AAEd,IAAI,OAAO,CAAG,CAAC,CAAC,AAChB,IAAI,SAAS,CAAG,iEAAiE,CAAC;;;;;;AAOlF,IAAI,cAAc,CAAG,SAAS,CAAC,MAAM,CAAC,AAEtC,IAAI,EAAE,CAAG,QAAQ,CAAC,AAClB,MAAO,EAAE,GAAG,CAAC,EAAE,CACX,IAAI,IAAI,CAAG,EAAE,GAAG,cAAc,CAAC,AAC/B,IAAI,EAAE,CAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,AACnC,IAAI,IAAI,EAAE,CAAC,AACX,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,CACxC,AACD,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,AACjB,MAAO,EAAE,GAAG,OAAO,EAAE,CACjB,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,AAC/B,EAAE,EAAE,CAAC,CACR;AAED,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,AACxB,OAAO,IAAI,CAAC,CACf,CAAC,AACF,IAAI,UAAU,CAAG,SAAb,UAAU,CAAa,GAAG,CAAE;AAC5B,IAAI,IAAI,CAAG,EAAE,CAAC,AACd,IAAI,IAAI,CAAG,GAAG,CAAC,MAAM,CAAC,AACtB,IAAK,IAAI,EAAE,CAAG,IAAI,GAAG,CAAC,CAAE,EAAE,IAAI,CAAC,CAAE,EAAE,EAAE,EAAE,CACnC,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,CAC7B,AACD,OAAO,IAAI,CAAC,CACf,CAAC,AACF,IAAI,WAAU,CAAG,SAAb,WAAU,CAAa,KAAK,CAAE,SAAS,CAAE;;AAEzC,GAAI,CAAC,KAAK,CACN,OAAO,IAAI,CAAC,AAChB,IAAI,IAAI,CAAG,CAAC,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,AAC5D,IAAI,QAAQ,CAAG,IAAI,CAAC,SAAS,CAAC,CAAC,AAC/B,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,AAChC,IAAI,IAAI,CAAG,KAAK,CAAC,MAAM,CAAC,AACxB,IAAI,KAAK,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AAEtC,OAAQ,SAAS,EACb,KAAK,IAAI,CACL,GAAI,AAAC,OAAO,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9B,QAAQ,GAAG,IAAI,CAAC,AACpB,MAAM,AACV,KAAK,IAAI,CACL,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AACvC,GAAI,AAAC,UAAU,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CACjC,QAAQ,GAAG,KAAK,CAAC,AACrB,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AACvC,GAAI,AAAC,qCAAqC,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAC5D,QAAQ,GAAG,KAAK,CAAC,AACrB,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AACvC,GAAI,AAAC,8DAA8D,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CACrF,QAAQ,GAAG,KAAK,CAAC,AACrB,MAAM,AACV,KAAK,IAAI,CACL,GAAI,KAAK,IAAI,GAAG,CACZ,QAAQ,GAAG,KAAK,CAAC,AACrB,MAAM,CACb,AACD,OAAO,QAAQ,GAAG,GAAG,GAAG,KAAK,CAAC,CACjC,CAAC;AACF,IAAI,OAAM,CAAG,SAAT,OAAM,CAAa,KAAK,CAAE,SAAS,CAAE;;AAErC,IAAI,KAAK,CAAG,KAAK,CAAC,AAClB,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,AAChC,IAAI,IAAI,CAAG,KAAK,CAAC,MAAM,CAAC,AACxB,IAAI,KAAK,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AACtC,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AACvC,IAAI,MAAM,CAAG,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,AAEvC,OAAQ,SAAS,EACb,KAAK,IAAI;AAEL,GAAI,AAAC,GAAG,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAC3B,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CACxB,KAAM,GAAI,AAAC,GAAG,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAClC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;CAC7C,KAAM,GAAI,AAAC,UAAU,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AAC1C,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;AACrB,GAAI,AAAC,mBAAmB,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;AACzC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CAC3B,KAAM,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACpC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;CAC7C,KAAM,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACpC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;CAC7C,KAAM;AACH,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CACvB;AAED,IAAI,IAAI,CAAG,CACP,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,OAAO,CACd,KAAK,CAAE,UAAU,CACjB,KAAK,CAAE,MAAM,CACb,KAAK,CAAE,OAAO,CACd,KAAK,CAAE,OAAO,CACd,IAAI,CAAE,MAAM,CACZ,EAAE,CAAE,MAAM,CACb,CAAC,AACF,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,AACnB,GAAI,IAAI,CACJ,KAAK,GAAG,IAAI,CAAC,AACjB,MAAM,AACV,KAAK,IAAI;AAEL,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAC5B,KAAK,GAAG,KAAK,CAAC;CACjB,KAAM,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACpC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;CAC5C,KAAM,GAAI,AAAC,OAAO,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;CACvB,KAAM;AACH,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CACvB,AACD,MAAM,AACV,KAAK,IAAI;;AAGL,GAAI,AAAC,KAAK,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAC7B,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CACxB,KAAM,GAAI,AAAC,aAAa,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AAC7C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;CAC5C,KAAM,GAAI,AAAC,SAAS,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACzC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;CAC7C,KAAM,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACpC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;CAC5C,KAAM;AACH,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CACvB,AACD,MAAM,AACV,KAAK,IAAI;;AAGL,GAAI,AAAC,OAAO,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAC/B,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;AACpB,GAAI,AAAC,iCAAiC,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;AACvD,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CAC3B,KAAM;AACH,GAAI,AAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAC5B,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CAChC,KAAM,GAAI,AAAC,mBAAmB,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACnD,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;CACvB,KAAM,GAAI,AAAC,iBAAiB,CAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;AACjD,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;CACvB,KAAM,GAAI,AAAC,GAAG,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAE;AAClC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;CAC7C,KAAM;AACH,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CACxB,CACJ,AACD,MAAM,CACb,AACD,OAAO,KAAK,CAAC,CAChB,CAAC;AACF,IAAI,UAAU,CAAG,SAAb,UAAU,CAAa,EAAE,CAAE,EAAE,CAAE,KAAK,CAAE,SAAS,CAAE;;;;;;;;;;;AAWjD,IAAI,IAAI,CAAG;AACP,IAAI,CAAE,CACF,CAAC,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,GAAG,CAAE,WAAW,CAAE,GAAG,CAAE,EAAE,CAAC,CACvC,CAAC,CAAE,CAAC,GAAG,CAAE,2BAA2B,CAAE,GAAG,CAAE,sBAAsB,CAAE,GAAG,CAAE,EAAE,CAAC,CAC9E,CACD,IAAI,CAAE,CACF,CAAC,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,GAAG,CAAE,YAAY,CAAE,GAAG,CAAE,EAAE,CAAC,CACxC,CAAC,CAAE,CAAC,GAAG,CAAE,0BAA0B,CAAE,GAAG,CAAE,0BAA0B,CAAE,GAAG,CAAE,EAAE,CAAC,CACjF,CACD,IAAI,CAAE,CACF,CAAC,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,GAAG,CAAE,UAAU,CAAE,GAAG,CAAE,EAAE,CAAC,CACtC,CAAC,CAAE,CAAC,GAAG,CAAE,2BAA2B,CAAE,GAAG,CAAE,kBAAkB,CAAE,GAAG,CAAE,EAAE,CAAC,CAC1E,CACD,IAAI,CAAE,CACF,CAAC,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,GAAG,CAAE,QAAQ,CAAE,GAAG,CAAE,EAAE,CAAC,CACpC,CAAC,CAAE,CAAC,GAAG,CAAE,8BAA8B,CAAE,GAAG,CAAE,2BAA2B,CAAE,GAAG,CAAE,EAAE,CAAC,CACtF,CACJ,CAAC,AACF,IAAI,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,AACnC,IAAI,IAAI,CAAG,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,AACvD,OAAO,IAAI,CAAC,CACf,CAAC;AACF,IAAI,eAAe,CAAG,SAAlB,eAAe,CAAa,OAAO,CAAE,KAAK,CAAE,SAAS,CAAE;;;;;AAKvD,IAAI,IAAI,CAAG,IAAI,CAAC,AAChB,GAAI,KAAK,IAAI,GAAG,CAAE,CACd,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAE,OAAO,CAAC,WAAW,CAAE,GAAG,CAAE,IAAI,CAAC,CAAC,CACvE,KAAM,GAAI,KAAK,IAAI,GAAG,CAAE,CACrB,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAE,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,IAAI,CAAC,CAAC,CAClE,KAAM,CACH,KAAK,CAAC,8CAA8C,GAAG,KAAK,GAAG,qBAAqB,CAAC,CAAC;CAEzF,AACD,OAAO,IAAI,CAAC,CACf,CAAC;AACF,IAAI,kBAAkB,CAAG,SAArB,kBAAkB,CAAa,UAAU,CAAE,gBAAgB,CAAE,OAAO,CAAE,SAAS,CAAE;;;AAGjF,IAAI,IAAI,CAAG;AACP,IAAI,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,MAAM,CAAE,GAAG,CAAE,EAAE,CAAC,CACxD,IAAI,CAAE,CAAC,GAAG,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,SAAS,CAAE,GAAG,CAAE,EAAE,CAAC,CAC1D,IAAI,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,IAAI,CAAE,UAAU,CAAE,IAAI,CAAE,UAAU,CAAE,GAAG,CAAE,EAAE,CAAC,CAChE,IAAI,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,KAAK,CAAE,GAAG,CAAE,EAAE,CAAC,CACtD,CAAC,AACF,IAAI,SAAS,CAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,OAAO,SAAS,CAAC,GAAG,GAAG,UAAU,GAAG,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,GAAG,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,CAC7H,CAAC;AACF,IAAI,0BAA0B,CAAG,SAA7B,0BAA0B,CAAa,KAAK,CAAE;AAE9C,IAAI,IAAI,CAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,AAC5B,IAAI,IAAI,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1B,IAAI,KAAK,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;;AAExC,IAAI,IAAI,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAC9C,OAAO,IAAI,CAAC,CACf,CAAC,AACF,IAAI,iBAAiB,CAAG,SAApB,iBAAiB,CAAa,KAAK,CAAE,SAAS,CAAE;;;;;;;;;;;;;;;;;;;;AAoBhD,IAAI,UAAU,CAAG,CACb,IAAI,CAAE,CAAC,SAAS,CAAE,gBAAgB,CAAE,KAAK,CAAE,gBAAgB,CAAE,YAAY,CAAE,MAAM,CAAC,CAClF,IAAI,CAAE,CAAC,SAAS,CAAE,cAAc,CAAE,GAAG,CAAE,cAAc,CAAC,CACtD,IAAI,CAAE,CAAC,SAAS,CAAE,YAAY,CAAE,KAAK,CAAE,YAAY,CAAC,CACpD,IAAI,CAAE,CAAC,SAAS,CAAE,gBAAgB,CAAE,OAAO,CAAE,gBAAgB,CAAC,CACjE,CAAC;AAEF,IAAI,IAAI,CAAG,UAAU,CAAC,SAAS,CAAC,CAAC,AACjC,IAAI,IAAI,CAAG,IAAI,CAAC,AAChB,GAAI,IAAI,CAAE,CACN,IAAK,IAAI,GAAG,IAAI,IAAI,EAAE,CAClB,GAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAE,CAC1B,GAAI,GAAG,IAAI,KAAK,CACZ,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CACxB,CACJ,CACJ,AACD,GAAI,IAAI,CACJ,OAAO,IAAI,CAAC,AAChB,IAAI,IAAI,CAAG,KAAK,CAAC,MAAM,CAAC,AACxB,IAAI,IAAI,CAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,AAC5B,IAAI,KAAK,CAAG,IAAI,CAAC,AACjB,IAAI,MAAM,CAAG,IAAI,CAAC,AAClB,OAAQ,SAAS,EACb,KAAK,IAAI,CACL,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AACjB,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CACjB,GAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAE;AAC7C,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;CAC1B,KAAM,CACH,IAAI,GAAG,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAC5C,CACJ,KAAM,GAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAE;AACxB,IAAI,GAAG,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAC5C,CACJ,KAAM,GAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAE;AACzB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,AACtB,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;AACpC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;AACrC,GAAI,MAAM,IAAI,IAAI,CAAE;AAChB,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CACxD,KAAM,GAAI,KAAK,IAAI,GAAG,CAAE;AACrB,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CACxD,CACJ,AACD,MAAM,AACV,KAAK,IAAI,CACL,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AACjB,GAAI,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAE;AAChB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,AACtB,IAAI,MAAM,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;AACzC,GAAI,MAAM,IAAI,KAAK,CACf,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAChD,CACJ,KAAM,GAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAE;AACzB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,AACtB,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;AACpC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;AACrC,GAAI,MAAM,IAAI,IAAI,CAAE;AAChB,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CACxD,KAAM,GAAI,KAAK,IAAI,GAAG,CAAE;AACrB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CACpC,CACJ,AACD,MAAM,CACb;AACD,GAAI,CAAC,IAAI,CACL,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,AAC3B,OAAO,IAAI,CAAC,CACf,CAAC;AACF,IAAI,kBAAkB,CAAG,SAArB,kBAAkB,CAAa,YAAY,CAAE,SAAS,CAAE;;;;;;;;;AASxD,IAAI,IAAI,CAAG;AACP,IAAI,CAAE,CACF,GAAG,CAAE,CAAC,IAAI,CAAE,WAAW,CAAE,UAAU,CAAE,KAAK,CAAC,CAC3C,GAAG,CAAE,CAAC,IAAI,CAAE,MAAM,CAAE,UAAU,CAAE,IAAI,CAAC,CACrC,GAAG,CAAE,CAAC,IAAI,CAAE,kBAAkB,CAAE,UAAU,CAAE,KAAK,CAAC,CACrD,CACD,IAAI,CAAE,CACF,GAAG,CAAE,CAAC,IAAI,CAAE,WAAW,CAAE,UAAU,CAAE,KAAK,CAAC,CAC3C,GAAG,CAAE,CAAC,IAAI,CAAE,WAAW,CAAE,UAAU,CAAE,IAAI,CAAC,CAC1C,GAAG,CAAE,CAAC,IAAI,CAAE,oBAAoB,CAAE,UAAU,CAAE,KAAK,CAAC,CACvD,CACD,IAAI,CAAE,CACF,GAAG,CAAE,CAAC,IAAI,CAAE,UAAU,CAAE,UAAU,CAAE,KAAK,CAAC,CAC1C,GAAG,CAAE,CAAC,IAAI,CAAE,OAAO,CAAE,UAAU,CAAE,IAAI,CAAC,CACtC,GAAG,CAAE,CAAC,IAAI,CAAE,aAAa,CAAE,UAAU,CAAE,KAAK,CAAC,CAChD,CACD,IAAI,CAAE,CACF,GAAG,CAAE,CAAC,IAAI,CAAE,WAAW,CAAE,UAAU,CAAE,KAAK,CAAC,CAC3C,GAAG,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,UAAU,CAAE,IAAI,CAAC,CACvC,GAAG,CAAE,CAAC,IAAI,CAAE,gBAAgB,CAAE,UAAU,CAAE,KAAK,CAAC,CACnD,CACJ,CAAC,AACF,IAAI,SAAS,CAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,SAAS,GAAG,IAAI,CAAC,AACjB,WAAW,GAAG,KAAK,CAAC,AACpB,GAAI,SAAS,CAAE;AACX,IAAI,QAAQ,CAAG,SAAS,CAAC,YAAY,CAAC,CAAC,AACvC,GAAI,QAAQ,CAAE,CACV,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,AAC1B,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC,CACrC,CACJ,AACD,OAAO,CAAC,QAAQ,CAAE,SAAS,CAAE,UAAU,CAAE,WAAW,CAAC,CAAC;CACzD,CAAC;AACF,IAAI,kBAAiB,CAAG,SAApB,kBAAiB,CAAa,SAAS,CAAE,YAAY,CAAE,KAAK,CAAE,YAAY,CAAE,SAAS,CAAE;;;;AAIvF,IAAI,IAAI,CAAG,SAAS,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,AACzC,IAAI,KAAK,CAAG,kBAAkB,CAAC,YAAY,CAAE,SAAS,CAAC,CAAC,AACxD,GAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,CACjB,KAAK,CAAC,mEAAmE,GAAG,YAAY,GAAG,YAAY,GAAG,SAAS,CAAC,CAAC;CAExH,AACD,IAAI,IAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,AAC7B,IAAI,MAAM,CAAG,YAAY,CAAC;AAC1B,GAAI,KAAK,CAAC,UAAU,CAAE,CAClB,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,AAC7C,GAAI,CAAC,MAAM,CAAE,CACT,KAAK,CAAC,kCAAkC,GAAG,YAAY,GAAG,mCAAmC,CAAC,CAAC;CAElG,CACJ,AACD,OAAO,IAAI,GAAG,MAAM,CAAC,CACxB,CAAC;AACF,IAAI,cAAc,CAAG,SAAjB,cAAc,CAAa,SAAS,CAAE,UAAU,CAAE;;;AAGlD,IAAI,IAAI,CAAG,CAAC,CAAC,CAAC,AACd,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACxC,GAAI,OAAO,CAAE,CACT,IAAI,IAAI,CAAG,OAAO,CAAC,UAAU,CAAC,AAC9B,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AAEjB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE;AAElC,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAE,CAC5B,IAAI,GAAG,CAAC,CAAC,CACZ,CACJ;AAAA,CAEJ,KAAM,CACH,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,gDAAgD,CAAC,CAAC,CAC9E;AAAA,CAEJ,AACD,OAAO,IAAI,CAAC,CACf,CAAC;AACF,IAAI,eAAe,CAAG,SAAlB,eAAe,CAAa,SAAS,CAAE,GAAG,CAAE,cAAc,CAAE,IAAI,CAAE,WAAW,CAAE,IAAI,CAAE,UAAU,CAAE,SAAS,CAAE;AAC5G,IAAI,QAAQ,CAAG,EAAE,CAAC,AAClB,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,AACtB,QAAQ,CAAC,YAAY,CAAC,GAAG,cAAc,CAAC,AACxC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,AACxB,QAAQ,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC,AACtC,GAAI,CAAC,IAAI,CACL,IAAI,GAAG,IAAI,CAAC,AAChB,GAAI,CAAC,UAAU,CACX,UAAU,GAAG,IAAI,CAAC,AACtB,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,AACxB,QAAQ,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;AAEpC,IAAI,UAAU,CAAG,EAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAE,cAAc,CAAE,IAAI,CAAE,WAAW,CAAE,SAAS,CAAC,CAAC,AAElG,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,AAElC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,AACxB,QAAQ,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,AACpC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;AAChC,OAAO,QAAQ,CAAC,CACnB,CAAC,AACF,IAAI,uBAAuB,CAAG,SAA1B,uBAAuB,CAAa,OAAO,CAAE;AAC7C,IAAI,SAAS,CAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAE,SAAU,OAAO,CAAE,CAC9C,IAAI,UAAU,CAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,AAC7C,IAAI,QAAQ,CAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,AAChC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,AACjC,OAAQ,QAAQ,CAAE,CACrB,CAAC,CAAC,AACH,OAAO,SAAS,CAAC,CACpB,CAAC,AACF,OAAO,CACH,QAAQ,CAAE,CAAC,MAAM,CAAE,IAAI,CAAE,cAAc,CAAE,CAAC,CAAC,CAC3C,IAAI,CAAE,uBAAuB,CAC7B,UAAU,CAAE,oBAAU,KAAK,CAAE,SAAS,CAAE;;AAEpC,OAAO,WAAU,CAAC,KAAK,CAAE,SAAS,CAAC,CAAC,CACvC,CACD,MAAM,CAAE,gBAAU,KAAK,CAAE,SAAS,CAAE;AAChC,OAAO,OAAM,CAAC,KAAK,CAAE,SAAS,CAAC,CAAC,CACnC,CACD,KAAK,CAAE,gBAAY,CACf,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAE,IAAI,CAAE,cAAc,CAAE,CAAC,CAAC,CAAC,CACrD,CACD,iBAAiB,CAAE,2BAAU,SAAS,CAAE,YAAY,CAAE,KAAK,CAAE,YAAY,CAAE,SAAS,CAAE,CAClF,OAAO,kBAAiB,CAAC,SAAS,CAAE,YAAY,CAAE,KAAK,CAAE,YAAY,CAAE,SAAS,CAAC,CAAC,CACrF,CACD,eAAe,CAAE,0BAAY;;;;;;;;;;;;;AAazB,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,2FAA2F,CAAE,MAAM,CAAC,CAAC,AAC9H,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,iGAAiG,CAAE,MAAM,CAAC,CAAC,AAEpI,IAAI,SAAS,CAAG,IAAI,CAAC,QAAQ,CAAC,AAC9B,IAAK,IAAI,GAAG,IAAI,SAAS,EAAE,CACvB,GAAI,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAE;AAC/B,GAAI,GAAG,IAAI,QAAQ,CAAE,CAEjB,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,+CAA+C,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA,AAAC,CAAE,MAAM,CAAC,CAAC,CAC/G,KAAM,GAAI,GAAG,IAAI,gBAAgB,CAAE,CAChC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,wDAAwD,GAAG,SAAS,CAAC,GAAG,CAAC,CAAE,MAAM,CAAC,CAAC,CAC/G,KAAM,CACH,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC;AAE/N,IAAI,IAAI,CAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC9B,IAAI,IAAI,CAAG,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,AACrC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AACjB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CAClC,IAAI,KAAK,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACzB,IAAI,MAAM,CAAG,IAAI,CAAC,KAAK,CAAC,CAAC,AACzB,IAAI,MAAM,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,AACjC,IAAI,MAAM,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,AAC3B,IAAI,KAAK,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACzB,IAAI,OAAO,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,AAC7B,IAAI,KAAK,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACzB,IAAI,eAAe,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,AAC7C,GAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,CAC7C,IAAI,SAAS,CAAG,eAAe,CAAC,CAAC,CAAC,CAAC,AACnC,GAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,IAAE,QAAQ,CAAC,CACtC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAC/C,CACJ,AACD,IAAI,IAAI,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACvB,IAAI,WAAW,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;AAErC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,mBAAmB,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,QAAQ,GAAG,KAAK,GAAG,UAAU,GAAG,OAAO,GAAG,QAAQ,GAAG,KAAK,GAAG,kBAAkB,GAAG,eAAe,CAAE,MAAM,CAAC,CAAC,AACjP,GAAI,WAAW,CAAE,CACb,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,WAAW,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CACzC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,2BAA2B,GAAG,CAAC,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAE,MAAM,CAAC,CAAC,CAC7F,CACJ,CACJ,CACJ,KAAM,CACH,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,+BAA+B,CAAE,MAAM,CAAC,CAAC,CACrE,AACD,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,AAChC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AACjB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE;AAElC,IAAI,SAAS,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AAEjC,IAAI,GAAG,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtB,IAAI,UAAU,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,AACpC,IAAI,IAAI,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACxB,IAAI,GAAG,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtB,IAAI,WAAW,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,AACtC,IAAI,IAAI,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACxB,IAAI,SAAS,CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,AAElC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,kBAAkB,GAAG,CAAC,GAAG,aAAa,GAAG,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,OAAO,GAAG,WAAW,CAAE,MAAM,CAAC,CAAC,CAC/H,CACJ,KAAM,CACH,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,8BAA8B,CAAE,MAAM,CAAC,CAAC,CACpE,CACJ,CACJ,CACJ,AACD,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,iHAAiH,CAAE,MAAM,CAAC,CAAC;CAEvJ,CACD,wBAAwB,CAAE,kCAAU,cAAc,CAAE;;AAEhD,IAAI,IAAI,CAAG,CAAC,CAAC,AACb,IAAI,iBAAiB,CAAG,cAAc,CAAC,MAAM,CAAC,AAC9C,IAAI,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,AAC7B,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAE,SAAU,KAAK,CAAE,GAAG,CAAE;AACnC,GAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAE,iBAAiB,CAAC,IAAI,cAAc,CAAE,CACvD,IAAI,EAAE,CAAC,CACV,CACJ,CAAC,CAAC,AACH,OAAO,IAAI,CAAC,CACf,CACD,qBAAqB,CAAE,+BAAU,cAAc,CAAE;;;;;AAK7C,IAAI,cAAc,CAAG,cAAc,CAAC,AACpC,IAAI,KAAK,CAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC,AAC1D,GAAI,KAAK,GAAG,CAAC,CAAE,CACX,cAAc,GAAG,cAAc,GAAG,KAAK,CAAC,CAC3C,AACD,OAAO,cAAc,CAAC,CACzB,CACD,YAAY,CAAE,sBAAU,SAAS,CAAE,YAAY,CAAE;;;;;;;;;;;;;AAa7C,IAAI,OAAO,CAAG,IAAI,CAAC,AACnB,IAAI,OAAO,CAAG,IAAI,CAAC,AACnB,IAAI,IAAI,CAAG,KAAK,CAAC,AACjB,GAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAE;;AAE3B,IAAI,KAAK,CAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,AACxC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,AAChC,IAAI,UAAU,CAAG,aAAa,CAAC,KAAK,CAAC,CAAC,AACtC,OAAO,GAAG,OAAM,CAAC,SAAS,CAAE,IAAI,CAAC,CAAC;AAClC,OAAO,GAAG,CACN,QAAQ,CAAE,SAAS,CACnB,SAAS,CAAE,UAAU,CACrB,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,YAAY,CACzB,IAAI,CAAE,KAAK,CACX,MAAM,CAAE,CAAC,CACT,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EAAE,CACP,UAAU,CAAE,EAAE,CACd,SAAS,CAAE,EAAE,CAChB,CAAC,AACF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,AACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAE,IAAI,CAAE,SAAS,GAAG,OAAO,CAAE,GAAG,CAAE,QAAQ,CAAC,CAAC;AACvE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,AAClD,IAAI,GAAG,IAAI,CAAC,CACf,KAAM,EAEN,AACD,OAAO,IAAI,CAAC,CACf,CACD,sBAAsB,CAAE,gCAAU,SAAS,CAAE,QAAQ,CAAE;;;AAGnD,IAAI,GAAG,CAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,AACvB,IAAI,OAAO,CAAG,IAAI,CAAC,AACnB,IAAI,aAAa,CAAG,IAAI,CAAC,AACzB,IAAI,IAAI,CAAG,KAAK,CAAC,AACjB,GAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAE;AAC1B,IAAI,GAAG,CAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,AACrC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACnC,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAE,QAAQ,CAAC,CAAC,AAC5C,GAAI,aAAa,CAAC,QAAQ,IAAI,SAAS,CAAE,CACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAChC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,CACzD,KAAM,CACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,CAC5C,AACD,IAAI,mBAAmB,CAAG,EAAE,CAAC,GAAG,CAAC,gCAAgC,CAAC,GAAG,CAAE,aAAa,CAAC,CAAC,AACtF,mBAAmB,CAAC,IAAI,CAAC,SAAU,MAAM,CAAE,CACvC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,6CAA6C,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC,AAC3F,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC9B,CAAC,CAAC,AACH,mBAAmB,CAAC,IAAI,CAAC,SAAU,GAAG,CAAE,CACpC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,6CAA6C,GAAG,GAAG,CAAC,CAAC,AAC9E,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1B,CAAC,CAAC;;CAGN,KAAM;AACH,IAAI,GAAG,CAAG,uDAAuD,GAAG,SAAS,GAAG,uCAAuC,CAAC,AACxH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1B;AAED,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC,CACxB,CACD,mBAAmB,CAAE,6BAAU,MAAM,CAAE,QAAQ,CAAE;;;AAG7C,IAAI,IAAI,CAAG,KAAK,CAAC,AACjB,IAAI,aAAa,CAAG,IAAI,CAAC,AACzB,IAAI,WAAW,CAAG,IAAI,CAAC,AACvB,IAAI,cAAc,CAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,IAAI,OAAO,CAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAE,SAAU,OAAO,CAAE,CACpD,OAAO,OAAO,CAAC,SAAS,IAAI,MAAM,CAAC,CACtC,CAAC,CAAC,AACH,GAAI,OAAO,CAAE,CACT,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,AAC/B,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAE,QAAQ,CAAC,CAAC,AAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,AAClC,IAAI,WAAW,CAAG,aAAa,CAAC,QAAQ,CAAC,AACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC,AAC3C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,AACxC,IAAI,GAAG,IAAI,CAAC,CACf,KAAM;AACH,KAAK,CAAC,qFAAqF,GAAG,MAAM,GAAG,6CAA6C,CAAC,CAAC,CACzJ,AACD,OAAO,IAAI,CAAC,CACf,CACD,UAAU,CAAE,oBAAU,OAAO,CAAE;;AAE3B,IAAI,QAAQ,CAAG,IAAI,CAAC,AACpB,GAAI,OAAO,CAAE,CACT,IAAI,SAAS,CAAG,IAAI,CAAC,QAAQ,CAAC,AAC9B,GAAI,SAAS,CAAC,OAAO,CAAC,CAClB,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAC/C,AACD,OAAO,QAAQ,CAAC,CACnB,CACD,gBAAgB,CAAE,0BAAU,GAAG,CAAE;;AAE7B,IAAI,UAAU,CAAG,IAAI,CAAC,AACtB,IAAI,SAAS,CAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAExC,IAAI,OAAO,CAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,SAAU,OAAO,CAAE;AAC/C,GAAI,OAAO,OAAO,IAAI,QAAQ,CAC1B,OAAO,KAAK,CAAC;AACjB,OAAO,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC,CACnC,CAAC,CAAC,AACH,GAAI,OAAO,CACP,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,AAClC,OAAO,UAAU,CAAC,CACrB,CACD,YAAY,CAAE,sBAAU,SAAS,CAAE,UAAU,CAAE,YAAY,CAAE,MAAM,CAAE,KAAK,CAAE,OAAO,CAAE,aAAa,CAAE,KAAK,CAAE,eAAe,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCxH,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,MAAM,CAAG,cAAc,CAAC,SAAS,CAAE,UAAU,CAAC,CAAC,AACnD,GAAI,MAAM,GAAG,CAAC,CAAE;AACZ,IAAI,GAAG,CAAG,OAAO,CAAC,MAAM,EAAE,CAAC,AAC3B,IAAI,KAAK,CAAG,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC;AAEjC,GAAI,AAAC,KAAK,IAAI,QAAQ,IAAM,OAAO,IAAI,UAAU,AAAC,CAC9C,aAAa,GAAG,IAAI,CAAC,AACzB,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CACpB,IAAI,CAAE,UAAU,CAChB,WAAW,CAAE,YAAY,CACzB,KAAK,CAAE,MAAM,CACb,IAAI,CAAE,KAAK,CACX,MAAM,CAAE,OAAO,CACf,IAAI,CAAE,KAAK,CACX,cAAc,CAAE,eAAe,CAC/B,UAAU,CAAE,aAAa,CACzB,GAAG,CAAE,KAAK,CACb,CAAC,CAAC,AACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;;CAEnC,KAAM;AACH,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,YAAY,CAAC,AACtD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,AAC1C,GAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG;AAC9B,KAAK,GAAG,QAAQ,CAAC,AACrB,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,AACxC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,AAC5C,GAAI,AAAC,KAAK,IAAI,QAAQ,IAAM,OAAO,IAAI,UAAU,AAAC,CAC9C,aAAa,GAAG,IAAI,CAAC,AACzB,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,AACtD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,AACxC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc,GAAG,eAAe,CAAC;CAE/D,AACD,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;CAExB,KAAM,CACH,KAAK,CAAC,uDAAuD,GAAG,UAAU,GAAG,4BAA4B,GAAG,SAAS,CAAC,CAAC;CAE1H,CACJ,CACD,eAAe,CAAE,yBAAU,SAAS,CAAE,UAAU,CAAE,OAAO,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCvD,IAAI,UAAU,CAAG,CACb,IAAI,CAAE,UAAU,CAChB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,EAAE,CACT,IAAI,CAAE,QAAQ,CACd,MAAM,CAAE,SAAS,CACjB,IAAI,CAAE,IAAI,CACV,cAAc,CAAE,IAAI,CACpB,UAAU,CAAE,IAAI,CAChB,GAAG,CAAE,KAAK,CACb,CAAC,AACF,CAAC,CAAC,MAAM,CAAC,UAAU,CAAE,OAAO,CAAC,CAAC;AAE9B,GAAI,UAAU,CAAC,IAAI,IAAI,QAAQ,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAC9D,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,AAClC,GAAI,UAAU,CAAC,MAAM,IAAI,SAAS,IAAI,UAAU,CAAC,MAAM,IAAI,YAAY,IAAI,UAAU,CAAC,MAAM,IAAI,WAAW,IAAI,UAAU,CAAC,MAAM,IAAI,YAAY,IAAI,UAAU,CAAC,MAAM,IAAI,aAAa,CAClL,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,AAC5B,GAAI,UAAU,CAAC,MAAM,IAAI,WAAW,CAChC,UAAU,CAAC,cAAc,IAAI,IAAI,CAAC;AAEtC,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,MAAM,CAAG,cAAc,CAAC,SAAS,CAAE,UAAU,CAAC,CAAC,AACnD,GAAI,MAAM,GAAG,CAAC,CAAE;AACZ,IAAI,GAAG,CAAG,OAAO,CAAC,MAAM,EAAE,CAAC,AAC3B,IAAI,KAAK,CAAG,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC;AACjC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,AACpC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;;CAEnC,KAAM;AACH,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,AAChE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,AACpD,GAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG;AAC9B,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,AAC/B,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,AAClD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,AACtD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,AAClD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC,AACtE,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC;CAEzD,AACD,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;CAExB,KAAM,CACH,KAAK,CAAC,0DAA0D,GAAG,UAAU,GAAG,4BAA4B,GAAG,SAAS,CAAC,CAAC,CAC7H,CACJ,CACD,kBAAkB,CAAE,4BAAU,SAAS,CAAE,UAAU,CAAE;;;AAIjD,IAAI,WAAW,CAAG,IAAI,CAAC,AACvB,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,MAAM,CAAG,cAAc,CAAC,SAAS,CAAE,UAAU,CAAC,CAAC,AACnD,GAAI,MAAM,IAAI,CAAC,CAAE;AACb,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAC5C,CACJ,AACD,OAAO,WAAW,CAAC,CACtB,CACD,eAAe,CAAE,yBAAU,SAAS,CAAE,UAAU,CAAE,SAAS,CAAE;;AAGzD,IAAI,GAAG,CAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,AACvB,IAAI,GAAG,CAAG,IAAI,CAAC,AACf,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,MAAM,CAAG,cAAc,CAAC,SAAS,CAAE,UAAU,CAAC,CAAC,AACnD,GAAI,MAAM,IAAI,CAAC,CAAE;AACb,IAAI,cAAc,CAAG,uBAAuB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACjE,IAAI,QAAQ,CAAG,cAAc,CAAC,MAAM,CAAC,CAAC;AAEtC,IAAI,WAAW,CAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAE,SAAS,CAAC,CAAC;AAChD,GAAI,WAAW,CAAC,IAAI,IAAI,UAAU,CAAE;AAChC,IAAI,cAAc,CAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,AAC7C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC;AAC/C,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,AAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAClD,AACD,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAE,SAAS,CAAE,UAAU,CAAC,CAAC,AACxE,IAAI,GAAG,CAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;AAGxC,IAAI,OAAO,CAAG,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,GAAG,CAAE,WAAW,CAAC,CAAC,AACjE,OAAO,CAAC,IAAI,CAAC,SAAU,MAAM,CAAE,CAC3B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,AACpB,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC9B,CAAC,CAAC,AACH,OAAO,CAAC,IAAI,CAAC,SAAU,GAAG,CAAE,CACxB,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,AACrB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1B,CAAC,CAAC,CACN,KAAM,CACH,GAAG,GAAG,8DAA8D,GAAG,UAAU,GAAG,gCAAgC,GAAG,SAAS,CAAC,AACjI,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1B,CACJ,KAAM,CACH,GAAG,GAAG,6DAA6D,GAAG,UAAU,GAAG,4BAA4B,GAAG,SAAS,CAAC,AAC5H,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC1B,AACD,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC,CACxB,CACD,WAAW,CAAE,qBAAU,SAAS,CAAE,cAAc,CAAE,IAAI,CAAE,WAAW,CAAE,IAAI,CAAE,UAAU,CAAE,SAAS,CAAE;;;;;;;;;;;;;AAe9F,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,IAAI,SAAS,CAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,AAC9C,GAAI,OAAO,CAAE,CACT,GAAI,SAAS,CAAE;AAEX,GAAI,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAE,GAAG,CAAC,CAAE,CAClC,KAAK,CAAC,8EAA8E,GAAG,GAAG,GAAG,wBAAwB,CAAC,CAAC,CAC1H,KAAM;;AAGH,IAAI,KAAK,CAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,AAChD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC,AACxC,IAAI,GAAG,CAAG,aAAa,CAAC,KAAK,CAAC,CAAC,AAE/B,IAAI,KAAK,CAAG,CAAC,CAAC;AACd,GAAI,IAAI,IAAI,CAAC;AACT,KAAK,GAAG,CAAC,CAAC,AACd,IAAI,WAAW,CAAG,KAAK,CAAC;AACxB,GAAI,CAAC,UAAU;AACX,UAAU,GAAG,IAAI,CAAC,AAEtB,IAAI,QAAQ,CAAG,eAAe,CAAC,SAAS,CAAE,GAAG,CAAE,cAAc,CAAE,IAAI,CAAE,WAAW,CAAE,IAAI,CAAE,UAAU,CAAE,SAAS,CAAC,CAAC,AAC/G,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,AAEjC,IAAI,KAAK,CAAG,iBAAiB,CAAC,IAAI,CAAE,SAAS,CAAC,CAAC,AAC/C,IAAI,YAAY,CAAG,GAAG,CAAC;AACvB,GAAI,WAAW,IAAI,GAAG,CAClB,YAAY,GAAG,GAAG,CAAC,AAEvB,IAAI,SAAS,CAAG,eAAe,CAAC,cAAc,CAAE,GAAG,CAAE,SAAS,CAAE,KAAK,CAAE,YAAY,CAAE,KAAK,CAAE,WAAW,CAAE,SAAS,CAAC,CAAC,AACpH,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,AACpC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,CAC1B,CACJ,KAAM,CACH,KAAK,CAAC,+DAA+D,GAAG,SAAS,GAAG,6BAA6B,GAAG,cAAc,CAAC,CAAC,CACvI,CACJ,KAAM,CACH,KAAK,CAAC,uDAAuD,GAAG,YAAY,GAAG,4BAA4B,GAAG,SAAS,CAAC,CAAC,CAC5H,CACJ,CACD,aAAa,CAAE,wBAAY;AACvB,IAAI,SAAS,CAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAExC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,SAAU,OAAO,CAAE;AACjC,GAAI,OAAO,OAAO,IAAI,QAAQ,CAAE;AAE5B,IAAI,SAAS,CAAG,OAAO,CAAC,QAAQ,CAAC,AACjC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,SAAU,QAAQ,CAAE;AAC1C,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,AAC1E,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAE,QAAQ,CAAC,YAAY,CAAC,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAE,QAAQ,CAAC,aAAa,CAAC,CAAE,IAAI,CAAC,CAAC;CACtI,CAAC,CAAC,AACH,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAE,IAAI,CAAC,CAAC,CAClC,CACJ,CAAC,CAAC,CACN,CACD,UAAU,CAAE,oBAAU,SAAS,CAAE,GAAG,CAAE;AAClC,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,MAAM,CAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,SAAU,OAAO,CAAE,CACtD,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAC7B,CAAC,CAAC,AACH,GAAI,MAAM,IAAI,CAAC,CACX,MAAM,GAAG,IAAI,CAAC,CACrB,AACD,OAAO,MAAM,CAAC,CACjB,CACD,mBAAmB,CAAE,6BAAU,SAAS,CAAE;AACtC,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,OAAO,OAAO,CAAC,CAClB,CACD,yBAAyB,CAAE,mCAAU,UAAU,CAAE;AAC7C,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,GAAI,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;AACpC,MAAM,GAAG,IAAI,CAAC,AAClB,OAAO,MAAM,CAAC,CACjB,CACD,6BAA6B,CAAE,uCAAU,GAAG,CAAE;AAC1C,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,GAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAC1B,MAAM,GAAG,IAAI,CAAC,AAClB,OAAO,MAAM,CAAC,CACjB,CACD,aAAa,CAAE,uBAAU,UAAU,CAAE,CACjC,IAAI,GAAG,CAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,AACtC,OAAO,SAAS,GAAG,aAAa,GAAG,GAAG,CAAC,CAC1C,CACD,WAAW,CAAE,qBAAU,UAAU,CAAE,UAAU,CAAE;AAC3C,IAAI,GAAG,CAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,AACtC,OAAO,SAAS,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,CACnD,CACD,eAAe,CAAE,yBAAU,UAAU,CAAE;AACnC,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,GAAI,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAE,CAChE,MAAM,GAAG,IAAI,CAAC,CACjB,AACD,OAAO,MAAM,CAAC,CACjB,CACD,mBAAmB,CAAE,6BAAU,GAAG,CAAE;AAChC,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,GAAI,IAAI,CAAC,yBAAyB,CAAC,aAAa,GAAG,GAAG,CAAC,CAAE,CACrD,MAAM,GAAG,IAAI,CAAC,CACjB,AACD,OAAO,MAAM,CAAC,CACjB,CACD,kBAAkB,CAAE,4BAAU,UAAU,CAAE,MAAM,CAAE;AAC9C,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACxC,GAAI,OAAO,CAAE;AACT,IAAI,EAAE,CAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,CACnD,OAAO,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,CACnC,CAAC,CAAC,AACH,GAAI,EAAE,CAAE,CACJ,OAAO,IAAI,CAAC,CACf,KAAM,CACH,OAAO,KAAK,CAAC,CAChB,CACJ,KAAM,CACH,KAAK,CAAC,kCAAkC,GAAG,UAAU,GAAG,oBAAoB,CAAC,CAAC,AAC9E,OAAO,KAAK,CAAC,CAChB,CACJ,CACD,mBAAmB,CAAE,6BAAU,GAAG,CAAE,CAChC,IAAI,SAAS,CAAG,IAAI,CAAC,AACrB,IAAI,UAAU,CAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,AAC5C,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACxC,IAAI,EAAE,CAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,CACnD,OAAS,OAAO,CAAC,MAAM,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAE;;CAGvE,CAAC,CAAC,AACH,GAAI,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAClB,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,AACxB,OAAO,SAAS,CAAC,CACpB,CACD,cAAc,CAAE,wBAAU,UAAU,CAAE;AAClC,IAAI,MAAM,CAAG,KAAK,CAAC,AACnB,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACxC,GAAI,OAAO,CAAE,CACT,OAAO,OAAO,CAAC,IAAI,CAAC,CACvB,KAAM,CACH,KAAK,CAAC,8BAA8B,GAAG,UAAU,GAAG,oBAAoB,CAAC,CAAC,AAC1E,OAAO,KAAK,CAAC,CAChB,CACJ,CACD,kBAAkB,CAAE,4BAAU,GAAG,CAAE;AAC/B,IAAI,UAAU,CAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,AAC5C,GAAI,UAAU,CAAE,CACZ,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACxC,GAAI,OAAO,CAAE,CACT,OAAO,OAAO,CAAC,IAAI,CAAC,CACvB,KAAM,CACH,KAAK,CAAC,0DAA0D,GAAG,GAAG,GAAG,qCAAqC,GAAG,UAAU,GAAG,oBAAoB,CAAC,CAAC,AACpJ,OAAO,KAAK,CAAC,CAChB,CACJ,AACD,OAAO,KAAK,CAAC,CAChB,CACD,OAAO,CAAE,iBAAU,SAAS,CAAE,OAAO,CAAE;AACnC,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,CAC1B,CACJ,CACD,cAAc,CAAE,wBAAU,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE;AACvD,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,AACrB,IAAI,EAAE,CAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,CACnD,OAAO,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CACpC,CAAC,CAAC,AACH,GAAI,EAAE,CAAE,CACJ,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC,AACtB,OAAO,IAAI,CAAC,CACf,KAAM,CACH,KAAK,CAAC,oCAAoC,GAAG,SAAS,GAAG,4BAA4B,GAAG,SAAS,CAAC,CAAC,AACnG,OAAO,KAAK,CAAC,CAChB,CACJ,KAAM,CACH,KAAK,CAAC,8BAA8B,GAAG,SAAS,GAAG,oBAAoB,CAAC,CAAC,AACzE,OAAO,KAAK,CAAC,CAChB,CACJ,CACD,mBAAmB,CAAE,6BAAU,UAAU,CAAE;AACvC,IAAI,KAAK,CAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,AAC3C,GAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAE,CACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,qBAAqB,GAAG,UAAU,CAAC,CAAC;AAE7D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,GAAG,QAAQ,CAAE,KAAK,CAAE,QAAQ,CAAE,SAAS,CAAE,IAAI,CAAC,CAAC,AACpF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,AAC3B,OAAO,IAAI,CAAC,CACf,KAAM,CACH,KAAK,CAAC,mCAAmC,GAAG,KAAK,GAAG,2BAA2B,GAAG,UAAU,GAAG,mBAAmB,CAAC,CAAC,AACpH,OAAO,KAAK,CAAC,CAChB,CACJ,CACD,mBAAmB,CAAE,6BAAU,UAAU,CAAE;AACvC,IAAI,KAAK,CAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,AAC3C,GAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAE,CACvC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAC5B,KAAM,CACH,KAAK,CAAC,mCAAmC,GAAG,KAAK,GAAG,2BAA2B,GAAG,UAAU,GAAG,mBAAmB,CAAC,CAAC,AACpH,OAAO,KAAK,CAAC,CAChB,CACJ,CACD,sBAAsB,CAAE,gCAAU,SAAS,CAAE,SAAS,CAAE,OAAO,CAAE;AAC7D,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,AACrB,IAAI,aAAa,CAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,AAC3C,GAAI,aAAa,CAAE,CACf,OAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,AAClC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;CACpC,CACJ,CACJ,CACD,sBAAsB,CAAE,gCAAU,SAAS,CAAE,SAAS,CAAE;AACpD,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,IAAI,OAAO,CAAG,IAAI,CAAC,AACnB,GAAI,OAAO,CAAE,CACT,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CACpC,AACD,OAAO,OAAO,CAAC,CAClB,CACD,gBAAgB,CAAE,0BAAU,SAAS,CAAE;;;;;;;;;AASnC,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,IAAI,OAAO,CAAG,EAAE,CAAC,AACjB,IAAI,OAAO,CAAG,IAAI,CAAC,AACnB,GAAI,OAAO,CAAE,CACT,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CACjD,GAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAE,CACtB,IAAI,EAAE,CAAG,EAAE,CAAC,AACZ,EAAE,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC/B,EAAE,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,AACxC,EAAE,CAAC,WAAW,CAAC,GAAG,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,WAAW,CAAE,OAAO,CAAE,IAAI,CAAC,CAAC;AAEvF,EAAE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,AACtC,EAAE,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,AAC9B,EAAE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,gBAAgB,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC;AAE9C,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CACpB,CACJ,CAAC,CAAC,CACN,KAAM,CACH,KAAK,CAAC,uCAAuC,GAAG,SAAS,GAAG,yCAAyC,CAAC,CAAC,CAC1G,AACD,OAAO,OAAO,CAAC,CAClB,CACD,yBAAyB,CAAE,mCAAU,SAAS,CAAE,SAAS,CAAE,oBAAoB,CAAE;;;;AAI7E,GAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAE,CAC1C,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAE,SAAU,OAAO,CAAE,CAC5C,IAAI,OAAO,CAAG,OAAO,CAAC,CAAC,CAAC,CAAC,AACzB,IAAI,OAAO,CAAG,OAAO,CAAC,CAAC,CAAC,CAAC,AACzB,IAAI,cAAc,CAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,AAC1C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC,AACtC,OAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,AAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,CACzC,CAAC,CAAC,AACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC,CACnD,CACJ,CACD,SAAS,CAAE;AACP,MAAM,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,SAAS,CAAC,CAC3C,SAAS,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,YAAY,CAAC,CACjD,QAAQ,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,WAAW,CAAC,CAC/C,SAAS,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,YAAY,CAAC,CACjD,UAAU,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,aAAa,CAAC,CACnD,YAAY,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,cAAc,CAAC;AACtD,WAAW,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,SAAS,CAAC,CAChD,OAAO,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,UAAU,CAAC,CAC7C,OAAO,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,UAAU,CAAC,CAC7C,MAAM,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,aAAa,CAAC;AAC/C,UAAU,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,aAAa,CAAC,CACnD,YAAY,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,UAAU,CAAC,CAClD,OAAO,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,UAAU,CAAC,CAC7C,KAAK,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,QAAQ,CAAC,CACzC,QAAQ,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,MAAM,CAAE,WAAW,CAAC,CAClD,CACD,yBAAyB,CAAE,oCAAY;;AAEnC,IAAI,MAAM,CAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,AACpC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CAC7C,OAAO,CAAC,OAAO,CAAE,KAAK,GAAG,CAAC,CAAE,MAAM,CAAE,OAAO,CAAC,CAAC,CAChD,CAAC,CAAC,AACH,OAAO,MAAM,CAAC,CACjB,CACD,QAAQ,CAAE,kBAAU,iBAAiB,CAAE;;;;AAInC,IAAI,QAAQ,CAAG,IAAI,CAAC,AACpB,GAAI,iBAAiB,CAAC,IAAI,IAAI,QAAQ,CAAE;AACpC,IAAI,2BAA2B,CAAG,CAC9B,SAAS,CAAE,MAAM,CACjB,YAAY,CAAE,SAAS,CACvB,WAAW,CAAE,QAAQ,CACrB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,UAAU,CACzB,cAAc,CAAE,YAAY,CAC5B,SAAS,CAAE,WAAW,CACtB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,UAAU,CACzB,UAAU,CAAE,YAAY,CACxB,UAAU,CAAE,OAAO,CACnB,QAAQ,CAAE,KAAK,CACf,WAAW,CAAE,QAAQ,CACxB,CAAC,AACF,QAAQ,GAAG,2BAA2B,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CACpE,KAAM,CACH,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,CACrC,AACD,OAAO,QAAQ,CAAC,CACnB,CACD,QAAQ,CAAE,kBAAU,SAAS,CAAE;;AAE3B,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,IAAI,MAAM,CAAG,IAAI,CAAC,AAClB,GAAI,OAAO,CAAE,CACT,IAAI,UAAU,CAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAElD,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,AAChD,GAAI,MAAM,CAAC,EAAE,CACT,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CACtC,KAAM,CACH,KAAK,CAAC,wBAAwB,GAAG,SAAS,GAAG,oBAAoB,CAAC,CAAC,CACtE,AACD,OAAO,MAAM,CAAC;CACjB,CACD,qBAAqB,CAAE,+BAAU,UAAU,CAAE;;;;AAIzC,IAAI,MAAM,CAAG,EAAE,CAAC,AAChB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CACzC,IAAI,SAAS,CAAG,OAAO,CAAC,IAAI,CAAC,AAC7B,GAAI,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAE,CAC1B,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CACzB,KAAM,GAAI,OAAO,CAAC,IAAI,IAAI,MAAM,CAAE,CAC/B,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,CAClC,KAAM,GAAI,OAAO,CAAC,IAAI,IAAI,YAAY,CAAE,CACrC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAC1B,KAAM,CACH,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAC1B;AAAA,CAEJ,CAAC,CAAC,AACH,OAAO,MAAM,CAAC,CACjB,CACD,qBAAqB,CAAE,+BAAU,UAAU,CAAE,iBAAiB,CAAE,oBAAoB,CAAE;;;;;AAKlF,IAAI,IAAI,CAAG,KAAK,CAAC,AACjB,GAAI,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAE,iBAAiB,CAAC,CAAE;AACnD,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CACnD,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAE,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,WAAW,CAAE,OAAO,CAAC,KAAK,CAAE,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CACtI,CAAC,CAAC,AACH,IAAI,GAAG,IAAI,CAAC,CACf,KAAM;AAEH,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,qEAAqE,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC,CACzH,AACD,OAAO,IAAI,CAAC,CACf,CACD,WAAW,CAAE,qBAAU,SAAS,CAAE;;;;AAI9B,IAAI,SAAS,CAAG,EAAE,CAAC;AAEnB,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AACvC,GAAI,OAAO,CAAE,CACT,IAAI,IAAI,CAAG,OAAO,CAAC,SAAS,CAAC,AAC7B,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;AACjB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CAClC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3B,CACJ,CACJ,AACD,OAAO,SAAS,CAAC,CACpB,CACD,eAAe,CAAE,yBAAU,SAAS,CAAE,YAAY,CAAE;;;;;;;AAQhD,IAAI,aAAa,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AAC7C,IAAI,cAAc,CAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,AAEjD,GAAI,aAAa,IAAI,cAAc,CAAE,CACjC,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC,AAC3B,cAAc,CAAC,IAAI,GAAG,KAAK,CAAC;AAE5B,IAAI,kBAAkB,CAAG,aAAa,CAAC,SAAS,CAAC;AACjD,IAAI,QAAQ,CAAG,EAAE,CAAC,AAClB,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CACjD,GAAI,OAAO,CAAC,WAAW,IAAI,YAAY,CACnC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAC5B,CAAC,CAAC,AACH,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAE,SAAU,OAAO,CAAE,CAChC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC;CAC9C,CAAC,CAAC;AAGH,IAAI,mBAAmB,CAAG,cAAc,CAAC,SAAS,CAAC,AACnD,QAAQ,GAAG,EAAE,CAAC,AACd,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CAClD,GAAI,OAAO,CAAC,WAAW,IAAI,SAAS,CAChC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAC5B,CAAC,CAAC,AACH,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAE,SAAU,OAAO,CAAE,CAChC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC;CAC/C,CAAC,CAAC,CACN,CACJ,CACD,YAAY,CAAE,sBAAU,SAAS,CAAE;;;;;;AAO/B,IAAI,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,AAEvC,GAAI,OAAO,CAAE;AACT,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAC3C,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE;AAErC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,AACtC,GAAI,YAAY,CACZ,EAAE,CAAC,EAAE,CAAC,eAAe,CAAC,SAAS,CAAE,YAAY,CAAC,CAAC;AAAA,CACtD,AACD,CAAC;AAED,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;CACnC,KAAM,CACH,KAAK,CAAC,wEAAwE,GAAG,SAAS,CAAC,CAAC,CAC/F,CACJ,CACD,mBAAmB,CAAE,6BAAU,UAAU,CAAE;AACvC,IAAI,YAAY,CAAG,IAAI,CAAC,AACxB,GAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAE,CAC3C,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,AACpD,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,AAChC,IAAI,SAAS,CAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,AACrC,IAAI,SAAS,CAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,AACrC,IAAI,gBAAgB,CAAG,uBAAuB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,AACnE,IAAI,eAAe,CAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,AAEjD,YAAY,CAAC,GAAG,GAAG,SAAS,CAAC,AAC7B,YAAY,CAAC,GAAG,GAAG,SAAS,CAAC,AAC7B,YAAY,CAAC,UAAU,GAAG,gBAAgB,CAAC,AAC3C,YAAY,CAAC,SAAS,GAAG,eAAe,CAAC,CAC5C,AACD,OAAO,YAAY,CAAC,CACvB,CACD,MAAM,CAAE,iBAAY,CAChB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CACzC,CACD,CAAC,CAAE,CACC,QAAQ,CAAE,IAAI,CACd,IAAI,CAAE,eAAY,CACd,OAAO,WAAW,CAAC,CACtB,CACJ,CACD,UAAU,CAAE,qBAAY,CACpB,IAAI,CAAC,CAAG,EAAE,CAAC,AACX,IAAI,SAAS,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,AAC/B,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,0BAA0B,IAAI,SAAS,CAAC,MAAM,GAAG,IAAI,CAAA,AAAC,GAAG,aAAa,CAAE,IAAI,CAAC,CAAC,AACvG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,SAAU,KAAK,CAAE,GAAG,CAAE;AACpC,GAAI,GAAG,IAAI,QAAQ,IAAI,GAAG,IAAI,gBAAgB,CAAE,CAC5C,IAAI,SAAS,CAAG,EAAE,CAAC,AACnB,IAAI,IAAI,CAAG,IAAI,CAAC,AAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE;AACxC,IAAI,GAAG,CAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,AAClC,OAAO,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,AACxB,OAAO,CAAC,MAAM,CAAC,GAAG,SAAU,CAAC,CAAE,CAC3B,OAAO,QAAQ,GAAG,CAAC,CAAC,CACvB,CAAC,AACF,OAAO,CAAC,UAAU,CAAC,GAAG,SAAU,OAAO,CAAE;AACrC,IAAI,UAAU,CAAG,IAAI,CAAC,MAAM,CAAC,AAC7B,IAAI,SAAS,CAAG,IAAI,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,gCAAgC,GAAG,KAAK,CAAC,SAAS,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,CAAC,AAEvJ,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,eAAe,CAAC,UAAU,CAAE,SAAS,CAAE,OAAO,CAAC,CAAC,AACpE,OAAO,CAAC,IAAI,CAAC,SAAU,SAAS,CAAE,CAC9B,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;AACf,EAAE,CAAC,GAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC,AACjC,OAAO,CACV,CAAC,CAAC,AACH,OAAO,CAAC,IAAI,CAAC,SAAU,GAAG,CAAE,CACxB,KAAK,CAAC,oFAAoF,CAAC,CAAC,AAC5F,OAAO,CACV,CAAC,CAAC,CACN,CAAC,AACF,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;CAE5B,CAAC,CAAC,AACH,IAAI,UAAU,CAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAE,QAAQ,CAAE,KAAK,CAAE,KAAK,CAAE,YAAY,CAAE,WAAW,CAAC,CAAC,AAClF,UAAU,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,AACjC,UAAU,CAAC,KAAK,CAAC,GAAG,SAAU,OAAO,CAAE,CACnC,IAAI,UAAU,CAAG,IAAI,CAAC,QAAQ,CAAC,AAC/B,EAAE,CAAC,EAAE,CAAC,sBAAsB,CAAC,UAAU,CAAE,OAAO,CAAC,CAAC,AAClD,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;CAClB,CAAC,AACF,UAAU,CAAC,eAAe,CAAC,GAAG,SAAU,SAAS,CAAE;AAC/C,IAAI,UAAU,CAAG,IAAI,CAAC,QAAQ,CAAC,AAC/B,OAAO,EAAE,CAAC,EAAE,CAAC,sBAAsB,CAAC,UAAU,CAAE,SAAS,CAAC,CAAC;CAC9D,CAAC,AACF,UAAU,CAAC,YAAY,CAAC,GAAG,UAAY,CACnC,IAAI,aAAa,CAAG,EAAE,CAAC,AACvB,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,AAC5C,IAAI,GAAG,CAAG,OAAO,CAAC,GAAG,CAAC,AACtB,GAAI,OAAO,CAAE;AACT,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,SAAU,OAAO,CAAE,KAAK,CAAE,CACjD,GAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAE,CACtB,IAAI,EAAE,CAAG,EAAE,CAAC,AACZ,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,AAC9B,EAAE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,AACxC,EAAE,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,AAC5B,EAAE,CAAC,WAAW,CAAC,GAAG,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,WAAW,CAAE,OAAO,CAAE,IAAI,CAAC,CAAC,AACvF,EAAE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,AACtC,EAAE,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,AAC9B,EAAE,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,AAC1B,EAAE,CAAC,gBAAgB,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC;AAE9C,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAC1B,CACJ,CAAE,IAAI,CAAC,CAAC,CACZ,KAAM,CACH,OAAO,IAAI,CAAC,CACf,AACD,OAAO,aAAa,CAAC,CACxB,CAAC,AACF,UAAU,CAAC,UAAU,CAAC,GAAG,SAAU,IAAI,CAAE,WAAW,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,aAAa,CAAE;AACtF,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,WAAW,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,aAAa,CAAC,CAAC;;AAGzF,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;CAClB,CAAC,AACF,UAAU,CAAC,UAAU,CAAC,GAAG,SAAU,SAAS,CAAE;;AAE1C,IAAI,UAAU,CAAG,KAAK,CAAC,QAAQ,CAAC,AAChC,OAAO,EAAE,CAAC,EAAE,CAAC,sBAAsB,CAAC,UAAU,CAAE,SAAS,CAAC,CAAC;CAC9D,CAAC,AACF,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;;;;;;;;;;CAYnC,CACJ,CAAC,CAAC,AACH,CAAC,CAAC,KAAK,CAAC,GAAG,SAAU,QAAQ,CAAE,WAAW,CAAE,CACxC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAE,WAAW,CAAC,CAAC;AAE1C,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,AACvC,IAAI,GAAG,CAAG,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,AACrC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;;;;CAIlB,CAAC,AACF,CAAC,CAAC,eAAe,CAAC,GAAG,UAAY,CAC7B,EAAE,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAC3B,CAAC,AACF,CAAC,CAAC,MAAM,CAAC,GAAG,UAAY,CACpB,IAAI,OAAO,CAAG,EAAE,CAAC,AACjB,IAAI,SAAS,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,AAC/B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,SAAU,KAAK,CAAE,GAAG,CAAE,CACpC,GAAI,GAAG,IAAI,QAAQ,IAAI,GAAG,IAAI,gBAAgB,CAAE,CAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAChC,CACJ,CAAC,CAAC,AACH,OAAO,OAAO,CAAC,CAClB,CAAC,AACF,CAAC,CAAC,UAAU,CAAC,GAAG,SAAU,UAAU,CAAE;AAClC,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACzC,GAAI,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAC1B,OAAO,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,AAChD,OAAO,IAAI,CAAC;CACf,CAAC;;;;;AAMF,OAAO,CAAC,CAAC,CACZ;;;;;;;;AASD,OAAO,CAAE;;;;;;AAML,GAAG,CAAE,aAAU,UAAU,CAAE,UAAU,CAAE,CACnC,KAAK,CAAC,SAAS,GAAG,UAAU,GAAG,gBAAgB,CAAC,CAAC,AACjD,OAAO,IAAI,CAAC,CACf,CACD,IAAI,CAAE,eAAY,CACd,KAAK,CAAC,yBAAyB,CAAC,CAAC,CACpC,CACD,IAAI,CAAE,eAAY,CACd,EAAE,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAC3B,CACD,QAAQ,CAAE,kBAAU,UAAU,CAAE,CAC5B,IAAI,OAAO,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,AACzC,GAAI,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAC1B,OAAO,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,AAChD,OAAO,IAAI,CAAC;CACf,CACD,IAAI,CAAE,eAAY,CACd,IAAI,OAAO,CAAG,EAAE,CAAC,AACjB,IAAI,SAAS,CAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,AAC/B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,SAAU,KAAK,CAAE,GAAG,CAAE,CACpC,GAAI,GAAG,IAAI,QAAQ,IAAI,GAAG,IAAI,gBAAgB,CAAE,CAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAChC,CACJ,CAAC,CAAC,AACH,OAAO,OAAO,CAAC,CAClB,CACJ,CACJ,CAAC,CACL,CAAA,EAAG,CAAC","file":"FLdd2-compiled.js","sourcesContent":["// jQuery(document).ready(function($){\r\n/**\r\n * data dictionary UI methods\r\n */\r\n    // FL = FL || {}; //gives undefined if FL is undefined \r\n    // FL = {};\r\n    // // a=\"A\";\r\n    // b=\"B\";\r\n    // var a = (typeof a === 'undefined') ? b : a;//if a is defined returns \"A\" otherwise returns the content of b\r\n    // alert(\"zzz=\"+a);//sets \"B\"\r\nFL = (typeof FL === 'undefined') ? {} : FL;\r\nFL[\"dd\"] = (function () {//name space FL.dd\r\n    // entities={__Last:0,__LastRelation:0};//this is an object of objects (not an array of objects)\r\n    //the key of the internal objects is the singular entity name\r\n    //   {__Last:<number>,__LastRelation:<number>} is a special object with:\r\n    //\t\t\t__Last - The total the number of entities. This is used to generate entity compressed names\r\n    //\t\t\t__LastRelation - The total the number of relations. This is used to generate idRelation compressed names\r\n    //   each internal object(entity) has: \r\n    //      key:{singular:xSingular,csingular:xCSingular,plural:xPlural,description:xDescription,lastId:0,L2C:{},C2L:{},attributes:[]};\t\r\n    //\t\tex:{\"Client\":{singular:\"Client\",\r\n    //\t\t\t\t\tcsingular:\"01\",\r\n    //\t\t\t\t\tplural:\"clients\",\r\n    //\t\t\t\t\tdescription:\"Individual or Company to whom we may send invoices\",\r\n    //\t\t\t\t\tsync:false,\r\n    //\t\t\t\t\tlastId:0,\r\n    //\t\t\t\t\tL2C:{},\r\n    //\t\t\t\t\tC2L:{},\r\n    //\t\t\t\t\tattributes:[]\t\r\n    //\t\t\t\t\trelations:[]\t\r\n    //\t\t}};\r\n    //\r\n    //  singular - is the human (logical) entitity name\r\n    //\tcsingular - is the compressed entity name (does not change on renames)\r\n    //  plural - plural expression corresponding to singular\r\n    //  description - description of singular (answer to: \"what is a <singular> ?\")\r\n    //\tsync - false if no synchronization was done with the server - true if synchronization was done\r\n    //\t\t\t\t- if sync = false (default) csingular and all attributes fieldCN are temporary \r\n    //\t\t\t\t- when sync = true - csingular and all attributes fieldCN are correct\r\n    //  lastId - number of attributes of entity <singular>\r\n    //\r\n    //each attribute (i) is in dDictionary.entities[<sEentity>].attributes[i]\r\n    //     with the format \r\n    //\t\t{name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:null,key:false});\r\n    //\r\n    //\t\t\tname -  is the human (logical) attribute name or field name\r\n    //\t\t\tdescription - description of attribute (answer to: \"what the <name > of a <entity.singular> ?\")\r\n    //\t\t\tlabel - default value that will appear in UI labeling the attribute\r\n    //\tOLD>>\ttype - one of: \"string\",\"number\",\"integer\",\"boolean\",\"date\",\"weak\" (a json object)\r\n    //\t\t\ttype - string, integer, number, boolean, date, or json (Nico's field \"M\")\r\n    //\t\t\t\tNOTE: if type is \"enumerable\", the key enumerable must have an array of enumerables\r\n    //\t\t\t\tNOTE: type \"enumerable\" is invalid for server. \"enumerable\" will be send as type=\"string\" to server\r\n    //\t\t\tenumerable - an array of enumerables or null (if key type != \"enumerable\")\r\n    //\t\t\ttypeUI -type of widget that is used with the field (Nico's field \"9\")\r\n    //\t\t\t\ttextbox, integerbox, numberbox, percentbox, currencybox, areabox, emailbox, phonebox, datetimebox, combobox,\r\n    //\t\t\t\t\tcheckbox, urlbox, lookupbox -->TBI imagebox, geoBox\r\n    //\t\t\tmask - applicable to textbox, integerbox, numberbox, percentbox and currencybox - null for other typeUI\r\n    //\t\t\tspecialTypeDef - Special type definition - A JSON. Ex of specialtype is typeUI==\"lookup\" (Nico's field \"P\" - stored as an array of JSON -  element 0 is for lookup specialTypeDef)\r\n    //\t\t\t\tif typeUI == \"lookup\" =>specialTypeDef=\"{eCN:<entity compressed name>, fCN:<field compressed name>}\"\r\n    //\t\t\tkey - boolean. True means the attribute is the  key field of the entity . (only one allowed)\r\n    //\tNEW TBD fieldPrefix - to be used only in search - for the time being it is fCN\r\n    //\tNEW TBD Repeatable  - ex: [‘albert@monaco.mo’ ,’toto@totoi.mo’] true/false\r\n    //\t\t\t\r\n    //          NOTE: to access the field compressed name use L2C() at entity level.\r\n    //\r\n    // each relation (i) is in dDictionary.entities[<sEntity>].relations[i]\r\n    //     with the format \r\n    //     oRelation-->\t{idRelation:3,cIdRelation:\"03\",rightEntity:\"Invoice\",description:\"has\",cardinality:\"0_1\",semantic:\"Client has many Invoices\",delChildren:false});\r\n    //    \t\tidRelation - key for database table \"relation\" int(11) autoincrement\r\n    //    \t\tcIdRelation - compressed name corresponding to idRelation - independent identifier  \r\n    //      Note: semantic property is redundant with all other relation properties and with the entity key.\r\n    //      Sych Server \r\n    //\t\t      //cIdRelation ->rCN returned has _id\r\n    //\t\t\t  rightEntity ->entityCN ->U\r\n    //\t\t\t              side - must be saved in the customer dictionary\r\n    //\t\t\t  IF relation not reflexive\r\n    //\t\t\t  \t\tdescription (change to verb) - V - if not reflexive\r\n    //            IF relation reflexive\r\n    //\t\t\t\t\ttwo entries are necessary with the same right entity -side must be saved one is 0 the other is 1\r\n    //\t\t\t  cardinality :W ->0,1,N\r\n    //\t\t\t  delChildren ->option TBD->\"02\":[{delChildren:true,....}]\r\n    //\r\n    //  ----- relation's object was completely changed to match Nico's approach - April 8, 2014\r\n    //\r\n    //\t\trCN - relation compressed name\r\n    //\t\twithEntity - the same as rightEntity\r\n    //\t    verb - leftEntity <verb> rightEntity ex. \"has\"\r\n    //\t\tcardinality - leftEntity <verb><cardinality> rightEntity ex. \"zero or many\"\r\n    //\t\tside - only for Nico's use - convention when  relation was created with relation.add in server side\r\n    //\t\tstoredHere - only for Nico's use - Permission to save defined when  relation was created with relation.add in server side\r\n    //\r\n    //\t\tmock up for next version of dictionary --> t stands for temporary --> general format FL.dd.t.entities\r\n    //\t\t\tFL.dd.t.entities.add(singular,description) - creates a new entity in dictionary\r\n    //\t\t\tFL.dd.t.entities.dumpToConsole() - dump the whole dictionary to console\r\n    //\t\t\tFL.dd.t.entities.list() - returns an array with all entity names (singular) in the dictionary\r\n    //\t\t\tFL.dd.t.entities.getCName(<entityName>) - returns the compressed name of a singular entity name or null if it does not exist\r\n    //\r\n    //\t\t\tFL.dd.t.entities[<entity Compressed Name>].<property> - returns the property (singular,plural or description) of that eCN\r\n    //\t\t\tFL.dd.t.entities[<entity Compressed Name>].set(options) - sets one or several properties (singular,plural or description)\r\n    //\t\t\t\t\t\tExample FL.dd.t.entities[\"53\"].set({singular:\"subContractor\",plural:\"subContractors\",description:\"company subcontracted\"})\r\n    //\t\t\t\r\n    //\t\t\tFL.dd.t.entities[<entity Compressed Name>].fieldsList() - returns an array where each item has field properties\r\n    //\t\t\t\tname,description,label,statment,type,typeUI,enumerable) of that eCN\r\n    //\t\t\t\tExample\t\t\t\t\t\t\r\n    //\t\t\t\t\tvar entity =\"sub\";\r\n    //\t\t\t\t\tvar eCN = FL.dd.t.entities.getCName(entity);\r\n    //\t\t\t\t\tvar display=null;\r\n    //\t\t\t\t\t_.each(FL.dd.t.entities[eCN].fieldsList(),function(element){display+=element.name+\":::\"+element.description+\"\\n\"});\r\n    //\t\t\tFL.dd.t.entities[<entity Compressed Name>].addField(name,descriptiom,label,type,typeUI,enumerable) - creates a new field for the entity\r\n    //\t\t\t\tExample: \r\n    //\t\t\t\t\tvar eCN = FL.dd.t.entities.getCName(entity);\r\n    //\t\t\t\t\tFL.dd.t.entities[eCN].addField(\"joakim\",\"dummy field joakim\",\"Joakim'label\",\"text\",\"textbox\");\r\n\r\n    //\t\t\tFL.dd.t.entities[<eCN>].getFieldCName(<fieldName>) - returns the compressed name of a singular field name or null if it does not exist\r\n    //\t\t\t\t\t\tExample var fCN = FL.dd.t.entities[\"53\"].getCName(\"id\");\r\n    //\t\t\tFL.dd.t.entities[<eCN>].fields[<fCN>].<property> - returns the field properties \r\n    //\t\t\t\t(name,description,label,type,typeUI,enumerable) of that fCN\r\n    //\t\t\t\tExample: FL.dd.t.entities[eCN].fields[fCN].name\r\n\r\n    //\r\n\r\n    //      \r\n    var getCompressed = function (iGenNext) { //returns a 2 bytes string from number \r\n        var sOut = \"\";\r\n        //-------------\r\n        var iMinLen = 2;\r\n        var sGenChars = \"0123456789aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ_\";\r\n        //---------------------------------------------------------\r\n        // Test using small character sets :\r\n        // var sGenChars=\"01\"; // generates a binary represenntation with only '0' and '1' symbols\r\n        //   or \r\n        // var sGenChars=\"abc\";\r\n        //-------------------------------------\r\n        var iGenCharLength = sGenChars.length;\r\n\r\n        var ii = iGenNext;\r\n        while (ii > 0) {\r\n            var iPos = ii % iGenCharLength;\r\n            var ch = sGenChars.substr(iPos, 1);\r\n            sOut += ch;\r\n            ii = Math.floor(ii / iGenCharLength);\r\n        }\r\n        ii = sOut.length;\r\n        while (ii < iMinLen) {\r\n            sOut += sGenChars.substr(0, 1);\r\n            ii++;\r\n        }\r\n        //---------\r\n        sOut = strReverse(sOut);\r\n        return sOut;\r\n    };\r\n    var strReverse = function (str) {//reverse a string: ex: \"abcd\" becomes \"dcba\"\r\n        var sOut = \"\";\r\n        var iLen = str.length;\r\n        for (var ii = iLen - 1; ii >= 0; ii--) {\r\n            sOut += str.substr(ii, 1);\r\n        }\r\n        return sOut;\r\n    };\r\n    var preArticle = function (sWord, xLanguage) {//for language xLanguage extract the article to be used before sWord\r\n        //Ex z=\"What is \"+dDictionary.preArticle(xEntity,\"En\")+\"?\";\r\n        if (!sWord)\r\n            return null;\r\n        var trad = {\"En\": \"a\", \"Fr\": \"un\", \"Pt\": \"um\", \"Nl\": \"een\"};\r\n        var xArticle = trad[xLanguage];\r\n        var xFirst = sWord.substr(0, 1);\r\n        var xLen = sWord.length;\r\n        var xLast = sWord.substr(xLen - 1, 1);\r\n\r\n        switch (xLanguage) {\r\n            case \"En\":\r\n                if ((\"aeiou\").indexOf(xFirst) >= 0) //if first letter is one of\r\n                    xArticle = \"an\";\r\n                break;\r\n            case \"Fr\":\r\n                var xLast2 = sWord.substr(xLen - 2, 2);\r\n                if ((\"ée ie té\").indexOf(xLast2) >= 0)\r\n                    xArticle = \"une\";\r\n                var xLast3 = sWord.substr(xLen - 3, 3);\r\n                if ((\"ade eur rie ère ine ise ose ole ure\").indexOf(xLast3) >= 0)\r\n                    xArticle = \"une\";\r\n                var xLast4 = sWord.substr(xLen - 4, 4);\r\n                if ((\"aille ison sion tion ance asse étée ence euse elle esse ette\").indexOf(xLast3) >= 0)\r\n                    xArticle = \"une\";\r\n                break;\r\n            case \"Pt\":\r\n                if (xLast == \"a\")\r\n                    xArticle = \"uma\";\r\n                break;\r\n        }\r\n        return xArticle + \" \" + sWord;\r\n    };\t//preArticle\t\t\t\r\n    var plural = function (sWord, xLanguage) {//returns the plural of sWord in language=xLanguage\r\n        //ex: dDictionary.plural(\"car\",\"En\") ->cars, dDictionary.plural(\"box\",\"En\")->boxes \r\n        var xWord = sWord;\r\n        var xFirst = sWord.substr(0, 1);\r\n        var xLen = sWord.length;\r\n        var xLast = sWord.substr(xLen - 1, 1);\r\n        var xLast2 = sWord.substr(xLen - 2, 2);\r\n        var xLast3 = sWord.substr(xLen - 3, 3);\r\n\r\n        switch (xLanguage) {\r\n            case \"En\":\r\n                // var xLast2=sWord.substr(xLen-2,2);\r\n                if ((\"x\").indexOf(xLast) >= 0) { //if last char is one of\r\n                    xWord = xWord + \"es\";//box->boxes\r\n                } else if ((\"y\").indexOf(xLast) >= 0) { //if last chars are one of\r\n                    xWord = xWord.substr(0, xLen - 1) + \"ies\";//city ->cities\r\n                } else if ((\"ch to ro\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord + \"es\";//switch ->switches tomato->tomatoes hero->heroes\r\n                    if ((\"disco piano photo\").indexOf(sWord) >= 0)//exceptions to the above rule\r\n                        xWord = sWord + \"s\";\r\n                } else if ((\"fe\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 2) + \"ves\";//wife ->wives\r\n                } else if ((\"lf\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 1) + \"ves\";//shelf->shelves\r\n                } else {//remaining cases\r\n                    xWord = xWord + \"s\";\r\n                }\r\n                //irregular forms\r\n                var oIrr = {\r\n                    man: \"men\",\r\n                    woman: \"women\",\r\n                    child: \"children\",\r\n                    mouse: \"mice\",\r\n                    teeth: \"tooth\",\r\n                    goose: \"geese\",\r\n                    foot: \"feet\",\r\n                    ox: \"oxen\"\r\n                };\r\n                xIrr = oIrr[sWord];\r\n                if (xIrr)\r\n                    xWord = xIrr;\r\n                break;\r\n            case \"Fr\":\r\n                // xLast2=sWord.substr(xLen-2,2);\r\n                if ((\"xs\").indexOf(xLast) >= 0) { //if last char is one of\r\n                    xWord = xWord;//prix->prix gros->gros\r\n                } else if ((\"al\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 1) + \"ux\";//jornal -> jornaux\r\n                } else if ((\"au eu\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord + \"x\";//chateu ->chateux, jeu -> jeux\r\n                } else {//remaining cases\r\n                    xWord = xWord + \"s\";\r\n                }\r\n                break;\r\n            case \"Pt\":\r\n                // var xLast2=sWord.substr(xLen-2,2);\r\n                // var xLast3=sWord.substr(xLen-3,3);\r\n                if ((\"rsz\").indexOf(xLast) >= 0) { //if last char is one of\r\n                    xWord = xWord + \"es\";//cor->cores, chafariz->chafarizes mes->meses\r\n                } else if ((\"al el il ol\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 1) + \"is\";//sinal->sinais papel->papeis barril->barris lencol->lencois\r\n                } else if ((\"cao iao\").indexOf(xLast3) >= 0) { //if last 3 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 2) + \"oes\";//organização->organizações, avião->aviões \r\n                } else if ((\"ao\").indexOf(xLast2) >= 0) { //if last 2 chars are one of\r\n                    xWord = xWord.substr(0, xLen - 1) + \"es\";//pão->pães\r\n                } else {//remaining cases\r\n                    xWord = xWord + \"s\";\r\n                }\r\n                break;\r\n            case \"Nl\":\r\n                // var xLast2=sWord.substr(xLen-2,2);\r\n                // var xLast3=sWord.substr(xLen-3,3);\r\n                if ((\"aeiou\").indexOf(xLast) >= 0) { //if last char is one of (vowel) plural is +en, +s or 's\r\n                    xWord = xWord + \"s\";//radio->radios, ziekte->ziektes \t\r\n                    if ((\"bekende gepensioneerde werkende\").indexOf(sWord) >= 0)//exceptions to the above rule\r\n                        xWord = sWord + \"n\";\r\n                } else {//end in consonant\r\n                    if ((\"kl\").indexOf(xLast) >= 0) { //if last chars are one of\r\n                        xWord = xWord + xLast + \"en\";//rok->rokken, geval->gevallen\r\n                    } else if ((\"el em en er um rd\").indexOf(xLast2) >= 0) { //if last chars are one of\r\n                        xWord = xWord + \"s\";//keuken->keukens\r\n                    } else if ((\"eur oon oor ier\").indexOf(xLast3) >= 0) { //if last chars are one of\r\n                        xWord = xWord + \"s\";//monteur ->monteurs\r\n                    } else if ((\"f\").indexOf(xLast) >= 0) { //if last chars are one of\r\n                        xWord = xWord.substr(0, xLen - 1) + \"ven\";//brief ->brieven\r\n                    } else {//remaining cases\r\n                        xWord = xWord + \"en\";//boek->boeken\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return xWord;\r\n    };//plural\r\n    var makeSemStr = function (x1, x2, xType, xLanguage) {//concatenate basic entity semantics\r\n        // x1 - first word (pre) to be connected to second by phrase of type=xType\r\n        // x2 - second word (pos) to be connected to first by phrase of type=xType\r\n        // xType:\r\n        //     \"A\" - \"Definition statement\" - singular-description x1=singular and x2=description\r\n        //\t\tuse: dDictionary.makeSemStr(\"Client\",\"Individual or Company to whom we may send invoices\",\"A\",\"En\") to get:\r\n        //\t\t\t<Client> is a <Individual or Company to whom we may send invoices>\r\n        //     \"B\" - \"plural statement\" singular-plural x1=singular and x2=plural\r\n        //\t\tuse: dDictionary.makeSemStr(\"Client\",\"clients\",\"B\",\"En\") to get:\r\n        //\t\t\t\tA set with more than one <Client> is called a set of <clients>\r\n        //------------------------------------------------------------------------------\r\n        var trad = { //semantinc repository\r\n            \"En\": {\r\n                A: {pre: \"\", mid: \" is a(n) \", pos: \"\"},\r\n                B: {pre: \"A set with more than one \", mid: \" is called a set of \", pos: \"\"}\r\n            },\r\n            \"Fr\": {\r\n                A: {pre: \"\", mid: \" c'est un \", pos: \"\"},\r\n                B: {pre: \"Un group avec plus q'un \", mid: \" s'appelle un groupe de \", pos: \"\"}\r\n            },\r\n            \"Nl\": {\r\n                A: {pre: \"\", mid: \" is een \", pos: \"\"},\r\n                B: {pre: \"Een set met meer dan één \", mid: \" is een set van \", pos: \"\"}\r\n            },\r\n            \"Pt\": {\r\n                A: {pre: \"\", mid: \" é um \", pos: \"\"},\r\n                B: {pre: \"Um grupo com mais do que um \", mid: \" designa-se por grupo de \", pos: \"\"}\r\n            }\r\n        };\r\n        var oTrad = trad[xLanguage][xType];\r\n        var sRet = oTrad.pre + x1 + oTrad.mid + x2 + oTrad.pos;\r\n        return sRet;\r\n    }; //makeSemStr\r\n    var entitySemantics = function (oEntity, xType, xLanguage) {//shows entity/description semantics\r\n        // return (case \"A\") --> <Client> is a <Individual or Company to whom we may send invoices>\r\n        // ex: if(this.oDbg.isDbg(\"main\")) this.oDbg.display(\"Semantics 1)->\"+dDictionary.entitySemantics(oEntity,\"A\",\"En\"));\r\n        // ex: if(this.oDbg.isDbg(\"main\")) this.oDbg.display(\"Semantics 2)->\"+dDictionary.entitySemantics(oEntity,\"B\",\"En\"));\r\n        //     A set with more than one <Client> is called a set of <clients>\r\n        var xRet = null;\r\n        if (xType == \"A\") {\r\n            xRet = makeSemStr(oEntity.singular, oEntity.description, \"A\", \"En\");\r\n        } else if (xType == \"B\") {\r\n            xRet = makeSemStr(oEntity.singular, oEntity.plural, \"B\", \"En\");\r\n        } else {\r\n            alert(\"dDictionary.entitySemantics Parameter xType=\" + xType + \" is unsupported !!!\");\r\n            //Err.alert(\"dDictionary.entitySemantics\",(new Error),\"Parameter xType=\"+xType+\" is unsupported !!!\");\r\n        }\r\n        return xRet;\r\n    }; //entitySemantics\r\n    var attributeSemantics = function (xAttribute, xAttrDescription, oEntity, xLanguage) {//shows singular-description for attribute=xAttribute\r\n        // ex: The <address> of <Client> is <the address to send invoices>\r\n        //  dDictionary.attributeSemantics(oEntity.attributes[i].name,oEntity.attributes[i].description,oEntity,\"En\");\r\n        var trad = { //entity+A+description, B.pre+singular+B.mid+plural+B.pos\r\n            \"En\": {pre: \"The \", mid1: \" of \", mid2: \" is \", pos: \"\"},\r\n            \"Fr\": {pre: \"Le \", mid1: \" du \", mid2: \" c'est \", pos: \"\"},\r\n            \"Nl\": {pre: \"Het \", mid1: \" van de \", mid2: \" is het \", pos: \"\"},\r\n            \"Pt\": {pre: \"\", mid1: \" do \", mid2: \" é \", pos: \"\"}\r\n        };\r\n        var oLanguage = trad[xLanguage];//extracts language code\r\n        return oLanguage.pre + xAttribute + oLanguage.mid1 + oEntity.singular + oLanguage.mid2 + xAttrDescription + oLanguage.pos;\r\n    };//attributeSemantics\r\n    var reversePhrase_is_something = function (sVerb) {\r\n        //\t\tbook \"is published by\" an editor--> editor \"publishes\" many books\r\n        var xArr = sVerb.split(\" \");\r\n        var xLen = xArr[1].length;//length of second word (supposedly a verb)\r\n        var xLast = xArr[1].substr(xLen - 2, 2);//last 2 chars (ed)\r\n        // if(xLast==\"ed\")\r\n        var xRet = xArr[1].substr(0, xLen - 2) + \"es\";//publishes\t\t\t\t\t\t\t\r\n        return xRet;\r\n    };\r\n    var invertedToOneVerb = function (sVerb, xLanguage) {//returns verb of inverted relation of sVerb\r\n        // this method computes the passive voice for the verb in \"To One\" sentences (3rd person)\r\n        //\t\tInvoice Line  \"has\" one product --> product \"is referred by\" many Incoice Lines\r\n        //\t\tInvoice \"invoices\" one client\t--> client \"is invoiced by\" many invoices\r\n        //\t\treserve \"is done by\" one member\t--> member \"does \" many reserves\r\n        //\t\tbook \"has\" genre                --> genre \"is referred by\" many books (or classifies) \r\n        //\t\tbook \"is published by\" an editor--> editor \"publishes\" many books\r\n        //\t\teditor \"publishes\" one title   --> title  \"is published by\" many editors\r\n        //\t\ttrip \"visits\" one destination   --> destination \"is visited by\" many trips\r\n        //\r\n        //\t\tsalesRep \"is responsable by complaints of \" many clients --> client \"complaints to\" one salesRep\r\n        //\r\n        //   sVerb - verb in the direct \"To One\" relation (left side examples)\r\n        //   RETURN: inverted relation verb (rigth side examples)\r\n        //     Example: \"visits\" becomes \"is visited by\"\r\n        //           the inverse relation becomes-> destination is visited by zero or many trips\r\n        // Tests\r\n        // xPre=\"reserve\";xIn=\"is done by\";xPos=\"member\";\r\n        // var xOut=dDictionary.invertedToOneVerb(xIn,\"En\");\r\n        // FL.common.printToConsole(xPre+\" \"+xIn+\" one \"+xPos+\" ->\"+xPos+\" \"+xOut+\" many \"+dDictionary.plural(xPre,\"En\"));\r\n        var DirDefault = {\r\n            \"En\": {\"default\": \"is referred by\", \"has\": \"is referred by\", \"is done by\": \"does\"},\r\n            \"Fr\": {\"default\": \"appartient a\", \"a\": \"appartient a\"},\r\n            \"Pt\": {\"default\": \"pertence a\", \"tem\": \"pertence a\"},\r\n            \"Nl\": {\"default\": \"wordt verwezen\", \"heeft\": \"wordt verwezen\"}\r\n        };\r\n        //var InvDefault ={ \"En\":{\"referres\":\"is referred by\"},\"Fr\":{\"a\":\"appartiennent\"},\"Pt\":{\"tem\":\"pertence a\"},\"Nl\":{\"heeft\":\"wordt verwezen\"};\r\n        var oObj = DirDefault[xLanguage];\r\n        var xRet = null;\r\n        if (oObj) {\r\n            for (var key in oObj) {\r\n                if (oObj.hasOwnProperty(key)) {\r\n                    if (key == sVerb)\r\n                        xRet = oObj[key];\r\n                }\r\n            }\r\n        }\r\n        if (xRet)\r\n            return xRet;\r\n        var xLen = sVerb.length;\r\n        var xArr = sVerb.split(\" \");\r\n        var xLast = null;\r\n        var xLast2 = null;\r\n        switch (xLanguage) {\r\n            case \"En\":\r\n                if (xArr.length > 1) {//more than one word\r\n                    if (xArr.length > 3) {\r\n                        if (xArr[1] == \"responsable\" && xArr[2] == \"by\") {//\"it begins by is responsable by\" Ex:\"is responsable by complaints\"\r\n                            xRet = xArr[3] + \" to\";//returns \"complaints to\"\r\n                        } else {\r\n                            xRet = reversePhrase_is_something(sVerb);\r\n                        }\r\n                    } else if (xArr[0] == \"is\") { //\"is published by\" ->publishes <> \"is managed by\" ->manages\r\n                        xRet = reversePhrase_is_something(sVerb);\r\n                    }\r\n                } else if (xArr.length == 1) { //one single word -> \"publishes\" ->\"is published by\", \"visits\"->\"is visited by\" \r\n                    xLen = xArr[0].length;\r\n                    xLast = xArr[0].substr(xLen - 1, 1);//last 1 chars (s)\r\n                    xLast2 = xArr[0].substr(xLen - 2, 2);//last 2 chars (s)\r\n                    if (xLast2 == \"es\") {//\"publishes\" ->\"is published by\"\r\n                        xRet = \"is \" + xArr[0].substr(0, xLen - 2) + \"ed by\";\r\n                    } else if (xLast == \"s\") {//\"visits\"->\"is visited by\" \r\n                        xRet = \"is \" + xArr[0].substr(0, xLen - 1) + \"ed by\";\r\n                    }\r\n                }\r\n                break;\r\n            case \"Pt\":\r\n                if (xArr.length > 1) {//more than one word\r\n                    if (xArr[0] == \"é\") { //\"é publicado por \" ->publica\r\n                        xLen = xArr[1].length;\r\n                        var xLast3 = xArr[1].substr(xLen - 3, 3);//last 2 chars (ed)\r\n                        if (xLast3 == \"ado\")\r\n                            xRet = xArr[1].substr(0, xLen - 3) + \"a\";\r\n                    }\r\n                } else if (xArr.length == 1) { //one single word -> \"publica\" ->\"é publicado por\", \"visita\"->\"é visitado por\" \r\n                    xLen = xArr[0].length;\r\n                    xLast = xArr[0].substr(xLen - 1, 1);//last 1 chars (s)\r\n                    xLast2 = xArr[0].substr(xLen - 2, 2);//last 2 chars (s)\r\n                    if (xLast2 == \"xx\") {//\"to be done\"\r\n                        xRet = \"is \" + xArr[0].substr(0, xLen - 2) + \"ed by\";\r\n                    } else if (xLast == \"a\") {//\"visita\"->\"is visited by\"\r\n                        xRet = \"é \" + xArr[0] + \"do por\";\r\n                    }\r\n                }\r\n                break;\r\n        }//end switch\r\n        if (!xRet)\r\n            xRet = oObj[\"default\"];\r\n        return xRet;\r\n    }; //invertedToOneVerb\t\t\t\r\n    var cardinalityDecoder = function (sCardinality, xLanguage) {//returns semantics to Cardinality - object {cardText:<string or null>,cardPlural:<boolean>}\r\n        //returns and object with {cardText:<string or null>,cardPlural:<boolean>}\r\n        //   cardText contains the expression corresponding to the code=sCardinality in the language=xLanguage\r\n        //\t\t if cardinality does not exist - cardText will be null - working as a validator\r\n        //   cardPlural - contains a boolean such as:\r\n        //\t\t if cardinality implies a second member singular in relation semantics - cardPlural will be false\r\n        //\t\t if cardinality implies a second member plural in relation semantics - cardPlural will be true\r\n        //\t\t  ex:in expression - \"Invoice Item\" \"belongs to\" \"one and only one\" \"Invoice\" ->second member is singular\r\n        //\t\t    :in expression - \"Client\" \"has\" \"many\" \"Invoices\"\t\t\t\t\t\t  ->second member is plural\r\n        var trad = { //entity+A+description, B.pre+singular+B.mid+plural+B.pos\r\n            \"En\": {\r\n                \"1\": {text: \"zero or 1\", cardPlural: false},\r\n                \"N\": {text: \"many\", cardPlural: true},\r\n                \"1\": {text: \"one and only one\", cardPlural: false}\r\n            },\r\n            \"Fr\": {\r\n                \"1\": {text: \"zero ou 1\", cardPlural: false},\r\n                \"N\": {text: \"plusieurs\", cardPlural: true},\r\n                \"1\": {text: \"un et seulement un\", cardPlural: false}\r\n            },\r\n            \"Nl\": {\r\n                \"1\": {text: \"nul of 1\", cardPlural: false},\r\n                \"N\": {text: \"velen\", cardPlural: true},\r\n                \"1\": {text: \"slechts één\", cardPlural: false}\r\n            },\r\n            \"Pt\": {\r\n                \"1\": {text: \"zero ou 1\", cardPlural: false},\r\n                \"N\": {text: \"varios\", cardPlural: true},\r\n                \"1\": {text: \"um e apenas um\", cardPlural: false}\r\n            },\r\n        };\r\n        var oLanguage = trad[xLanguage];//extracts language code\r\n        xCardText = null;\r\n        xCardPlural = false;\r\n        if (oLanguage) {//the quest is for a known language\r\n            var xDecoder = oLanguage[sCardinality];\r\n            if (xDecoder) {\r\n                xCardText = xDecoder.text;\r\n                xCardPlural = xDecoder.cardPlural;\r\n            }\r\n        }\r\n        return {cardText: xCardText, cardPlural: xCardPlural};//if cardiality does not exist cardText will return null\r\n    };//cardinalityDecoder\t\t\r\n    var relationSemantics = function (sSingular, sRightEntity, sVerb, sCardinality, xLanguage) {//shows relationsemantics\r\n        // ex for : sSingular=\"Client\",sRightEntity=\"Invoice\",sVerb=\"has\",sCardinality=\"0_N\",xLanguage=\"En\"\r\n        // \t  returns : \"Client has many invoices\"\r\n        //  dDictionary.attributeSemantics(oEntity.attributes[i].name,oEntity.attributes[i].description,oEntity,\"En\");\r\n        var xRet = sSingular + \" \" + sVerb + \" \";\r\n        var oCard = cardinalityDecoder(sCardinality, xLanguage);\r\n        if (!oCard.cardText) {\r\n            alert(\"relationSemantics - Impossible to find semantics for cardinality=\" + sCardinality + \" Language=\" + xLanguage);\r\n            //Err.alert(\"dDictionary.relationSemantics\",(new Error),\"Impossible to find semantics for cardinality=\"+sCardinality+\" Language=\"+xLanguage);\r\n        }\r\n        xRet += oCard.cardText + \" \";\r\n        var xRight = sRightEntity;//this will be the singular for thew right entity\r\n        if (oCard.cardPlural) {\r\n            xRight = FL.dd.entities[sRightEntity].plural;\r\n            if (!xRight) {\r\n                alert(\"relationSemantics - RightEntity=\" + sRightEntity + \" does not exist in Data Dictionay\");\r\n                //Err.alert(\"dDictionary.relationSemantics\",(new Error),\"RightEntity=\"+sRightEntity+\" does not exist in Data Dictionay\");\r\n            }\r\n        }\r\n        return xRet + xRight;\r\n    }; //relationSemantics\t\t\t\r\n    var attributeIndex = function (xSingular, xAttribute) {//for entity=xSingular, returns the index of attribute=xAttribute\r\n        // if attribute exists within xSingular returns it. Returns -1 otherwise\r\n        // FL.common.printToConsole(\"dd.attributeIndex ->check index for \"+xAttribute);\r\n        var xRet = -1;\r\n        var oEntity = FL.dd.entities[xSingular];\r\n        if (oEntity) {\r\n            var xArr = oEntity.attributes;\r\n            if (xArr.length > 0) {\r\n                // FL.common.printToConsole(\"-------------- dd.attributeIndex  existing attribute names ------------BEGIN\");\r\n                for (var i = 0; i < xArr.length; i++) {\r\n                    // FL.common.printToConsole(xArr[i].name);\r\n                    if (xArr[i].name == xAttribute) {\r\n                        xRet = i;\r\n                    }\r\n                }\r\n                // FL.common.printToConsole(\"-------------- dd.attributeIndex  existing attribute names ------------END\");\r\n            } else {\r\n                FL.common.printToConsole(\"FL.dd.attributeIndex ->no attributes defined !\");\r\n            }\r\n            // FL.common.printToConsole(\"dd.attributeIndex ->for attribute=\"+xAttribute+\" returns position=\"+xRet);\r\n        }\r\n        return xRet;\r\n    };//attributeIndex\r\n    var prepareRelation = function (xSingular, rCN, withEntityName, verb, cardinality, side, storedHere, xLanguage) {//prepare JSON to relation arr - used by FL.dd.addRelation()\r\n        var relation = {};\r\n        relation[\"rCN\"] = rCN;\r\n        relation[\"withEntity\"] = withEntityName;\r\n        relation[\"verb\"] = verb;\r\n        relation[\"cardinality\"] = cardinality;\r\n        if (!side)\r\n            side = null;\r\n        if (!storedHere)\r\n            storedHere = null;\r\n        relation[\"side\"] = side;\r\n        relation[\"storedHere\"] = storedHere;\r\n        // var rightEntityName = \r\n        var xSemantics = FL.dd.relationSemantics(xSingular, withEntityName, verb, cardinality, xLanguage);\r\n\r\n        relation[\"semantic\"] = xSemantics;\r\n\r\n        relation[\"side\"] = side;\r\n        relation[\"storedHere\"] = storedHere;\r\n        relation[\"withEntityCN\"] = null;//this is an auxiliary field to support FL.server.syncLocalDictionary()\r\n        return relation;\r\n    };\r\n    var getDictAttributesBackup = function (attrArr) {//returns a copy of an attributes Array (to be used by getDictEntityBackup)\r\n        var backupArr = _.map(attrArr, function (element) {\r\n            var eNumBackup = _.clone(element.enumerable);\r\n            var elBackup = _.clone(element);\r\n            elBackup.enumerable = eNumBackup;\r\n            return (elBackup);\r\n        });\r\n        return backupArr;\r\n    };\r\n    return {\r\n        entities: {__Last: 9999, __LastRelation: 0},\r\n        test: \"FL.dd.test return !!!\",\r\n        preArticle: function (sWord, xLanguage) {//for language xLanguage extract the article to be used before sWord\r\n            //Ex z=\"What is \"+dDictionary.preArticle(xEntity,\"En\")+\"?\";\r\n            return preArticle(sWord, xLanguage);\r\n        },\r\n        plural: function (sWord, xLanguage) {//returns the plural of sWord in language=xLanguage\t\t\t\t\r\n            return plural(sWord, xLanguage);\r\n        },\r\n        clear: function () {\r\n            this.entities = {__Last: 9999, __LastRelation: 0};\r\n        },\r\n        relationSemantics: function (sSingular, sRightEntity, sVerb, sCardinality, xLanguage) {\r\n            return relationSemantics(sSingular, sRightEntity, sVerb, sCardinality, xLanguage);\r\n        },\r\n        displayEntities: function () {//display all entities with their attributes and relations\r\n            //Reads dDictionary.entities={} and \r\n            //returns a collection of menu structure objects - {book:{},editor:{},..someEntity:{}}\r\n            //the key of the internal objects are the singular entity name\r\n            //   each internal object has: \r\n            //\t\tkey:{singular:<key>,plural:<entity plural>,description:<entity description>}\t\r\n            //based on  var oEntity=dDictionary.createEntity(\"Client\",\"clients\",\"Individual or Company to whom we may send invoices\");\r\n            //each attribute (i) is in dDictionary.entities[<sEentity>].attributes[i]\r\n            //     with the format \r\n            //\t\t{name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",enumerable:null,key:false});\r\n            //\t\t\tNOTE: enumerable is null for all type except \"enumerable\" - in this case enumerable is an array of strings\r\n            // \r\n            // FL.API.debug = true;FL.API.debugStyle = 1;\r\n            FL.common.printToConsole(\"********************************** FL.dd.displayEntities ********************************\", \"dump\");\r\n            FL.common.printToConsole(\"********************************************** BEGIN ******************************************\", \"dump\");\r\n\r\n            var oEntities = this.entities;\r\n            for (var key in oEntities) {\r\n                if (oEntities.hasOwnProperty(key)) {//this restrain the iteration only to the object's own attributes\r\n                    if (key == \"__Last\") {\r\n\r\n                        FL.common.printToConsole(\"(__Last) -> Number of entities in dictionary=\" + (oEntities[key] - 9999), \"dump\");\r\n                    } else if (key == \"__LastRelation\") {\r\n                        FL.common.printToConsole(\"(__LastRelation) -> Number of relations in dictionary=\" + oEntities[key], \"dump\");\r\n                    } else {\r\n                        FL.common.printToConsole(\"Entity=\" + oEntities[key].singular + \"/\" + oEntities[key].csingular + \" - Plural=\" + oEntities[key].plural + \"- description=\" + oEntities[key].description + \" sync=\" + oEntities[key].sync, \"dump\");\r\n                        //now we display each attribute\r\n                        var oL2C = oEntities[key].L2C;\r\n                        var xArr = oEntities[key].attributes;\r\n                        if (xArr.length > 0) {//the entity has attribute(s)\r\n                            for (var i = 0; i < xArr.length; i++) {\r\n                                var xName = xArr[i].name;\r\n                                var xCName = oL2C[xName];\r\n                                var xDescr = xArr[i].description;\r\n                                var xLabel = xArr[i].label;\r\n                                var xType = xArr[i].type;\r\n                                var xTypeUI = xArr[i].typeUI;\r\n                                var xMask = xArr[i].mask;\r\n                                var xSpecialTypeDef = xArr[i].specialTypeDef;\r\n                                if (FL.common.typeOf(xSpecialTypeDef) == \"array\"){\r\n                                    var specialEl = xSpecialTypeDef[0];\r\n                                    if (FL.common.typeOf(specialEl)==\"object\"){\r\n                                        xSpecialTypeDef = JSON.stringify(specialEl);\r\n                                    }\r\n                                }\r\n                                var xKey = xArr[i].key;\r\n                                var xEnumerable = xArr[i].enumerable;\r\n                                // FL.common.printToConsole(\"-----> attribute[\"+i+\"]=\"+xName+\"/\"+xDescr+\"/\"+xCName+\",key=\"+xKey+\",type=\"+xType);\r\n                                FL.common.printToConsole(\"-----> attribute[\" + i + \"]=\" + xName + \"/\" + xDescr + \"/\" + xCName + \",label=\" + xLabel + \",key=\" + xKey + \",type=\" + xType + \",typeUI=\" + xTypeUI + \",mask=\" + xMask + \",specialTypeDef=\" + xSpecialTypeDef, \"dump\");\r\n                                if (xEnumerable) {\r\n                                    for (var j = 0; j < xEnumerable.length; j++) {\r\n                                        FL.common.printToConsole(\"------------> enumerable[\" + j + \"]=\" + xEnumerable[j], \"dump\");\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            FL.common.printToConsole(\"----->no attributes defined !\", \"dump\");\r\n                        }\r\n                        xArr = oEntities[key].relations;\r\n                        if (xArr.length > 0) {//the entity has attribute(s)\r\n                            for (var i = 0; i < xArr.length; i++) {\r\n                                // var xCIdRelation=xArr[i].cIdRelation;\r\n                                var xSemantic = xArr[i].semantic;\r\n                                // var xCard=xArr[i].cardinality;\r\n                                var rCN = xArr[i].rCN;\r\n                                var withEntity = xArr[i].withEntity;\r\n                                var verb = xArr[i].verb;\r\n                                var rCN = xArr[i].rCN;\r\n                                var cardinality = xArr[i].cardinality;\r\n                                var side = xArr[i].side;\r\n                                var storeHere = xArr[i].storeHere;\r\n\r\n                                FL.common.printToConsole(\"-----> relation[\" + i + \"] with rCN=\" + rCN + \" -> \" + xSemantic + \" - #=\" + cardinality, \"dump\");\r\n                            }\r\n                        } else {\r\n                            FL.common.printToConsole(\"----->no relations defined !\", \"dump\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            FL.common.printToConsole(\"********************************************** END of displayEntities *****************************************\", \"dump\");\r\n            // FL.API.debug = false; FL.API.debugStyle = 0;\r\n        },\r\n        countEntitiesBeginningBy: function (singularPrefix) {//return the number of entities whose singular name begins by singularPrefix\r\n            //example   var count = FL.dd.countsEntitiesBeginningBy(\"_unNamed\");=>count = 0\r\n            var xRet = 0;\r\n            var lenOfEntityPrefix = singularPrefix.length;\r\n            var entities = this.entities;\r\n            _.each(entities, function (value, key) {// If list is a JavaScript object, iterator's arguments will be (value, key, list)\r\n                if (key.substring(0, lenOfEntityPrefix) == singularPrefix) {\r\n                    xRet++;\r\n                }\r\n            });\r\n            return xRet;\r\n        },\r\n        nextEntityBeginningBy: function (singularPrefix) {//proposes a name\r\n            //example   var nextUnNamed = FL.dd.nextEntityBeginningBy(\"unNamed\");\r\n            //   if there is no entity  begginning by unNamed --> returns \"unNamed\"\r\n            //   if there is \"unNamed\"  --> returns \"unNamed1\"\r\n            //   if there is \"unNamed1\"  --> returns \"unNamed2\"\r\n            var nextEntityName = singularPrefix;\r\n            var count = this.countEntitiesBeginningBy(singularPrefix);\r\n            if (count > 0) {\r\n                nextEntityName = singularPrefix + count;\r\n            }\r\n            return nextEntityName;\r\n        },\r\n        createEntity: function (xSingular, xDescription) {//add an entity entry returning true if it succeeds false otherwise\r\n            //   Whenever a new entity is created a key attribute is also created with:\r\n            //\t\tdDictionary.addAttribute(xSingular,\"id\",xSingular+\"'s id\",\"textBox\",true);\r\n            //      Note:The key attribute is glued to the entity - (it may be editable, but not deleted)\r\n            //\t\t\tif the entity exists the key attribute also exist\r\n            //\t\t\tit only can be removed if we remove the entity\r\n            //\r\n            //ex. var oEntity=dDictionary.createEntity(\"Client\",\"Individual or Company to whom we may send invoices\");\r\n            // NOTE: entity is created only client side => sync = false\r\n            // NOTE:plural is calculated by dDictionary.plural(xSingular,\"En\");\r\n            // returns true if succeded false if it fails\r\n            //alert(\"dDictionary.createEntity xSingular=\"+xSingular);\r\n            // FL.common.printToConsole(\"BEGIN ############################ FL.dd.createEntity ##############################\");\r\n            var oEntity = null;\r\n            var xPlural = null;\r\n            var xRet = false;\r\n            if (!this.entities[xSingular]) {//xSingular does not exist in dictionary\r\n                // FL.common.printToConsole(\"FL.dd.createEntity ----------------->\"+xSingular+\" new!!!\");\r\n                var xNext = this.entities[\"__Last\"] + 1;\r\n                this.entities[\"__Last\"] = xNext;\r\n                var xCSingular = getCompressed(xNext);\r\n                xPlural = plural(xSingular, \"En\");  //+\"s\";\r\n                oEntity = {\r\n                    singular: xSingular,\r\n                    csingular: xCSingular,\r\n                    plural: xPlural,\r\n                    description: xDescription,\r\n                    sync: false,\r\n                    lastId: 0,\r\n                    L2C: {},\r\n                    C2L: {},\r\n                    attributes: [],\r\n                    relations: []\r\n                };\r\n                this.entities[xSingular] = oEntity;\r\n                this.addAttribute(xSingular, \"id\", xSingular + \"'s id\", \"#\", \"string\");//we need to set key=true !!!\r\n                this.entities[xSingular].attributes[0].key = true;\r\n                xRet = true;\r\n            } else {//xSingular already exists in dictionary\r\n                // alert(\"FL.dd.createEntity Error: you tried create entity \"+xSingular+\" but it already exists\");\r\n            }\r\n            return xRet;\r\n        },\r\n        updateEntityBySingular: function (xSingular, xOptions) {//updates an existing entity. It can uodate the entity key \"singular\"\r\n            //Ex: updateEntityBySingular(\"client\",{singular:\"client\",plural:\"clients\",description:\"company that buys from us\"});\r\n            //This method updates the server dictionary !!!! - it needs a working connection\r\n            var def = $.Deferred();\r\n            var oEntity = null;\r\n            var oEntityUpdate = null;\r\n            var xRet = false;\r\n            if (this.entities[xSingular]) {//xSingular exists in dictionary\r\n                var eCN = this.getCEntity(xSingular);\r\n                oEntity = this.entities[xSingular];\r\n                oEntityUpdate = _.extend(oEntity, xOptions);\r\n                if (oEntityUpdate.singular != xSingular) {\r\n                    delete this.entities[xSingular];//now that all relations are gone we can delete the entity\r\n                    this.entities[oEntityUpdate.singular] = oEntityUpdate;\r\n                } else {\r\n                    this.entities[xSingular] = oEntityUpdate;\r\n                }\r\n                var entityUpdatePromise = FL.API.updateDictionaryEntityProperties(eCN, oEntityUpdate);\r\n                entityUpdatePromise.done(function (result) {\r\n                    FL.common.printToConsole(\">>>>> updateEntityBySingular SUCCESS count=\" + result + \"<<<<<\");\r\n                    return def.resolve(result);\r\n                });\r\n                entityUpdatePromise.fail(function (err) {\r\n                    FL.common.printToConsole(\">>>>> updateEntityBySingular FAILURE <<<<< \" + err);\r\n                    return def.reject(err);\r\n                });\r\n                //  oEntity.sync = false;\r\n                // xRet = true;\r\n            } else {//xSingular does not exists in dictionary\r\n                var err = \"FL.dd.updateEntityBySingular Error: you tried update \" + xSingular + \" but it does not exists in Dictionary\";\r\n                return def.reject(err);\r\n            }\r\n            // return xRet;\r\n            return def.promise();\r\n        },\r\n        updateEntityByCName: function (xCName, xOptions) {//updates entity with compressed name = xCName with xOptions object\r\n            //Ex: updateEntityByCName(\"02\",false,{plural:\"clients\",description:\"company that buys from us\"});\r\n            //Note - that xCName may not exist because sync has changed to true- temporary compresede number was changed !\r\n            var xRet = false;\r\n            var oEntityUpdate = null;\r\n            var oldSingular = null;\r\n            var arrOfRightSide = _.values(this.entities);//an array of JSONs\r\n            var oEntity = _.find(arrOfRightSide, function (element) {\r\n                return element.csingular == xCName;\r\n            });\r\n            if (oEntity) {\r\n                oldSingular = oEntity.singular;\r\n                oEntityUpdate = _.extend(oEntity, xOptions);\r\n                delete this.entities[oldSingular];\r\n                var newSingular = oEntityUpdate.singular;\r\n                this.entities[newSingular] = oEntityUpdate;\r\n                this.entities[newSingular].sync = false;\r\n                xRet = true;\r\n            } else {//xCName does not exists in dictionary\r\n                alert(\"FL.dd.updateEntityByCName Error: you tried to update an entity with compressedName=\" + xCName + \" but it does not exists in local Dictionary\");\r\n            }\r\n            return xRet;\r\n        },\r\n        getCEntity: function (xEntity) {//returns the compressed name of a logical name xEntity - if does not exist =>returns null\r\n            //returns the compressed name of the logical name xEntity. The method is a NOP if xEntity is null;\r\n            var xCEntity = null;\r\n            if (xEntity) {\r\n                var oEntities = this.entities;\r\n                if (oEntities[xEntity])\r\n                    xCEntity = oEntities[xEntity].csingular;\r\n            }\r\n            return xCEntity;\r\n        },\r\n        getEntityByCName: function (eCN) {//returns the  logical name for compressed name = eCN. If not found returns null\r\n            //finds the first all keys of this.entities will be searched looking for key.csingular = eCN\r\n            var entityName = null;\r\n            var valuesArr = _.values(this.entities);\r\n            //note for _.find: if valuesArr is and array of objects =>element is the value of each key/value and returns value\r\n            var oEntity = _.find(valuesArr, function (element) {//element is each array element. If is an object it returns the value\r\n                if (typeof element == \"number\")\r\n                    return false;//necessary to skip __Last:<number> and __LastRelation:<number>\r\n                return element.csingular == eCN;\r\n            });\r\n            if (oEntity)\r\n                entityName = oEntity.singular;\r\n            return entityName;\r\n        },\r\n        addAttribute: function (xSingular, xAttribute, xDescription, xLabel, xType, xTypeUI, arrEnumerable, xMask, xSpecialTypeDef) {//adds AttributeName,Description, label Type and enumerable to entity = xSingular\r\n            // addAttribute: function(xSingular,xAttribute,xDescription,xLabel,xType,arrEnumerable) {//adds AttributeName,Description, label Type and enumerable to entity = xSingular\r\n            // xSingular - Entity name (singular) to add attribute\r\n            // xAttribute - attribute name (Nico's \"3\")\r\n            // xDescription - attribute description (Nico's \"4\")\r\n            // xLabel - attribute label (Nico's \"K\")\r\n            // xType - attribute data type (Nico's \"M\") - possible datatypes:string, integer, number, boolean, date, or json\r\n            // xTypeUI - widget to use for UI (Nico's \"9\") - possible values: textbox, integerbox, numberbox, percentbox, currencybox,\r\n            //\t\t areabox, emailbox, phonebox, datetimebox, combobox, checkbox, urlbox, lookupbox -->TBI imagebox, geoBox\r\n            // xMask - format mask applicable to textbox, integerbox, numberbox, percentbox and currencybox\r\n            // xSpecialTypeDef - Special type definition->ALWAYS A json . ex for typeUI==\"lookup\" xSpecialTypeDef={eCN:\"6A\",fCN:\"6C\"}\r\n            // arrEnumerable -  an array of enumerables or null  (Nico's \"N\")\r\n            // key - optional default = false - it is only true for standard attribute \"id\"\r\n\r\n            // if Type != \"enumerable\" => ArrEnumerable will be forced to null.\r\n\r\n\r\n            // if xAttribute already exists it is updated with xDescription, xLabel, xType, xTypeUI, arrEnumerable (xKey will not be changed)\r\n            // if xAttribute does not exist it is created with xDescription, xType and xKey forced to false\r\n            // if xTypeUI is different from \"combobox\" arrEnumerable is forced to false\r\n            //\r\n            // NOTE on xKey - the only attribute that has xKey=true is always created or removed when the entity is created or removed\r\n            //    To update the name and description of the key attribute of a just created attribute:\r\n            //\t\tdDictionary.createEntity(\"Client\",\"clients\",\"Individual or Company to whom we may send invoices\");//singular, plural, description\r\n            //\t\tdDictionary.renameAttribute(\"Client\",\"id\",\"name\");//renaming the key attribute\r\n            //\t\tdDictionary.addAttribute(\"Client\",\"name\",\"client's id\",\"Name\",\"string\",\"textbox\",null);\r\n            //\r\n            //\t\tIf we are updating a key attribute we force the type to \"number\" independently of the xType parameter\r\n            //\r\n            // NOTE: type is mandatory and must be one of: string, integer, number, Boolean, date, or json (this will be Nico's \"M\")\r\n            //oEntity={singular:\"Client\",plural:\"clients\",description:\"Company to send invoices\",lastId:0,L2C:{},C2L:{},attributes:[]};\r\n            //checks if attribute already exists. If it exists updates, otherwise create it !!!\r\n            //console.clear();\r\n            //var xMask = null;\r\n            //var xSpecialTypeDef = null;\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var xIndex = attributeIndex(xSingular, xAttribute);\r\n                if (xIndex < 0) {//if it does not exists creates it\r\n                    var nId = oEntity.lastId++;\r\n                    var sComp = getCompressed(nId++);\r\n                    //({name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",enumerable:null,key:false});\r\n                    if ((xType != \"string\") && (xTypeUI != \"combobox\"))\r\n                        arrEnumerable = null;\r\n                    oEntity.attributes.push({\r\n                        name: xAttribute,\r\n                        description: xDescription,\r\n                        label: xLabel,\r\n                        type: xType,\r\n                        typeUI: xTypeUI,\r\n                        mask: xMask,\r\n                        specialTypeDef: xSpecialTypeDef,\r\n                        enumerable: arrEnumerable,\r\n                        key: false\r\n                    });\r\n                    oEntity.L2C[xAttribute] = sComp;//Logical to Compressed\r\n                    oEntity.C2L[sComp] = xAttribute;//Compressed to Logical\r\n                    // oEntity.lastId = nId;\r\n                } else {//updates the existing attribute - if xKey is true (it will continue to be true)\r\n                    oEntity.attributes[xIndex].description = xDescription;\r\n                    oEntity.attributes[xIndex].label = xLabel;\r\n                    if (oEntity.attributes[xIndex].key)//if we are updating a key attribute we force the type to \"number\"\r\n                        xType = \"number\";\r\n                    oEntity.attributes[xIndex].type = xType;\r\n                    oEntity.attributes[xIndex].typeUI = xTypeUI;\r\n                    if ((xType != \"string\") && (xTypeUI != \"combobox\"))\r\n                        arrEnumerable = null;\r\n                    oEntity.attributes[xIndex].enumerable = arrEnumerable;\r\n                    oEntity.attributes[xIndex].mask = xMask;\r\n                    oEntity.attributes[xIndex].specialTypeDef = xSpecialTypeDef;\r\n                    //oEntity.attributes[xIndex].key=xKey;\r\n                }\r\n                oEntity.sync = false;\r\n                //dDictionary.save(xSingular,oEntity);\r\n            } else {\r\n                alert(\"FL.dd.addAttribute Error: you tried to add attribute \" + xAttribute + \" to a non existing entity \" + xSingular);\r\n                //Err.alert(\"dDictionary.addAttribute\",(new Error),\" you tried to add attribute \"+xAttribute+\" to a non existing entity \"+xSingular);\r\n            }\r\n        },\r\n        upsertAttribute: function (xSingular, xAttribute, options) {// upserts attribute in table with logical name = sSingular\r\n            // xSingular - Entity name (singular) to add attribute\r\n            // xAttribute - attribute name (Nico's \"3\")\r\n            // options is an object {} with properties:\r\n            // \t\tdescription - attribute description (Nico's \"4\")\r\n            // \t\tlabel - attribute label (Nico's \"K\")\r\n            // \t\ttype - attribute data type (Nico's \"M\") - possible datatypes:string, json or geoLocalization\r\n            // \t\ttypeUI - widget to use for UI (Nico's \"9\") - possible values: textbox, integerbox, numberbox, percentbox, currencybox,\r\n            //\t\t    areabox, emailbox, phonebox, datetimebox, combobox, checkbox, urlbox, lookupbox -->TBI imagebox, geoBox\r\n            // \t\tmask - format mask applicable to textbox, integerbox, numberbox, percentbox and currencybox\r\n            // \t\tspecialTypeDef - Special type definition. If typeUI==\"lookup\" =>specialTypeDef=\"<eCN>\" entity compressed name of lookup entity\r\n            // \t\tenumerable - arrEnumerable -  an array of enumerables or null  (Nico's \"N\")\r\n            // \t\tkey - optional default = false - it is only true for standard attribute \"id\"\r\n            //\r\n            // if Type != \"enumerable\" => ArrEnumerable will be forced to null.\r\n\r\n\r\n            // if xAttribute already exists it is updated with xDescription, xLabel, xType, xTypeUI, arrEnumerable (xKey will not be changed)\r\n            // if xAttribute does not exist it is created with xDescription, xType and xKey forced to false\r\n            // if xTypeUI is different from \"combobox\" arrEnumerable is forced to false\r\n            //\r\n            // NOTE on xKey - the only attribute that has xKey=true is always created or removed when the entity is created or removed\r\n            //    To update the name and description of the key attribute of a just created attribute:\r\n            //\t\tdDictionary.createEntity(\"Client\",\"clients\",\"Individual or Company to whom we may send invoices\");//singular, plural, description\r\n            //\t\tdDictionary.renameAttribute(\"Client\",\"id\",\"name\");//renaming the key attribute\r\n            //\t\tdDictionary.addAttribute(\"Client\",\"name\",\"client's id\",\"Name\",\"string\",\"textbox\",null);\r\n            //\r\n            //\t\tIf we are updating a key attribute we force the type to \"number\" independently of the xType parameter\r\n            //\r\n            // NOTE: type is mandatory and must be one of: string, integer, number, Boolean, date, or json (this will be Nico's \"M\")\r\n            //oEntity={singular:\"Client\",plural:\"clients\",description:\"Company to send invoices\",lastId:0,L2C:{},C2L:{},attributes:[]};\r\n            //checks if attribute already exists. If it exists updates, otherwise create it !!!\r\n            //console.clear();\r\n            var propsToUse = {\r\n                name: xAttribute,\r\n                description: null,\r\n                label: \"\",\r\n                type: \"string\",\r\n                typeUI: \"textbox\",\r\n                mask: null,\r\n                specialTypeDef: null,\r\n                enumerable: null,\r\n                key: false\r\n            };\r\n            _.extend(propsToUse, options);\r\n            // enforcements -------\r\n            if (propsToUse.type != \"string\" && propsToUse.typeUI != \"combobox\")\r\n                propsToUse.enumerable == null;\r\n            if (propsToUse.typeUI != \"textbox\" && propsToUse.typeUI != \"integerbox\" && propsToUse.typeUI != \"numberbox\" && propsToUse.typeUI != \"percentbox\" && propsToUse.typeUI != \"currencybox\")\r\n                propsToUse.mask == null;\r\n            if (propsToUse.typeUI != \"lookupbox\")\r\n                propsToUse.specialTypeDef == null;\r\n            // -------------------\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var xIndex = attributeIndex(xSingular, xAttribute);\r\n                if (xIndex < 0) {//if it does not exists creates it\r\n                    var nId = oEntity.lastId++;\r\n                    var sComp = getCompressed(nId++);//we must go to Nico's server !!!!!!!!!!!!!\r\n                    oEntity.attributes.push(propsToUse);\r\n                    oEntity.L2C[xAttribute] = sComp;//Logical to Compressed\r\n                    oEntity.C2L[sComp] = xAttribute;//Compressed to Logical\r\n                    // oEntity.lastId = nId;\r\n                } else {//updates the existing attribute - if xKey is true (it will continue to be true)\r\n                    oEntity.attributes[xIndex].description = propsToUse.description;\r\n                    oEntity.attributes[xIndex].label = propsToUse.label;\r\n                    if (oEntity.attributes[xIndex].key)//if we are updating a key attribute we force the type to \"number\"\r\n                        propsToUse.type = \"number\";\r\n                    oEntity.attributes[xIndex].type = propsToUse.type;\r\n                    oEntity.attributes[xIndex].typeUI = propsToUse.typeUI;\r\n                    oEntity.attributes[xIndex].mask = propsToUse.mask;\r\n                    oEntity.attributes[xIndex].specialTypeDef = propsToUse.specialTypeDef;\r\n                    oEntity.attributes[xIndex].enumerable = arrEnumerable;\r\n                    //oEntity.attributes[xIndex].key=xKey;\r\n                }\r\n                oEntity.sync = false;\r\n                //dDictionary.save(xSingular,oEntity);\r\n            } else {\r\n                alert(\"FL.dd.upsertAttribute Error: you tried to add attribute \" + xAttribute + \" to a non existing entity \" + xSingular);\r\n            }\r\n        },\r\n        getEntityAttribute: function (xSingular, xAttribute) {\r\n            // for entity xSingular and attribute with name=xAttribute returns:\r\n            //\t  {name:xName,description:xDescription,label:xLabel,type:xType,typeUI:xTypeUI,mask:xMask, specialTypeDef:xSpecialTypeDef, enumerable:xEnumerable}\r\n            //returns null if entity or attribute does not exist\r\n            var oAttributes = null;\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var xIndex = attributeIndex(xSingular, xAttribute);\r\n                if (xIndex >= 0) {//if attribute exists\r\n                    oAttributes = oEntity.attributes[xIndex];\r\n                }\r\n            }\r\n            return oAttributes;\r\n        },\r\n        updateAttribute: function (xSingular, xAttribute, changeObj) {\r\n            //changeObj is an object with keys corresponding to xAttribute (old name - notice that the name itself can be changed).\r\n            // May have any key or key combination of:{name:xName,description:xDescription,label:xLabel,type:xType,typeUI:xTypeUI,enumerable:xEnumerable}\r\n            var def = $.Deferred();\r\n            var err = null;\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var xIndex = attributeIndex(xSingular, xAttribute);\r\n                if (xIndex >= 0) {//if attribute exists\r\n                    var attributesCopy = getDictAttributesBackup(oEntity.attributes);//it is an overkill- we only need one attribute\r\n                    var attrCopy = attributesCopy[xIndex];\r\n                    // var oAttributes = _.extend(oEntity.attributes[xIndex], changeObj);//notice that the attribute name may also belong to changeObj\r\n                    var oAttributes = _.extend(attrCopy, changeObj);//notice that the attribute name may also belong to changeObj\r\n                    if (oAttributes.name != xAttribute) {//attribute name was changed. It is necessary to update L2C and C2L\r\n                        var compressedAttr = oEntity.L2C[xAttribute];\r\n                        oEntity.C2L[compressedAttr] = oAttributes.name;//Compressed to Logical is updated\r\n                        delete oEntity.L2C[xAttribute];\r\n                        oEntity.L2C[oAttributes.name] = compressedAttr;\r\n                    }\r\n                    oEntity.attributes[xIndex] = _.omit(oAttributes, \"oldname\", \"singular\");\r\n                    var fCN = oEntity.L2C[oAttributes.name];\r\n                    //var eCN = oEntity.csingular;\r\n                    //send to server\r\n                    var promise = FL.API.updateDictionaryAttribute(fCN, oAttributes);\r\n                    promise.done(function (result) {\r\n                        oEntity.sync = true;\r\n                        return def.resolve(result);\r\n                    });\r\n                    promise.fail(function (err) {\r\n                        oEntity.sync = false;\r\n                        return def.reject(err);\r\n                    });\r\n                } else {\r\n                    err = \"FL.dd.updateAttribute Error: impossible to update attribute \" + xAttribute + \". It does not exist in entity \" + xSingular;\r\n                    return def.reject(err);\r\n                }\r\n            } else {\r\n                err = \"FL.dd.updateAttribute Error: you tried to update attribute \" + xAttribute + \" to a non existing entity \" + xSingular;\r\n                return def.reject(err);\r\n            }\r\n            return def.promise();\r\n        },\r\n        addRelation: function (xSingular, withEntityName, verb, cardinality, side, storedHere, xLanguage) {//adds a new relation to the array of relations of entity xSingular\r\n            //xLanguage --> En, Fr, Nl, Pt\r\n            //NOTE: the rCN relation compressed name is retirned by the server when we try to create the relation.\r\n            //      In order to follow the approach -->\"first we create in local dictionary the we synchronize to the server\" we begin by generating\r\n            //\t\tan unique compressed name in the client that will be updated when we save the relation in the server. The unique relation compressed\r\n            //\t\tname is generated from entities.__LastRelation\r\n            //ex:FL.dd.addRelation(entities[i].d[\"3\"],rCN,withEntityName,verb,cardinality,side,storedHere);\r\n            //\t{idRelation:3,cIdRelation:\"03\",rightEntity:\"Invoice\",description:\"has\",cardinality:\"0_1\",semantic:\"Client has many Invoices\",delChildren:false}\r\n            //dDictionary.addRelation= function(xSingular,sRightEntity,sDescription,sCardinality,bDelChildren,xLanguage) {//adds/updates a relation to the Data Dictionary\r\n\r\n\r\n            //     In real live we could have:\r\n            //\t\t\t\t\t\"invoice\" \"has\" \"one and only one\" \"client\" - a first relation between invoice and client\r\n            //\t\t\t\t\t\"invoice\" \"products must be delivered to\" \"one and only one\" \"client\" - a second relation between invoice and client\r\n            // alert(\"step1\");\r\n            var oEntity = this.entities[xSingular];\r\n            var oToEntity = this.entities[withEntityName];\r\n            if (oEntity) {\r\n                if (oToEntity) {\r\n                    // checks if rCN already exists - if it exists it does not add\r\n                    if (FL.dd.isRelation(xSingular, rCN)) {\r\n                        alert(\"FL.dd.addRelation Error: you tried to add a relation with a compressed name \" + rCN + \" that already exists !\");\r\n                    } else {\r\n                        // var xNextRelation=dDictionary.entities[\"__LastRelation\"]+1; ???????????\r\n                        // dDictionary.entities[\"__LastRelation\"]=xNextRelation; ???????????????\r\n                        var xNext = this.entities[\"__LastRelation\"] + 1;\r\n                        this.entities[\"__LastRelation\"] = xNext;\r\n                        var rCN = getCompressed(xNext);\r\n\r\n                        var side2 = 1;//we assume (0 - 1) if not we set  (1 - 0)\r\n                        if (side == 1)//Side, either 0 or 1. Mandatory\r\n                            side2 = 0;\r\n                        var storedHere2 = false;//we assume (true - false) if not we set (false - true)\r\n                        if (!storedHere)//storedHere. Where to store the relation. Should be true to at least one side.\r\n                            storeHere2 = true;\r\n\r\n                        var relation = prepareRelation(xSingular, rCN, withEntityName, verb, cardinality, side, storedHere, xLanguage);\r\n                        oEntity.relations.push(relation);\r\n\r\n                        var verb2 = invertedToOneVerb(verb, xLanguage);\r\n                        var cardinality2 = \"1\";//Cardinality. Not used by the datalayer. Could be ‘1’ or ‘N’. Mandatory\r\n                        if (cardinality == \"1\")\r\n                            cardinality2 = \"N\";\r\n\r\n                        var relation2 = prepareRelation(withEntityName, rCN, xSingular, verb2, cardinality2, side2, storedHere2, xLanguage);\r\n                        oToEntity.relations.push(relation2);\r\n                        oToEntity.sync = false;\r\n                    }\r\n                } else {\r\n                    alert(\"FL.dd.addRelation Error: you tried to add a relation between \" + xSingular + \" and a non existing entity \" + withEntityName);\r\n                }\r\n            } else {\r\n                alert(\"FL.dd.addRelation Error: you tried to add a relation \" + relationName + \" to a non existing entity \" + xSingular);\r\n            }\r\n        },\r\n        relationPass2: function () {//goes thru all entities and for all relations of each entity fills withEntity and semantic using withEntityCN. Finally it sets sync = true for entity\r\n            var valuesArr = _.values(this.entities);\r\n            //note for _.find: if valuesArr is and array of objects =>element is the value of each key/value and returns value\r\n            _.each(valuesArr, function (element) {//element is each array element. If is an object it returns the value\r\n                if (typeof element != \"number\") {\r\n                    // FL.common.printToConsole(\"Pass2 -->\"+element.singular);\r\n                    var xSingular = element.singular;\r\n                    _.each(element.relations, function (relation) {//relation is a relation from the current entity\r\n                        relation[\"withEntity\"] = FL.dd.getEntityByCName(relation[\"withEntityCN\"]);\r\n                        relation[\"semantic\"] = FL.dd.relationSemantics(xSingular, relation[\"withEntity\"], relation[\"verb\"], relation[\"cardinality\"], \"En\");//sSingular,sRightEntity,sVerb,sCardinality,xLanguage\r\n                    });\r\n                    FL.dd.setSync(xSingular, true);\r\n                }\r\n            });\r\n        },\r\n        isRelation: function (xSingular, rCN) {//returns true if relation exists, false otherwise\r\n            var exists = false;\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var arrPos = _.find(oEntity.relations, function (element) {\r\n                    return element.rCN == rCN;\r\n                });\r\n                if (arrPos >= 0)\r\n                    exists = true;\r\n            }\r\n            return exists;\r\n        },\r\n        getEntityBySingular: function (xSingular) {//returns an entity and its attributes\r\n            var oEntity = this.entities[xSingular];\r\n            return oEntity;\r\n        },\r\n        isEntityInLocalDictionary: function (entityName) {//returns true if entityName exists in local dictionary\r\n            var exists = false;\r\n            if (this.getEntityBySingular(entityName))//if getEntityBySingular is not null =>exists = true\r\n                exists = true;\r\n            return exists;\r\n        },\r\n        isEntityInLocalDictionaryByCN: function (eCN) {//returns true if compressed entity name (eCN) exists in local dictionary\r\n            var exists = false;\r\n            if (this.getEntityByCName(eCN))\r\n                exists = true;\r\n            return exists;\r\n        },\r\n        histoMailPeer: function (entityName) {\r\n            var eCN = this.getCEntity(entityName);\r\n            return histoName = \"_histoMail_\" + eCN;\r\n        },\r\n        peerTypeFor: function (typeOfPeer, entityName) {//for type histoMail and entity ecn=55 forms \"_histomail_55\"\r\n            var eCN = this.getCEntity(entityName);\r\n            return histoName = \"_\" + typeOfPeer + \"_\" + eCN;\r\n        },\r\n        isHistoMailPeer: function (entityName) {//returns true if _histoMail_<ecn(entityName)> exists in local dictionary\r\n            var exists = false;\r\n            if (this.isEntityInLocalDictionary(this.histoMailPeer(entityName))) {\r\n                exists = true;\r\n            }\r\n            return exists;\r\n        },\r\n        isHistoMailPeerByCN: function (ecN) {//returns true if _histoMail_<ecn> exists in local dictionary\r\n            var exists = false;\r\n            if (this.isEntityInLocalDictionary(\"_histoMail_\" + eCN)) {\r\n                exists = true;\r\n            }\r\n            return exists;\r\n        },\r\n        isEntityWithTypeUI: function (entityName, typeUI) {//returns true if entityName has an Email field\r\n            var exists = false;\r\n            var oEntity = this.entities[entityName];\r\n            if (oEntity) {//searches for the first Email field\r\n                var el = _.find(oEntity.attributes, function (element) {\r\n                    return element.typeUI == typeUI;\r\n                });\r\n                if (el) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                alert(\"FL.dd.isEntityWithTypeUI Error: \" + entityName + \" does not exist ! \");\r\n                return false;\r\n            }\r\n        },\r\n        firstEmailAttribute: function (eCN) {\r\n            var emailAttr = null;\r\n            var entityName = this.getEntityByCName(eCN);\r\n            var oEntity = this.entities[entityName];\r\n            var el = _.find(oEntity.attributes, function (element) {\r\n                return ( element.typeUI == \"emailbox\" || element.typeUI == \"email\");\r\n                // if ( element.typeUI == \"emailbox\" || element.typeUI == \"email\")\r\n                // \treturn element.name;\r\n            });\r\n            if (!_.isUndefined(el))\r\n                emailAttr = el.name;\r\n            return emailAttr;\r\n        },\r\n        isEntityInSync: function (entityName) {//returns true if entityName has in sync status = true\r\n            var exists = false;\r\n            var oEntity = this.entities[entityName];\r\n            if (oEntity) {\r\n                return oEntity.sync;\r\n            } else {\r\n                alert(\"FL.dd.isEntityInSync Error: \" + entityName + \" does not exist ! \");\r\n                return false;\r\n            }\r\n        },\r\n        isEntityByCNInSync: function (eCN) {//returns true if eCN has in sync status = true - if eCN does not exist returns false\r\n            var entityName = this.getEntityByCName(eCN);\r\n            if (entityName) {\r\n                var oEntity = this.entities[entityName];\r\n                if (oEntity) {\r\n                    return oEntity.sync;\r\n                } else {\r\n                    alert(\"FL.dd.isEntityByCNInSync Error: Entity compressed name =\" + eCN + \" exists, but associated entityName=\" + entityName + \" does not exist ! \");\r\n                    return false;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        setSync: function (xSingular, bStatus) {//set sync = true for entity= xSingular - nothing is done if entity does not exist\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                oEntity.sync = bStatus;\r\n            }\r\n        },\r\n        setFieldTypeUI: function (xSingular, fieldName, newTypeUI) {//sets typeUI = newTypeUI for field = fieldName in entity xSingular\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                oEntity.sync = false;\r\n                var el = _.find(oEntity.attributes, function (element) {\r\n                    return element.name == fieldName;\r\n                });\r\n                if (el) {\r\n                    el.typeUI = newTypeUI;\r\n                    return true;\r\n                } else {\r\n                    alert(\"FL.dd.setFieldTypeUI Error: field \" + fieldName + \" does not exist in entity \" + xSingular);\r\n                    return false;\r\n                }\r\n            } else {\r\n                alert(\"FL.dd.setFieldTypeUI Error: \" + xSingular + \" does not exist ! \");\r\n                return false;\r\n            }\r\n        },\r\n        createHistoMailPeer: function (entityName) {//create histoMail peer in local dict\r\n            var fName = this.histoMailPeer(entityName);\r\n            if (!this.isEntityInLocalDictionary(fName)) {\r\n                this.createEntity(fName, \"histoMail peer for \" + entityName);\r\n                //\t\t{name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:null,key:false});\r\n                this.addAttribute(fName, \"msg\", fName + \"'s msg\", \"XXX\", \"string\", \"textbox\", null);\r\n                this.setSync(fName, false);\r\n                return true;\r\n            } else {\r\n                alert(\"FL.dd.createHistoMailPeer Error: \" + fName + \", the histomail peer for \" + entityName + \" exists already! \");\r\n                return false;\r\n            }\r\n        },\r\n        removeHistoMailPeer: function (entityName) {//remove histoMail peer in local dict\r\n            var fName = this.histoMailPeer(entityName);\r\n            if (this.isEntityInLocalDictionary(fName)) {\r\n                this.removeEntity(fName);\r\n            } else {\r\n                alert(\"FL.dd.removeHistoMailPeer Error: \" + fName + \", the histomail peer for \" + entityName + \" does not exist! \");\r\n                return false;\r\n            }\r\n        },\r\n        setFieldCompressedName: function (xSingular, fieldName, fieldCN) {//for entity xSingular and attribute fieldName sets compressed name\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                oEntity.sync = false;\r\n                var oldCFieldName = oEntity.L2C[fieldName];\r\n                if (oldCFieldName) {\r\n                    delete oEntity.C2L[oldCFieldName];\r\n                    oEntity.L2C[fieldName] = fieldCN;//Logical to Compressed\r\n                    oEntity.C2L[fieldCN] = fieldName;//Compressed to Logical\r\n                }\r\n            }\r\n        },\r\n        getFieldCompressedName: function (xSingular, fieldName) {//for entity xSingular and attribute fieldName gets compressed name\r\n            var oEntity = this.entities[xSingular];\r\n            var fieldCN = null;\r\n            if (oEntity) {\r\n                fieldCN = oEntity.L2C[fieldName];\r\n            }\r\n            return fieldCN;\r\n        },\r\n        getArrayOfFields: function (xSingular) {//for entity xSingular return an array of JSON including statment\r\n            // The array has an object for each field with {attribute:xName, description:xDescription,statement:xStatement}\r\n            // Ex: returning items (excepting id)\r\n            //  items = [\r\n            //         {attribute:\"name\", description:\"official designation\",statement:\"the name of the client is the official designation\"},\r\n            //         {attribute:\"address\", description:\"place to send invoices\",statement:\"The address of the client is the place to send invoices\"},\r\n            //         {attribute:\"city\", description:\"headquarters place\", statement:\"The city of the client is the headquarters place\"},\r\n            //         {attribute:\"postal code\", description:\"postal reference for delivery\",statement:\"The postal code of the client is the postal reference for delivery\"}\r\n            //\t\t];\r\n            var oEntity = this.entities[xSingular];\r\n            var xRetArr = [];\r\n            var fieldCN = null;\r\n            if (oEntity) {\r\n                _.each(oEntity.attributes, function (element, index) {\r\n                    if (element.name != \"id\") {\r\n                        var el = {};\r\n                        el[\"attribute\"] = element.name;\r\n                        el[\"description\"] = element.description;\r\n                        el[\"statement\"] = attributeSemantics(element.name, element.description, oEntity, \"En\");\r\n                        //--- added at 12/2/2015\r\n                        el[\"type\"] = element.type;\r\n                        el[\"enumerable\"] = element.enumerable;\r\n                        el[\"typeUI\"] = element.typeUI;\r\n                        el[\"mask\"] = element.mask;\r\n                        el[\"specialTypeDef\"] = element.specialTypeDef;\r\n                        // ----\r\n                        xRetArr.push(el);\r\n                    }\r\n                });\r\n            } else {\r\n                alert(\"FL.dd.getArrayOfFields Error: entity \" + xSingular + \" does not exit in FrameLink dictionary.\");\r\n            }\r\n            return xRetArr;\r\n        },\r\n        setEntityFieldsBySingular: function (xSingular, fieldsArr, changedAttributesArr) {//sets all fields of entity xSingular.If xSingular does not exist nothing is done.\r\n            // fieldsArr - an Array of objects, each one with the format:\r\n            //     {name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:eNumArr,key:false});\r\n            //changedAttributesArr - an array of arrays. Each array element is an array with 2 elements [oldName,newName]\r\n            if (!_.isUndefined(this.entities[xSingular])) {\r\n                var oEntity = this.entities[xSingular];\r\n                _.each(changedAttributesArr, function (element) {\r\n                    var oldName = element[0];\r\n                    var newName = element[1];\r\n                    var compressedAttr = oEntity.L2C[oldName];\r\n                    oEntity.C2L[compressedAttr] = newName;\r\n                    delete oEntity.L2C[oldName];\r\n                    oEntity.L2C[newName] = compressedAttr;\r\n                });\r\n                this.entities[xSingular].attributes = fieldsArr;\r\n            }\r\n        },\r\n        userTypes: {///the opposite of userType() -->for a single userType returns type and typeUI. Ex FL.dd.userTypes.email =>{type:\"string\",typeUI:\"emailbox\"}\r\n            \"text\": {type: \"string\", typeUI: \"textbox\"},\r\n            \"integer\": {type: \"string\", typeUI: \"integerbox\"},\r\n            \"number\": {type: \"string\", typeUI: \"numberbox\"},\r\n            \"percent\": {type: \"string\", typeUI: \"percentbox\"},\r\n            \"currency\": {type: \"string\", typeUI: \"currencybox\"},\r\n            \"text upper\": {type: \"string\", typeUI: \"textUpperbox\"},//\"textbox\" is hard coded in FLgrid2.js --> dataRowAnalisys(rows,percent) for most basic type\r\n            \"text area\": {type: \"string\", typeUI: \"areabox\"},\r\n            \"email\": {type: \"string\", typeUI: \"emailbox\"},\r\n            \"phone\": {type: \"string\", typeUI: \"phonebox\"},\r\n            \"date\": {type: \"string\", typeUI: \"datetimebox\"},//to prevent crash\r\n            \"datetime\": {type: \"string\", typeUI: \"datetimebox\"},\r\n            \"combo list\": {type: \"string\", typeUI: \"combobox\"},\r\n            \"check\": {type: \"string\", typeUI: \"checkbox\"},\r\n            \"url\": {type: \"string\", typeUI: \"urlbox\"},\r\n            \"lookup\": {type: \"string\", typeUI: \"lookupbox\"},\r\n        },\r\n        arrOfUserTypesForDropdown: function () {//returns an array of objects with keys value and text, mandatory for dropdowns.\r\n            //\tvar arrOfObj=[{value:1,text:\"number\",something:\"abc\"},{value:2,text:\"text\",something:\"abc\"},{value:3,text:\"email\",something:\"abc\"},{value:4,text:\"phone\",something:\"abc\"},{value:5,text:\"enumerable\",something:\"abc\"},{value:6,text:\"date\",something:\"abc\"}];\r\n            var retArr = _.keys(this.userTypes);\r\n            retArr = _.map(retArr, function (element, index) {\r\n                return {\"value\": index + 1, \"text\": element};\r\n            });\r\n            return retArr;\r\n        },\r\n        userType: function (attributesElement) {//an element of attributesArr produced by csvStore.getAttributesArrNoId() or FL.dd.getArrayOfFields(entityName);//we retrieve all except name=\"id\r\n            //given a pair type an typeUI of a local dictionary field, returns the corresponding userType - inversion of FL.dd.userType\r\n            //this method is a centralization of userType attributes. For the user an email is diferent form a textbox or a phone.\r\n            // for a pair type,typeUI returns a single userType\r\n            var userType = null;\r\n            if (attributesElement.type == \"string\") {//type is one of: string, integer, number, boolean, date, or json (Nico's field \"M\")\r\n                var typeUIConverterInsideString = {\r\n                    \"textbox\": \"text\",\r\n                    \"integerbox\": \"integer\",\r\n                    \"numberbox\": \"number\",\r\n                    \"percentbox\": \"percent\",\r\n                    \"currencybox\": \"currency\",\r\n                    \"textUpperbox\": \"text upper\",\r\n                    \"areabox\": \"text area\",\r\n                    \"emailbox\": \"email\",\r\n                    \"email\": \"email\",\r\n                    \"phonebox\": \"phone\",\r\n                    \"datetimebox\": \"datetime\",\r\n                    \"combobox\": \"combo list\",\r\n                    \"checkbox\": \"check\",\r\n                    \"urlbox\": \"url\",\r\n                    \"lookupbox\": \"lookup\",\r\n                };\r\n                userType = typeUIConverterInsideString[attributesElement.typeUI];\r\n            } else {\r\n                userType = attributesElement.type;\r\n            }\r\n            return userType;\r\n        },\r\n        emptyRow: function (xSingular) {//returns an object with keys for every attribute and empty values for each attribute\r\n            //the name is emprtyRow because it was first used for grid new lines\r\n            var oEntity = this.entities[xSingular];\r\n            var newRow = null;\r\n            if (oEntity) {\r\n                var columnsArr = this.getArrayOfFields(xSingular);\r\n                // columnsArr format: [{label:\"xx\",name:fieldName,type:xtype,enumerable:xEnumerable,typeUI:xTypeUI},{col2}...{}]\r\n                newRow = this.emptyRowForArrOfTypes(columnsArr);\r\n                if (newRow.id)\r\n                    newRow.id = oEntity.lastId + 1;\r\n            } else {\r\n                alert(\"FL.dd.emptyRow Error: \" + xSingular + \" does not exist ! \");\r\n            }\r\n            return newRow;////returns {attribute1:emptyValue1,attribute2:emptyValue2...etc} or null\r\n        },\r\n        emptyRowForArrOfTypes: function (columnsArr) {//returns an object with keys for every attribute and empty values for each attribute\r\n            //columns array is an array of objects where each object must have the keys name and type\r\n            //      example: [{label:\"xx\",name:fieldName,type:xtype,enumerable:xEnumerable},{col2}...{}]\r\n            //returns {attribute1:emptyValue1,attribute2:emptyValue2...etc}\r\n            var newRow = {};\r\n            _.each(columnsArr, function (element, index) {\r\n                var fieldName = element.name;\r\n                if (element.type == \"number\") {\r\n                    newRow[fieldName] = 0;\r\n                } else if (element.type == \"date\") {\r\n                    newRow[fieldName] = new Date();\r\n                } else if (element.type == \"enumerable\") {\r\n                    newRow[fieldName] = '';\r\n                } else {\r\n                    newRow[fieldName] = '';\r\n                }\r\n                // FL.common.printToConsole(\"defaultNewGridRow newRow=\"+JSON.stringify(newRow));\r\n            });\r\n            return newRow;\r\n        },\r\n        createEntityAndFields: function (entityName, entityDescription, fieldDefinitionArray) {//creates a dd entity with a set of fields\r\n            //\tfieldDefinitionArray - array of JSON (one element per field) with format definition\r\n            // format for fieldDefinitionArray -->[{label:\"xx\",name:fieldName, description:xdescription, type:xtype,enumerable:xEnumerable},{col2}...{}]\r\n            //     NOTE:fieldDefinitionArray may come from  csvStore.getAttributesArr() or csvStore.getAttributesArrNoId()\r\n            // Returns: true if createEntityAndFields succeeds - false if entityName already exists.\r\n            var xRet = false;\r\n            if (FL.dd.createEntity(entityName, entityDescription)) {//singular,description\r\n                _.each(fieldDefinitionArray, function (element, index) {\r\n                    FL.dd.addAttribute(entityName, element.name, element.description, element.label, element.type, element.typeUI, element.enumerable);\r\n                });\r\n                xRet = true;\r\n            } else {\r\n                // alert(\"FL.dd.createEntityAndFields createEntity() Error entity \" + masterDetailItems.master.entityName + \" already exists !\");\r\n                FL.common.printToConsole(\"FL.dd.createEntityAndFields Error:trying to create existing entity \" + entityName + \" !!!\");\r\n            }\r\n            return xRet;\r\n        },\r\n        relationsOf: function (xSingular) {//returns an array with all relations of xSingular\r\n            //\tformat of each array element:\r\n            //\t{idRelation:3,cIdRelation:\"03\",rightEntity:\"Invoice\",description:\"has\",cardinality:\"0_1\",semantic:\"Client has many Invoices\"});\r\n            //   one entity may have several relations with another entity !\r\n            var xComboArr = [];\r\n            // var oEntity=dDictionary.entities[xSingular];\r\n            var oEntity = this.entities[xSingular];\r\n            if (oEntity) {\r\n                var xArr = oEntity.relations;\r\n                if (xArr.length > 0) {//entity has relations\r\n                    for (var i = 0; i < xArr.length; i++) {\r\n                        xComboArr.push(xArr[i]);\r\n                    }\r\n                }\r\n            }\r\n            return xComboArr;\r\n        },\r\n        removeRelations: function (xSingular, sRightEntity) {//removes direct and reverse relations between the 2 entities\r\n            //   removes relations sRightEntity from xSingular set of relations also removing\r\n            // \t\trelations xSingular from sRightEntity set  of relations\r\n            //   Notes:\r\n            ///  if xSingular or sRightEntity does not exists nothing is done\r\n            //   this method assumes several relatiions between two entities\r\n            //   if only one (direct or reverse) relation exist that relation will be removed\r\n\r\n            var oDirectEntity = this.entities[xSingular];\r\n            var oReverseEntity = this.entities[sRightEntity];\r\n\r\n            if (oDirectEntity && oReverseEntity) {\r\n                oDirectEntity.sync = false;\r\n                oReverseEntity.sync = false;\r\n                // var xIndex=dDictionary.relationIndex(xSingular,sRightEntity);\r\n                var directRelationsArr = oDirectEntity.relations;//all direct relations - we need to isolate those with sRightEntity\r\n                var indexArr = [];\r\n                _.each(directRelationsArr, function (element, index) {\r\n                    if (element.rightEntity == sRightEntity)\r\n                        indexArr.push(index);\r\n                });\r\n                _.each(indexArr, function (element) {\r\n                    oDirectEntity.relations.splice(element, 1); //in position xIndex remove 1 item\r\n                });\r\n                // xIndex=dDictionary.relationIndex(sRightEntity,xSingular);\r\n\r\n                var reverseRelationsArr = oReverseEntity.relations;\r\n                indexArr = [];\r\n                _.each(reverseRelationsArr, function (element, index) {\r\n                    if (element.rightEntity == xSingular)\r\n                        indexArr.push(index);\r\n                });\r\n                _.each(indexArr, function (element) {\r\n                    oReverseEntity.relations.splice(element, 1); //in position xIndex remove 1 item\r\n                });\r\n            }\r\n        },\r\n        removeEntity: function (xSingular) {//removes  entity xSingular in local dictionary\r\n            //In order to remove an entity we begin by removing the relations of every direct relation of xSingular\tand also the inverse relations\r\n            //\t\tthat other entities ,may have with xSingular\r\n            //\tformat of each array element:\r\n            // \t{idRelation:3,cIdRelation:\"03\",rightEntity:\"Invoice\",description:\"has\",cardinality:\"0_1\",semantic:\"Client has many Invoices\"});\r\n            // var oEntity=dDictionary.entities[xSingular];\r\n\r\n            var oEntity = this.entities[xSingular];\r\n\r\n            if (oEntity) {//entity exists\r\n                var xRelArr = FL.dd.relationsOf(xSingular);//xRelArr has all relations that xSingular has woth other entities\r\n                for (var i = 0; i < xRelArr.length; i++) {\r\n                    //now deletes each relation (inverse and direct)\r\n                    xRightEntity = xRelArr[i].rightEntity;\r\n                    if (xRightEntity)\r\n                        FL.dd.removeRelations(xSingular, xRightEntity);//this removes direct and inverse relations\r\n                }\r\n                ;\r\n                // delete dDictionary.entities[xSingular];//now that all relations are gone we can delete the entity\r\n                delete this.entities[xSingular];//now that all relations are gone we can delete the entity\r\n            } else {\r\n                alert(\"dDictionary.removeEntity Error:Trying to remove a non existing entity:\" + xSingular);\r\n            }\r\n        },\r\n        getDictEntityBackup: function (entityName) {//returns a copy of an whole entity (with all its internal objects)\r\n            var entityBackup = null;\r\n            if (!_.isUndefined(this.entities[entityName])) {\r\n                var oEntity = FL.dd.getEntityBySingular(entityName);\r\n                entityBackup = _.clone(oEntity);\r\n                var C2LBackup = _.clone(oEntity.C2L);\r\n                var L2CBackup = _.clone(oEntity.L2C);\r\n                var attributesBackup = getDictAttributesBackup(oEntity.attributes);\r\n                var relationsBackup = _.clone(oEntity.relations);\r\n\r\n                entityBackup.C2L = C2LBackup;\r\n                entityBackup.L2C = L2CBackup;\r\n                entityBackup.attributes = attributesBackup;\r\n                entityBackup.relations = relationsBackup;\r\n            }\r\n            return entityBackup;\r\n        },\r\n        init_t: function () {\r\n            FL.dd.t.entities = FL.dd.reverseEnt();\r\n        },\r\n        t: {\r\n            entities: null,\r\n            save: function () {\r\n                return \"save done\";\r\n            }\r\n        },\r\n        reverseEnt: function () {\r\n            var z = {};\r\n            var oEntities = FL.dd.entities;\r\n            FL.common.printToConsole(\"reverseEnt will process \" + (oEntities.__Last - 9999) + \" entities..\", \"dd\");\r\n            _.each(oEntities, function (value, key) {//mounts a JSON whose keys are eCN -the loop has each entity\r\n                if (key != \"__Last\" && key != \"__LastRelation\") {\r\n                    var fieldsObj = {};\r\n                    var thiz = this;\r\n                    _.each(value.attributes, function (element) {//for each entity mounts a JSON whose keys are fCN\r\n                        var fCN = value.L2C[element.name];\r\n                        element[\"parent\"] = key;\r\n                        element[\"disp\"] = function (x) {\r\n                            return \"hello \" + x;\r\n                        };\r\n                        element[\"setField\"] = function (options) {//options:(name,description,label,type,typeUI,enumerable)\r\n                            var entityName = this.parent;\r\n                            var fieldName = this.name;\r\n                            FL.common.printToConsole(\"--> saves -->FL.dd.t.entities[\" + value.csingular + \"].fields[\" + fCN + \"].setField(\" + JSON.stringify(options) + \")\", \"dd\");\r\n\r\n                            var promise = FL.dd.updateAttribute(entityName, fieldName, options);\r\n                            promise.done(function (dataArray) {\r\n                                FL.dd.init_t();//update changes to FL.dd.t.entities\r\n                                FL.API.serverCallBlocked = false;\r\n                                return;\r\n                            });\r\n                            promise.fail(function (err) {\r\n                                alert(\"FL.dd.t.entities[].fields[].setField() error impossible to update field attributes\");\r\n                                return;\r\n                            });\r\n                        };\r\n                        fieldsObj[fCN] = element;\r\n                        // fieldsObj[\"disp\"] = function(x){return \"hello \"+x;};\r\n                    });\r\n                    var properties = _.omit(value, \"lastId\", \"L2C\", \"C2L\", \"attributes\", \"relations\");\r\n                    properties[\"fields\"] = fieldsObj;\r\n                    properties[\"set\"] = function (options) {\r\n                        var entityName = this.singular;\r\n                        FL.dd.updateEntityBySingular(entityName, options);\r\n                        FL.dd.init_t();//update changes to FL.dd.t.entities\r\n                    };\r\n                    properties[\"getFieldCName\"] = function (fieldName) {//if field name does not exist returns null\r\n                        var entityName = this.singular;\r\n                        return FL.dd.getFieldCompressedName(entityName, fieldName);//returns null if entity name does not exist\r\n                    };\r\n                    properties[\"fieldsList\"] = function () {\r\n                        var fieldsListArr = [];\r\n                        var oEntity = FL.dd.entities[this.singular];\r\n                        var L2C = oEntity.L2C;\r\n                        if (oEntity) {//if entity exists\r\n                            _.each(oEntity.attributes, function (element, index) {\r\n                                if (element.name != \"id\") {\r\n                                    var el = {};\r\n                                    el[\"fCN\"] = L2C[element.name];\r\n                                    el[\"name\"] = element.name;\r\n                                    el[\"description\"] = element.description;\r\n                                    el[\"label\"] = element.label;\r\n                                    el[\"statement\"] = attributeSemantics(element.name, element.description, oEntity, \"En\");\r\n                                    el[\"type\"] = element.type;\r\n                                    el[\"enumerable\"] = element.enumerable;\r\n                                    el[\"typeUI\"] = element.typeUI;\r\n                                    el[\"mask\"] = element.mask;\r\n                                    el[\"specialTypeDef\"] = element.specialTypeDef;\r\n                                    // ----\r\n                                    fieldsListArr.push(el);\r\n                                }\r\n                            }, this);\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                        return fieldsListArr;\r\n                    };\r\n                    properties[\"addField\"] = function (name, description, label, type, typeUI, arrEnumerable) {//if it exists update it otherwise a new is created\r\n                        FL.dd.addAttribute(this.singular, name, description, label, type, typeUI, arrEnumerable);\r\n                        // FL.dd.upsertAttribute(this.singular,name,options);\r\n                        //   options = {description:description,label:label,type:type, typeUI:typeUI,mask:mask,specialTypeDef:specialTypeDef,enumerable:arrEnumerable}\r\n                        FL.dd.init_t();//update changes to FL.dd.t.entities\r\n                    };\r\n                    properties[\"getCName\"] = function (fieldName) {//if field name does not exist returns null\r\n                        // var entityName = \"sub\";//this.singular;\r\n                        var entityName = value.singular;\r\n                        return FL.dd.getFieldCompressedName(entityName, fieldName);//returns null if entity name does not exist\r\n                    };\r\n                    z[value.csingular] = properties;\r\n                    // this makes available: (code from bottom to top)\r\n                    //   FL.dd.t.entities[<eCN>].getCName(fieldName)\r\n                    //   FL.dd.t.entities[<eCN>].addField(name,description,label,type,typeUI,arrEnumerable)\r\n                    //   FL.dd.t.entities[<eCN>].fieldsList()\r\n                    //   FL.dd.t.entities[<eCN>].getFieldCName(fieldName)\r\n                    //   FL.dd.t.entities[<eCN>].set(options)\r\n\r\n                    //   FL.dd.t.entities[<eCN>].fields[<fCN>]\r\n                    //   FL.dd.t.entities[<eCN>].fields[<fCN>].parent  =>the logical name of <ecN>\r\n                    //   FL.dd.t.entities[<eCN>].fields[<fCN>].disp(x)  =>test returning \"hello\"+x\r\n                    //   FL.dd.t.entities[<eCN>].fields[<fCN>].setField(options) ->saves option in local and server\r\n                }\r\n            });\r\n            z[\"add\"] = function (singular, description) {\r\n                FL.dd.createEntity(singular, description);\r\n                //now we need to replicate it to the mockup structure - creating a new entry with the compressed name\r\n                var oEntity = FL.dd.entities[singular];\r\n                var eCN = FL.dd.getCEntity(singular);\r\n                FL.dd.init_t();//update changes to FL.dd.t.entities\r\n                // var newEntry = {};\r\n                // newEntry[eCN] = {singular:oEntity.singular,csingular:oEntity.csingular,plural:oEntity.plural,description:oEntity.description,sync:oEntity.sync};\r\n                // _.extend(FL.dd.t.entities,newEntry);\r\n            };\r\n            z[\"dumpToConsole\"] = function () {\r\n                FL.dd.displayEntities();\r\n            };\r\n            z[\"list\"] = function () {\r\n                var listArr = [];\r\n                var oEntities = FL.dd.entities;\r\n                _.each(oEntities, function (value, key) {\r\n                    if (key != \"__Last\" && key != \"__LastRelation\") {\r\n                        listArr.push(oEntities[key]);\r\n                    }\r\n                });\r\n                return listArr;\r\n            };\r\n            z[\"getCName\"] = function (entityName) {//if entity name does not exist returns null\r\n                var oEntity = FL.dd.entities[entityName];\r\n                if (FL.dd.entities[entityName])\r\n                    return FL.dd.entities[entityName].csingular;\r\n                return null;//oEntity; //gives undefined\r\n            };\r\n            // z has all  FL.dd.t.entities[<eCN>]. methods and data and\r\n            //\t\tFL.dd.t.entities.getName(entityName)\r\n            //\t\tFL.dd.t.entities.list()\r\n            //\t\tFL.dd.t.entities.dumpToConsole()\r\n            //\t\tFL.dd.t.entities.add(singular,description)\r\n            return z;\r\n        },\r\n        // entity:{\r\n        // \t\"50\":{\"singular\":\"customer\",disp:function(){return \"hello\";}},\r\n        // \t\"60\":{\"singular\":\"contact\"}\r\n        // },\r\n        // ent.prototype:{\r\n        // \tdisplay:function(){return this.arg1+\"/\"+this.arg2;};\r\n        // },\r\n        // e: new FL.dd.ent(),\r\n        entityX: {//object model mockup\r\n            // x: Object.create(FL.dd.ent),\r\n            //example\r\n            //\t\tvar display=null;\r\n            // \t\t_.each(FL.dd.entityX.list(),function(element){display+=element.singular+\"/\"+element.csingular+\"\\n\"});\r\n            // \t\talert(\"List all entities:\\n\"+display+\"\\nCompressed name of sub=\"+FL.dd.entityX.getCName(\"sub\"));\r\n            add: function (entityName, optionsObj) {\r\n                alert(\"Entity \" + entityName + \" was created !\");\r\n                return \"50\";\r\n            },\r\n            save: function () {\r\n                alert(\"entity.save() - Hello !\");\r\n            },\r\n            dump: function () {\r\n                FL.dd.displayEntities();\r\n            },\r\n            getCName: function (entityName) {\r\n                var oEntity = FL.dd.entities[entityName];\r\n                if (FL.dd.entities[entityName])\r\n                    return FL.dd.entities[entityName].csingular;\r\n                return null;//oEntity; //gives undefined\r\n            },\r\n            list: function () {\r\n                var listArr = [];\r\n                var oEntities = FL.dd.entities;\r\n                _.each(oEntities, function (value, key) {\r\n                    if (key != \"__Last\" && key != \"__LastRelation\") {\r\n                        listArr.push(oEntities[key]);\r\n                    }\r\n                });\r\n                return listArr;\r\n            }\r\n        }\r\n    };\r\n})();\r\n// FL.dd.t.entities.prototype.fullName = function() {\r\n//    return \"joao oliveira\";   \r\n// };\t\r\n// });"]}