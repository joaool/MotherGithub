{"version":3,"sources":["mockjax.js"],"names":[],"mappings":"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","file":"mockjax-compiled.js","sourcesContent":["/*!\r\n * MockJax - jQuery Plugin to Mock Ajax requests\r\n *\r\n * Version:  1.5.3\r\n * Released:\r\n * Home:   http://github.com/appendto/jquery-mockjax\r\n * Author:   Jonathan Sharp (http://jdsharp.com)\r\n * License:  MIT,GPL\r\n *\r\n * Copyright (c) 2011 appendTo LLC.\r\n * Dual licensed under the MIT or GPL licenses.\r\n * http://appendto.com/open-source-licenses\r\n */\r\n(function($) {\r\n    var _ajax = $.ajax,\r\n        mockHandlers = [],\r\n        mockedAjaxCalls = [],\r\n        CALLBACK_REGEX = /=\\?(&|$)/,\r\n        jsc = (new Date()).getTime();\r\n\r\n\r\n    // Parse the given XML string.\r\n\r\n    function parseXML(xml) {\r\n        if (window.DOMParser == undefined && window.ActiveXObject) {\r\n            DOMParser = function() {};\r\n            DOMParser.prototype.parseFromString = function(xmlString) {\r\n                var doc = new ActiveXObject('Microsoft.XMLDOM');\r\n                doc.async = 'false';\r\n                doc.loadXML(xmlString);\r\n                return doc;\r\n            };\r\n        }\r\n\r\n        try {\r\n            var xmlDoc = (new DOMParser()).parseFromString(xml, 'text/xml');\r\n            if ($.isXMLDoc(xmlDoc)) {\r\n                var err = $('parsererror', xmlDoc);\r\n                if (err.length == 1) {\r\n                    throw ('Error: ' + $(xmlDoc).text());\r\n                }\r\n            } else {\r\n                throw ('Unable to parse XML');\r\n            }\r\n            return xmlDoc;\r\n        } catch (e) {\r\n            var msg = (e.name == undefined ? e : e.name + ': ' + e.message);\r\n            $(document).trigger('xmlParseError', [msg]);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    // Trigger a jQuery event\r\n\r\n    function trigger(s, type, args) {\r\n        (s.context ? $(s.context) : $.event).trigger(type, args);\r\n    }\r\n\r\n    // Check if the data field on the mock handler and the request match. This\r\n    // can be used to restrict a mock handler to being used only when a certain\r\n    // set of data is passed to it.\r\n\r\n    function isMockDataEqual(mock, live) {\r\n        var identical = true;\r\n        // Test for situations where the data is a querystring (not an object)\r\n        if (typeof live === 'string') {\r\n            // Querystring may be a regex\r\n            return $.isFunction(mock.test) ? mock.test(live) : mock == live;\r\n        }\r\n        $.each(mock, function(k) {\r\n            if (live[k] === undefined) {\r\n                identical = false;\r\n                return identical;\r\n            } else {\r\n                // This will allow to compare Arrays\r\n                if (typeof live[k] === 'object' && live[k] !== null) {\r\n                    identical = identical && isMockDataEqual(mock[k], live[k]);\r\n                } else {\r\n                    if (mock[k] && $.isFunction(mock[k].test)) {\r\n                        identical = identical && mock[k].test(live[k]);\r\n                    } else {\r\n                        identical = identical && (mock[k] == live[k]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return identical;\r\n    }\r\n\r\n    // See if a mock handler property matches the default settings\r\n\r\n    function isDefaultSetting(handler, property) {\r\n        return handler[property] === $.mockjaxSettings[property];\r\n    }\r\n\r\n    // Check the given handler should mock the given request\r\n\r\n    function getMockForRequest(handler, requestSettings) {\r\n        // If the mock was registered with a function, let the function decide if we\r\n        // want to mock this request\r\n        if ($.isFunction(handler)) {\r\n            return handler(requestSettings);\r\n        }\r\n\r\n        // Inspect the URL of the request and check if the mock handler's url\r\n        // matches the url for this ajax request\r\n        if ($.isFunction(handler.url.test)) {\r\n            // The user provided a regex for the url, test it\r\n            if (!handler.url.test(requestSettings.url)) {\r\n                return null;\r\n            }\r\n        } else {\r\n            // Look for a simple wildcard '*' or a direct URL match\r\n            var star = handler.url.indexOf('*');\r\n            if (handler.url !== requestSettings.url && star === -1 || !new RegExp(handler.url.replace(/[-[\\]{}()+?.,\\\\^$|#\\s]/g, \"\\\\$&\").replace(/\\*/g, '.+')).test(requestSettings.url)) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Inspect the data submitted in the request (either POST body or GET query string)\r\n        if (handler.data && requestSettings.data) {\r\n            if (!isMockDataEqual(handler.data, requestSettings.data)) {\r\n                // They're not identical, do not mock this request\r\n                return null;\r\n            }\r\n        }\r\n        // Inspect the request type\r\n        if (handler && handler.type &&\r\n            handler.type.toLowerCase() != requestSettings.type.toLowerCase()) {\r\n            // The request type doesn't match (GET vs. POST)\r\n            return null;\r\n        }\r\n\r\n        return handler;\r\n    }\r\n\r\n    // Process the xhr objects send operation\r\n\r\n    function _xhrSend(mockHandler, requestSettings, origSettings) {\r\n\r\n        // This is a substitute for < 1.4 which lacks $.proxy\r\n        var process = (function(that) {\r\n            return function() {\r\n                return (function() {\r\n                    var onReady;\r\n\r\n                    // The request has returned\r\n                    this.status = mockHandler.status;\r\n                    this.statusText = mockHandler.statusText;\r\n                    this.readyState = 4;\r\n\r\n                    // We have an executable function, call it to give\r\n                    // the mock handler a chance to update it's data\r\n                    if ($.isFunction(mockHandler.response)) {\r\n                        mockHandler.response(origSettings);\r\n                    }\r\n                    // Copy over our mock to our xhr object before passing control back to\r\n                    // jQuery's onreadystatechange callback\r\n                    if (requestSettings.dataType == 'json' && (typeof mockHandler.responseText == 'object')) {\r\n                        this.responseText = JSON.stringify(mockHandler.responseText);\r\n                    } else if (requestSettings.dataType == 'xml') {\r\n                        if (typeof mockHandler.responseXML == 'string') {\r\n                            this.responseXML = parseXML(mockHandler.responseXML);\r\n                            //in jQuery 1.9.1+, responseXML is processed differently and relies on responseText\r\n                            this.responseText = mockHandler.responseXML;\r\n                        } else {\r\n                            this.responseXML = mockHandler.responseXML;\r\n                        }\r\n                    } else {\r\n                        this.responseText = mockHandler.responseText;\r\n                    }\r\n                    if (typeof mockHandler.status == 'number' || typeof mockHandler.status == 'string') {\r\n                        this.status = mockHandler.status;\r\n                    }\r\n                    if (typeof mockHandler.statusText === \"string\") {\r\n                        this.statusText = mockHandler.statusText;\r\n                    }\r\n                    // jQuery 2.0 renamed onreadystatechange to onload\r\n                    onReady = this.onreadystatechange || this.onload;\r\n\r\n                    // jQuery < 1.4 doesn't have onreadystate change for xhr\r\n                    if ($.isFunction(onReady)) {\r\n                        if (mockHandler.isTimeout) {\r\n                            this.status = -1;\r\n                        }\r\n                        onReady.call(this, mockHandler.isTimeout ? 'timeout' : undefined);\r\n                    } else if (mockHandler.isTimeout) {\r\n                        // Fix for 1.3.2 timeout to keep success from firing.\r\n                        this.status = -1;\r\n                    }\r\n                }).apply(that);\r\n            };\r\n        })(this);\r\n\r\n        if (mockHandler.proxy) {\r\n            // We're proxying this request and loading in an external file instead\r\n            _ajax({\r\n                global: false,\r\n                url: mockHandler.proxy,\r\n                type: mockHandler.proxyType,\r\n                data: mockHandler.data,\r\n                dataType: requestSettings.dataType === \"script\" ? \"text/plain\" : requestSettings.dataType,\r\n                complete: function(xhr) {\r\n                    mockHandler.responseXML = xhr.responseXML;\r\n                    mockHandler.responseText = xhr.responseText;\r\n                    // Don't override the handler status/statusText if it's specified by the config\r\n                    if (isDefaultSetting(mockHandler, 'status')) {\r\n                        mockHandler.status = xhr.status;\r\n                    }\r\n                    if (isDefaultSetting(mockHandler, 'statusText')) {\r\n                        mockHandler.statusText = xhr.statusText;\r\n                    }\r\n\r\n                    this.responseTimer = setTimeout(process, mockHandler.responseTime || 0);\r\n                }\r\n            });\r\n        } else {\r\n            // type == 'POST' || 'GET' || 'DELETE'\r\n            if (requestSettings.async === false) {\r\n                // TODO: Blocking delay\r\n                process();\r\n            } else {\r\n                this.responseTimer = setTimeout(process, mockHandler.responseTime || 50);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Construct a mocked XHR Object\r\n\r\n    function xhr(mockHandler, requestSettings, origSettings, origHandler) {\r\n        // Extend with our default mockjax settings\r\n        mockHandler = $.extend(true, {}, $.mockjaxSettings, mockHandler);\r\n\r\n        if (typeof mockHandler.headers === 'undefined') {\r\n            mockHandler.headers = {};\r\n        }\r\n        if (mockHandler.contentType) {\r\n            mockHandler.headers['content-type'] = mockHandler.contentType;\r\n        }\r\n\r\n        return {\r\n            status: mockHandler.status,\r\n            statusText: mockHandler.statusText,\r\n            readyState: 1,\r\n            open: function() {},\r\n            send: function() {\r\n                origHandler.fired = true;\r\n                _xhrSend.call(this, mockHandler, requestSettings, origSettings);\r\n            },\r\n            abort: function() {\r\n                clearTimeout(this.responseTimer);\r\n            },\r\n            setRequestHeader: function(header, value) {\r\n                mockHandler.headers[header] = value;\r\n            },\r\n            getResponseHeader: function(header) {\r\n                // 'Last-modified', 'Etag', 'content-type' are all checked by jQuery\r\n                if (mockHandler.headers && mockHandler.headers[header]) {\r\n                    // Return arbitrary headers\r\n                    return mockHandler.headers[header];\r\n                } else if (header.toLowerCase() == 'last-modified') {\r\n                    return mockHandler.lastModified || (new Date()).toString();\r\n                } else if (header.toLowerCase() == 'etag') {\r\n                    return mockHandler.etag || '';\r\n                } else if (header.toLowerCase() == 'content-type') {\r\n                    return mockHandler.contentType || 'text/plain';\r\n                }\r\n            },\r\n            getAllResponseHeaders: function() {\r\n                var headers = '';\r\n                $.each(mockHandler.headers, function(k, v) {\r\n                    headers += k + ': ' + v + \"\\n\";\r\n                });\r\n                return headers;\r\n            }\r\n        };\r\n    }\r\n\r\n    // Process a JSONP mock request.\r\n\r\n    function processJsonpMock(requestSettings, mockHandler, origSettings) {\r\n        // Handle JSONP Parameter Callbacks, we need to replicate some of the jQuery core here\r\n        // because there isn't an easy hook for the cross domain script tag of jsonp\r\n\r\n        processJsonpUrl(requestSettings);\r\n\r\n        requestSettings.dataType = \"json\";\r\n        if (requestSettings.data && CALLBACK_REGEX.test(requestSettings.data) || CALLBACK_REGEX.test(requestSettings.url)) {\r\n            createJsonpCallback(requestSettings, mockHandler, origSettings);\r\n\r\n            // We need to make sure\r\n            // that a JSONP style response is executed properly\r\n\r\n            var rurl = /^(\\w+:)?\\/\\/([^\\/?#]+)/,\r\n                parts = rurl.exec(requestSettings.url),\r\n                remote = parts && (parts[1] && parts[1] !== location.protocol || parts[2] !== location.host);\r\n\r\n            requestSettings.dataType = \"script\";\r\n            if (requestSettings.type.toUpperCase() === \"GET\" && remote) {\r\n                var newMockReturn = processJsonpRequest(requestSettings, mockHandler, origSettings);\r\n\r\n                // Check if we are supposed to return a Deferred back to the mock call, or just\r\n                // signal success\r\n                if (newMockReturn) {\r\n                    return newMockReturn;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Append the required callback parameter to the end of the request URL, for a JSONP request\r\n\r\n    function processJsonpUrl(requestSettings) {\r\n        if (requestSettings.type.toUpperCase() === \"GET\") {\r\n            if (!CALLBACK_REGEX.test(requestSettings.url)) {\r\n                requestSettings.url += (/\\?/.test(requestSettings.url) ? \"&\" : \"?\") +\r\n                    (requestSettings.jsonp || \"callback\") + \"=?\";\r\n            }\r\n        } else if (!requestSettings.data || !CALLBACK_REGEX.test(requestSettings.data)) {\r\n            requestSettings.data = (requestSettings.data ? requestSettings.data + \"&\" : \"\") + (requestSettings.jsonp || \"callback\") + \"=?\";\r\n        }\r\n    }\r\n\r\n    // Process a JSONP request by evaluating the mocked response text\r\n\r\n    function processJsonpRequest(requestSettings, mockHandler, origSettings) {\r\n        // Synthesize the mock request for adding a script tag\r\n        var callbackContext = origSettings && origSettings.context || requestSettings,\r\n            newMock = null;\r\n\r\n\r\n        // If the response handler on the moock is a function, call it\r\n        if (mockHandler.response && $.isFunction(mockHandler.response)) {\r\n            mockHandler.response(origSettings);\r\n        } else {\r\n\r\n            // Evaluate the responseText javascript in a global context\r\n            if (typeof mockHandler.responseText === 'object') {\r\n                $.globalEval('(' + JSON.stringify(mockHandler.responseText) + ')');\r\n            } else {\r\n                $.globalEval('(' + mockHandler.responseText + ')');\r\n            }\r\n        }\r\n\r\n        // Successful response\r\n        jsonpSuccess(requestSettings, callbackContext, mockHandler);\r\n        jsonpComplete(requestSettings, callbackContext, mockHandler);\r\n\r\n        // If we are running under jQuery 1.5+, return a deferred object\r\n        if ($.Deferred) {\r\n            newMock = new $.Deferred();\r\n            if (typeof mockHandler.responseText == \"object\") {\r\n                newMock.resolveWith(callbackContext, [mockHandler.responseText]);\r\n            } else {\r\n                newMock.resolveWith(callbackContext, [$.parseJSON(mockHandler.responseText)]);\r\n            }\r\n        }\r\n        return newMock;\r\n    }\r\n\r\n\r\n    // Create the required JSONP callback function for the request\r\n\r\n    function createJsonpCallback(requestSettings, mockHandler, origSettings) {\r\n        var callbackContext = origSettings && origSettings.context || requestSettings;\r\n        var jsonp = requestSettings.jsonpCallback || (\"jsonp\" + jsc++);\r\n\r\n        // Replace the =? sequence both in the query string and the data\r\n        if (requestSettings.data) {\r\n            requestSettings.data = (requestSettings.data + \"\").replace(CALLBACK_REGEX, \"=\" + jsonp + \"$1\");\r\n        }\r\n\r\n        requestSettings.url = requestSettings.url.replace(CALLBACK_REGEX, \"=\" + jsonp + \"$1\");\r\n\r\n\r\n        // Handle JSONP-style loading\r\n        window[jsonp] = window[jsonp] || function(tmp) {\r\n            data = tmp;\r\n            jsonpSuccess(requestSettings, callbackContext, mockHandler);\r\n            jsonpComplete(requestSettings, callbackContext, mockHandler);\r\n            // Garbage collect\r\n            window[jsonp] = undefined;\r\n\r\n            try {\r\n                delete window[jsonp];\r\n            } catch (e) {}\r\n\r\n            if (head) {\r\n                head.removeChild(script);\r\n            }\r\n        };\r\n    }\r\n\r\n    // The JSONP request was successful\r\n\r\n    function jsonpSuccess(requestSettings, callbackContext, mockHandler) {\r\n        // If a local callback was specified, fire it and pass it the data\r\n        if (requestSettings.success) {\r\n            requestSettings.success.call(callbackContext, mockHandler.responseText || \"\", status, {});\r\n        }\r\n\r\n        // Fire the global callback\r\n        if (requestSettings.global) {\r\n            trigger(requestSettings, \"ajaxSuccess\", [{},\r\n                requestSettings\r\n            ]);\r\n        }\r\n    }\r\n\r\n    // The JSONP request was completed\r\n\r\n    function jsonpComplete(requestSettings, callbackContext) {\r\n        // Process result\r\n        if (requestSettings.complete) {\r\n            requestSettings.complete.call(callbackContext, {}, status);\r\n        }\r\n\r\n        // The request was completed\r\n        if (requestSettings.global) {\r\n            trigger(\"ajaxComplete\", [{},\r\n                requestSettings\r\n            ]);\r\n        }\r\n\r\n        // Handle the global AJAX counter\r\n        if (requestSettings.global && !--$.active) {\r\n            $.event.trigger(\"ajaxStop\");\r\n        }\r\n    }\r\n\r\n\r\n    // The core $.ajax replacement.\r\n\r\n    function handleAjax(url, origSettings) {\r\n        var mockRequest, requestSettings, mockHandler;\r\n\r\n        // If url is an object, simulate pre-1.5 signature\r\n        if (typeof url === \"object\") {\r\n            origSettings = url;\r\n            url = undefined;\r\n        } else {\r\n            // work around to support 1.5 signature\r\n            origSettings.url = url;\r\n        }\r\n\r\n        // Extend the original settings for the request\r\n        requestSettings = $.extend(true, {}, $.ajaxSettings, origSettings);\r\n\r\n        // Iterate over our mock handlers (in registration order) until we find\r\n        // one that is willing to intercept the request\r\n        for (var k = 0; k < mockHandlers.length; k++) {\r\n            if (!mockHandlers[k]) {\r\n                continue;\r\n            }\r\n\r\n            mockHandler = getMockForRequest(mockHandlers[k], requestSettings);\r\n            if (!mockHandler) {\r\n                // No valid mock found for this request\r\n                continue;\r\n            }\r\n\r\n            mockedAjaxCalls.push(requestSettings);\r\n\r\n            // If logging is enabled, log the mock to the console\r\n            $.mockjaxSettings.log(mockHandler, requestSettings);\r\n\r\n\r\n            if (requestSettings.dataType === \"jsonp\") {\r\n                if ((mockRequest = processJsonpMock(requestSettings, mockHandler, origSettings))) {\r\n                    // This mock will handle the JSONP request\r\n                    return mockRequest;\r\n                }\r\n            }\r\n\r\n\r\n            // Removed to fix #54 - keep the mocking data object intact\r\n            //mockHandler.data = requestSettings.data;\r\n\r\n            mockHandler.cache = requestSettings.cache;\r\n            mockHandler.timeout = requestSettings.timeout;\r\n            mockHandler.global = requestSettings.global;\r\n\r\n            copyUrlParameters(mockHandler, origSettings);\r\n\r\n            (function(mockHandler, requestSettings, origSettings, origHandler) {\r\n                mockRequest = _ajax.call($, $.extend(true, {}, origSettings, {\r\n                    // Mock the XHR object\r\n                    xhr: function() {\r\n                        return xhr(mockHandler, requestSettings, origSettings, origHandler);\r\n                    }\r\n                }));\r\n            })(mockHandler, requestSettings, origSettings, mockHandlers[k]);\r\n\r\n            return mockRequest;\r\n        }\r\n\r\n        // We don't have a mock request\r\n        if ($.mockjaxSettings.throwUnmocked === true) {\r\n            throw ('AJAX not mocked: ' + origSettings.url);\r\n        } else { // trigger a normal request\r\n            return _ajax.apply($, [origSettings]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies URL parameter values if they were captured by a regular expression\r\n     * @param {Object} mockHandler\r\n     * @param {Object} origSettings\r\n     */\r\n\r\n    function copyUrlParameters(mockHandler, origSettings) {\r\n        //parameters aren't captured if the URL isn't a RegExp\r\n        if (!(mockHandler.url instanceof RegExp)) {\r\n            return;\r\n        }\r\n        //if no URL params were defined on the handler, don't attempt a capture\r\n        if (!mockHandler.hasOwnProperty('urlParams')) {\r\n            return;\r\n        }\r\n        var captures = mockHandler.url.exec(origSettings.url);\r\n        //the whole RegExp match is always the first value in the capture results\r\n        if (captures.length === 1) {\r\n            return;\r\n        }\r\n        captures.shift();\r\n        //use handler params as keys and capture resuts as values\r\n        var i = 0,\r\n            capturesLength = captures.length,\r\n            paramsLength = mockHandler.urlParams.length,\r\n            //in case the number of params specified is less than actual captures\r\n            maxIterations = Math.min(capturesLength, paramsLength),\r\n            paramValues = {};\r\n        for (i; i < maxIterations; i++) {\r\n            var key = mockHandler.urlParams[i];\r\n            paramValues[key] = captures[i];\r\n        }\r\n        origSettings.urlParams = paramValues;\r\n    }\r\n\r\n\r\n    // Public\r\n\r\n    $.extend({\r\n        ajax: handleAjax\r\n    });\r\n\r\n    $.mockjaxSettings = {\r\n        //url:        null,\r\n        //type:       'GET',\r\n        log: function(mockHandler, requestSettings) {\r\n            if (mockHandler.logging === false ||\r\n                (typeof mockHandler.logging === 'undefined' && $.mockjaxSettings.logging === false)) {\r\n                return;\r\n            }\r\n            if (window.console && console.log) {\r\n                var message = 'MOCK ' + requestSettings.type.toUpperCase() + ': ' + requestSettings.url;\r\n                var request = $.extend({}, requestSettings);\r\n\r\n                if (typeof console.log === 'function') {\r\n                    console.log(message, request);\r\n                } else {\r\n                    try {\r\n                        console.log(message + ' ' + JSON.stringify(request));\r\n                    } catch (e) {\r\n                        console.log(message);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        logging: true,\r\n        status: 200,\r\n        statusText: \"OK\",\r\n        responseTime: 500,\r\n        isTimeout: false,\r\n        throwUnmocked: false,\r\n        contentType: 'text/plain',\r\n        response: '',\r\n        responseText: '',\r\n        responseXML: '',\r\n        proxy: '',\r\n        proxyType: 'GET',\r\n\r\n        lastModified: null,\r\n        etag: '',\r\n        headers: {\r\n            etag: 'IJF@H#@923uf8023hFO@I#H#',\r\n            'content-type': 'text/plain'\r\n        }\r\n    };\r\n\r\n    $.mockjax = function(settings) {\r\n        var i = mockHandlers.length;\r\n        mockHandlers[i] = settings;\r\n        return i;\r\n    };\r\n    $.mockjaxClear = function(i) {\r\n        if (arguments.length == 1) {\r\n            mockHandlers[i] = null;\r\n        } else {\r\n            mockHandlers = [];\r\n        }\r\n        mockedAjaxCalls = [];\r\n    };\r\n    $.mockjax.handler = function(i) {\r\n        if (arguments.length == 1) {\r\n            return mockHandlers[i];\r\n        }\r\n    };\r\n    $.mockjax.mockedAjaxCalls = function() {\r\n        return mockedAjaxCalls;\r\n    };\r\n})(jQuery);"]}