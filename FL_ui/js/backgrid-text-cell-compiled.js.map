{"version":3,"sources":["backgrid-text-cell.js"],"names":[],"mappings":"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","file":"backgrid-text-cell-compiled.js","sourcesContent":["/*\r\n  backgrid-text-cell\r\n  http://github.com/wyuenho/backgrid\r\n\r\n  Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors\r\n  Licensed under the MIT @license.\r\n*/\r\n(function (root, factory) {\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define(['underscore', 'backgrid'], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = factory(require(\"underscore\"),\r\n                             require(\"backgrid\"));\r\n  } else {\r\n    // Browser globals\r\n    factory(root._, root.Backgrid);\r\n  }\r\n\r\n}(this, function (_, Backgrid)  {\r\n\r\n  /**\r\n     Renders a form with a text area and a save button in a modal dialog.\r\n\r\n     @class Backgrid.Extension.TextareaEditor\r\n     @extends Backgrid.CellEditor\r\n  */\r\n  var TextareaEditor = Backgrid.Extension.TextareaEditor = Backgrid.CellEditor.extend({\r\n\r\n    /** @property */\r\n    tagName: \"div\",\r\n\r\n    /** @property */\r\n    className: \"modal fade\",\r\n\r\n    /** @property {function(Object, ?Object=): string} template */\r\n    template: function (data) {\r\n      return '<div class=\"modal-dialog\"><div class=\"modal-content\"><form><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h3>' + data.column.get(\"label\")  + '</h3></div><div class=\"modal-body\"><textarea cols=\"' + data.cols + '\" rows=\"' + data.rows + '\">' + data.content + '</textarea></div><div class=\"modal-footer\"><input class=\"btn btn-primary\" type=\"submit\" value=\"Save\"/></div></form></div></div>';\r\n    },\r\n\r\n    /** @property */\r\n    cols: 80,\r\n\r\n    /** @property */\r\n    rows: 10,\r\n\r\n    /** @property */\r\n    events: {\r\n      \"keydown textarea\": \"clearError\",\r\n      \"submit\": \"saveOrCancel\",\r\n      \"hide.bs.modal\": \"saveOrCancel\",\r\n      \"hidden.bs.modal\": \"close\",\r\n      \"shown.bs.modal\": \"focus\"\r\n    },\r\n\r\n    /**\r\n       @property {Object} modalOptions The options passed to Bootstrap's modal\r\n       plugin.\r\n    */\r\n    modalOptions: {\r\n      backdrop: false\r\n    },\r\n\r\n    /**\r\n       Renders a modal form dialog with a textarea, submit button and a close button.\r\n    */\r\n    render: function () {\r\n      this.$el.html($(this.template({\r\n        column: this.column,\r\n        cols: this.cols,\r\n        rows: this.rows,\r\n        content: this.formatter.fromRaw(this.model.get(this.column.get(\"name\")))\r\n      })));\r\n\r\n      this.delegateEvents();\r\n\r\n      this.$el.modal(this.modalOptions);\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n       Event handler. Saves the text in the text area to the model when\r\n       submitting. When cancelling, if the text area is dirty, a confirmation\r\n       dialog will pop up. If the user clicks confirm, the text will be saved to\r\n       the model.\r\n\r\n       Triggers a Backbone `backgrid:error` event from the model along with the\r\n       model, column and the existing value as the parameters if the value\r\n       cannot be converted.\r\n\r\n       @param {Event} e\r\n    */\r\n    saveOrCancel: function (e) {\r\n      if (e && e.type == \"submit\") {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n\r\n      var model = this.model;\r\n      var column = this.column;\r\n      var val = this.$el.find(\"textarea\").val();\r\n      var newValue = this.formatter.toRaw(val);\r\n\r\n      if (_.isUndefined(newValue)) {\r\n        model.trigger(\"backgrid:error\", model, column, val);\r\n\r\n        if (e) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n      }\r\n      else if (!e || e.type == \"submit\" ||\r\n               (e.type == \"hide\" &&\r\n                newValue !== (this.model.get(this.column.get(\"name\")) || '').replace(/\\r/g, '') &&\r\n                confirm(\"Would you like to save your changes?\"))) {\r\n\r\n        model.set(column.get(\"name\"), newValue);\r\n        this.$el.modal(\"hide\");\r\n      }\r\n      else if (e.type != \"hide\") this.$el.modal(\"hide\");\r\n    },\r\n\r\n    /**\r\n       Clears the error class on the parent cell.\r\n     */\r\n    clearError: _.debounce(function () {\r\n      if (!_.isUndefined(this.formatter.toRaw(this.$el.find(\"textarea\").val()))) {\r\n        this.$el.parent().removeClass(\"error\");\r\n      }\r\n    }, 150),\r\n\r\n    /**\r\n       Triggers a `backgrid:edited` event along with the cell editor as the\r\n       parameter after the modal is hidden.\r\n\r\n       @param {Event} e\r\n    */\r\n    close: function (e) {\r\n      var model = this.model;\r\n      model.trigger(\"backgrid:edited\", model, this.column,\r\n                    new Backgrid.Command(e));\r\n    },\r\n\r\n    /**\r\n       Focuses the textarea when the modal is shown.\r\n    */\r\n    focus: function () {\r\n      this.$el.find(\"textarea\").focus();\r\n    }\r\n\r\n  });\r\n\r\n  /**\r\n     TextCell is a string cell type that renders a form with a text area in a\r\n     modal dialog instead of an input box editor. It is best suited for entering\r\n     a large body of text.\r\n\r\n     @class Backgrid.Extension.TextCell\r\n     @extends Backgrid.StringCell\r\n  */\r\n  Backgrid.Extension.TextCell = Backgrid.StringCell.extend({\r\n\r\n    /** @property */\r\n    className: \"text-cell\",\r\n\r\n    /** @property  */\r\n    editor: TextareaEditor\r\n\r\n  });\r\n\r\n}));\r\n"]}