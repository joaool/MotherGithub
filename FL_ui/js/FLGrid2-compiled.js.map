{"version":3,"sources":["FLGrid2.js"],"names":[],"mappings":"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","file":"FLGrid2-compiled.js","sourcesContent":["// jQuery(document).ready(function($){\r\n/**\r\n * data dictionary UI methods\r\n */\r\n    // FL = FL || {}; //gives undefined if FL is undefined\r\n    // FL = {};\r\n    // // a=\"A\";\r\n    // b=\"B\";\r\n    // var a = (typeof a === 'undefined') ? b : a;//if a is defined returns \"A\" otherwise returns the content of b\r\n    // alert(\"zzz=\"+a);//sets \"B\"\r\n\r\nFL = (typeof FL === 'undefined') ? {} : FL;\r\nFL[\"grid\"] = (function () {//name space FL.grid\r\n    var prepareAttributesArr = function (headerstring) {\r\n        // var attributesArr = [];\r\n        var colHeaderArr = headerstring.split(\",\");\r\n        var attributesArr = _.map(colHeaderArr, function (el) {\r\n            return {\r\n                name: el,\r\n                description: el + \"'description\",\r\n                label: el,\r\n                type: \"string\",\r\n                typeUI: \"textbox\",\r\n                enumerable: null,\r\n                key: false\r\n            };\r\n        });\r\n        return attributesArr;\r\n    };\r\n    var prepareOneEmptyRowArray = function (arrOfColumns) {\r\n        var emptyObj = {};\r\n        _.each(arrOfColumns, function (element) {\r\n            emptyObj[element.name] = \"\";\r\n        });\r\n        // return {name: el,description: el + \"'description\",label: el,type: \"string\", typeUI: \"textbox\", enumerable: null, key: false};\r\n        return [emptyObj];\r\n    };\r\n    var injectId = function (idTitle, arrOfColumns) {//injects a first id column into the array\r\n        arrOfColumns.splice(0, 0, {\r\n            label: idTitle,\r\n            name: \"id\",\r\n            description: \"order of lines\",\r\n            type: \"number\",\r\n            typeUI: \"numberbox\",\r\n            enumerable: null,\r\n            key: true\r\n        });\r\n    };\r\n    var extractUniqueFromArray = function (arr) { //http://stackoverflow.com/questions/18878571/underscore-js-find-the-most-frequently-occurring-value-in-an-array\r\n        //returns an object {empties:no_of empties,uniqueArr:uniqueArr} where:\r\n        //\t\tempties - number of empties ocurrences in arr\r\n        // \t\tuniqueArr - array with all unique occurences in arr including \"\" if it exists\r\n        arr = _.filter(arr, function (element) {\r\n            return typeof element != \"undefined\";\r\n        });//exclude undefined elements\r\n        var arrWrap = _.chain(arr).countBy().pairs(); //arrGroups gives us the number of different elements\r\n        var arrGroups = arrWrap._wrapped; //arrGroups gives us the number of different elements\r\n        //arrGroups has the format: [ [\"High\",40], [\"Medium\",47], [\"Premium\",5], ]\r\n        var emptyPair = _.find(arrGroups, function (pair) {\r\n            return pair[0] === \"\";\r\n        });\r\n        var empties = 0;\r\n        if (typeof emptyPair !== 'undefined') {//the case where there is no emptyPair =>undefined\r\n            empties = emptyPair[1];\r\n        }\r\n        var uniqueArr = _.map(arrGroups, function (element) {\r\n            return element[0];\r\n        });\r\n        return {empties: empties, uniqueArr: uniqueArr};\r\n    };\r\n    var dataRowAnalisys = function (rows, percent) {\r\n        // this methods decides the date type of every single column in rows by analysing a sample (rows).\r\n        // returns an array of attributes (one element per column) each element  with  format:\r\n        //\t\t{\"fieldType\":\"string\",\"fieldTypeUI\":\"textbox\",\"numberFormat\":null, enumerable:null,label:element};\r\n        //\r\n        // assumes that all rows have the same json pattern with same type in the whole array - assumes type of row = type of first row\r\n        // If column row type is \"string\" search for enumerables within that column\r\n        //    if [(total number of groups)/(number of rows) < percent ] assumes enumerable and identifies an array of enumerables\r\n        // returns\r\n        //   [ {name:{fieldType:\"string\", label:\"Name\"}}, ...., {service:{fieldType:\"enumerable\", label:\"Name\", enumerable:[*]}} ]\r\n        //      if fieldType=\"enumerable\" the property enumerable has an array with the enumerable options.\r\n        var numOfRows = rows.length;\r\n        var rowsSample = FL.common.makeFirstElementsSample(rows, 50); //reduces max size of array to 50\r\n        var numOfSampleRows = rowsSample.length;\r\n        var arrOfKeys = _.keys(rows[0]);//at least row[0] must exist\r\n        var arrOfTypes = [];\r\n        _.each(arrOfKeys, function (element, index) {\r\n            var obj = {};\r\n            var dataType = utils.typeOf((rows[0][element]));//one of  \"number\",\"string\",\"email\",\"boolean\",\"object\",\"array\",\"null\",\"undefined\",\"date\"\r\n            //note about numbers: if dataType is number no doubt about it. But...it could be a string representing a number\r\n            if (dataType == \"string\") {//possible datatypes:string, integer, number, boolean, date, or json\r\n                //analysis of the first 50 elements or all if length<50\r\n                var arrOfSampleRowValues = _.pluck(rowsSample, element);\r\n                //the base javascript is of type \"string\" but it can be:\r\n                //    a date in string format\r\n                //    an enumerable\r\n                var numberObj = FL.common.getArrNumberFormat(arrOfSampleRowValues);\r\n                if (numberObj.number) {//this string is a number in string format\r\n                    obj[element] = {\r\n                        \"fieldType\": \"number\",\r\n                        \"fieldTypeUI\": \"numberbox\",\r\n                        \"numberFormat\": numberObj.format,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                    //now the whole column must be converted from string to numeric\r\n                    // var arrOfColumnToConvert = _.pluck(rows,element);\r\n                    // FL.common.convertStringVectorToNumber(arrOfColumnToConvert,numberObj.format);\r\n                } else if (FL.common.is_dateArrInStringFormat(arrOfSampleRowValues)) {//values are in string format but are they a deguised date column ?\r\n                    obj[element] = {\r\n                        \"fieldType\": \"date\",\r\n                        \"fieldTypeUI\": \"datetextbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                } else if (FL.common.is_enumerableArr(arrOfSampleRowValues, percent)) {//It is an enumerable we will prepare the enumerable content\r\n                    var arrOfAllRowValues = _.pluck(rows, element);\r\n                    var fullUniqueObj = FL.common.extractUniqueFromArray(arrOfAllRowValues);\r\n                    obj[element] = {\r\n                        \"fieldType\": \"string\",\r\n                        \"fieldTypeUI\": \"combobox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: fullUniqueObj.uniqueArr,\r\n                        label: element\r\n                    };\r\n                } else {//not a string number, note a string date and  not an enumerable\r\n                    var uniqueObj = FL.common.extractUniqueFromArray(arrOfSampleRowValues);\r\n                    obj[element] = {\r\n                        \"fieldType\": \"string\",\r\n                        \"fieldTypeUI\": \"textbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                    if (is_ColumnOfSubtype(\"email\", uniqueObj.uniqueArr)) //checks that all sample objects are of subtype\r\n                        obj[element][\"fieldTypeUI\"] = \"email\";\r\n                    else if (is_ColumnOfSubtype(\"url\", uniqueObj.uniqueArr))\r\n                        obj[element][\"fieldTypeUI\"] = \"url\";\r\n                    else if (is_ColumnOfSubtype(\"phone\", uniqueObj.uniqueArr))\r\n                        obj[element][\"fieldTypeUI\"] = \"phone\";\r\n                }\r\n            } else {\r\n                if (dataType == \"number\") {//possible datatypes:string, integer, number, boolean, date, or json\r\n                    obj[element] = {\r\n                        \"fieldType\": \"number\",\r\n                        \"fieldTypeUI\": \"numberbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                } else if (dataType == \"email\") {\r\n                    obj[element] = {\r\n                        \"fieldType\": \"string\",\r\n                        \"fieldTypeUI\": \"emailbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                } else if (dataType == \"boolean\") {\r\n                    obj[element] = {\r\n                        \"fieldType\": \"boolean\",\r\n                        \"fieldTypeUI\": \"checkbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                } else if (dataType == \"date\") {\r\n                    obj[element] = {\r\n                        \"fieldType\": \"date\",\r\n                        \"fieldTypeUI\": \"datetextbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                } else {\r\n                    obj[element] = {\r\n                        \"fieldType\": \"string\",\r\n                        \"fieldTypeUI\": \"textbox\",\r\n                        \"numberFormat\": null,\r\n                        enumerable: null,\r\n                        label: element\r\n                    };\r\n                }\r\n            }\r\n            arrOfTypes.push(obj);\r\n        });\r\n        return arrOfTypes;\r\n    };\r\n    var translateToDDFormat = function (arrOfAttributes) {//translates arrOfAttributes format to dd format\r\n        // format of array [attributeName1:{fieldType\":\"string\",\"fieldTypeUI\":\"textbox\",\"numberFormat\":null, enumerable:null,label:element},attributeName2:{..}]\r\n        // returns  - array of objects in dd format [{name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:null,key:false},{}..];\r\n        var attributesArr = [];\r\n        var attrName = null;\r\n        _.each(arrOfAttributes, function (element, index) {\r\n            attrName = _.keys(element)[0];\r\n            attributesArr.push({\r\n                \"name\": attrName,\r\n                description: \"description of \" + attrName,\r\n                label: element[attrName].label,\r\n                type: element[attrName].fieldType,\r\n                typeUI: element[attrName].fieldTypeUI,\r\n                enumerable: element[attrName].enumerable,\r\n                key: false\r\n            });\r\n        });\r\n        return attributesArr;\r\n    };\r\n    // var createAttributesArrFromCsvAnalisys = function(rows){//creates the equivalent to a dd entry from a set of rows\r\n    var adjustRowsToAttributes = function (rows, arrOfAttributes) {//creates the equivalent to a dd entry from a set of rows\r\n        // rows - an array of objects format [{\"colum1Name\":col11,\"colum2Name\":col12,..},{\"colum1Name\":col21,\"colum2Name\":col22,..}...{}]\r\n        // arrOfAttributes has analysis format ->[attributeName1:{fieldType\":\"string\",\"fieldTypeUI\":\"textbox\",\"numberFormat\":null, enumerable:null,label:element},attributeName2{..}]\r\n        //arrOfAttributes - array of objects ex: [{name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:null,key:false},{}..];\r\n        // returns an array with the same format as dd dictionary array of attributes. Each element has the following format:\r\n        //      ex: {name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",enumerable:null,key:false});\r\n        // var attributesArr = [];\r\n        // var arrOfAttributes = dataRowAnalisys(rows, 0.5);//returns an array of attributes (one element per column)\r\n        var rrows = rows;\r\n        //\tformat of arrOfAttributes {\"fieldType\":\"string\",\"fieldTypeUI\":\"textbox\",\"numberFormat\":null, enumerable:null,label:element};\r\n        _.each(arrOfAttributes, function (element, index) {\r\n            var attrName = _.keys(element)[0];\r\n            var fieldType = element[attrName].fieldType;\r\n            var fieldTypeUI = element[attrName].fieldTypeUI;\r\n            var numberFormat = element[attrName].numberFormat;\r\n            var label = element[attrName].label;\r\n            var enumerable = null;\r\n            var columnVector = null;\r\n            var rows = rrows;\r\n            // if(fieldType==\"enumerable\"){\r\n            //     enumerable = element[attrName].enumerable;\r\n            // }\r\n            if (fieldType == \"string\" && fieldTypeUI == \"combobox\") {\r\n                enumerable = element[attrName].enumerable;\r\n            } else if (fieldType == \"number\") {\r\n                // columnVector = _.pluck(rows,attrName);\r\n                var numberVal = null;\r\n                // FL.common.convertStringVectorToNumber(columnVector,numberFormat);\r\n                _.each(rows, function (rowElement, index) {\r\n                    numberVal = rowElement[attrName];\r\n                    rowElement[attrName] = FL.common.localeStringToNumber(numberVal, numberFormat);\r\n                });\r\n                FL.common.printToConsole(\"createAttributesArrFromCsvAnalisys NUMERIC attrName=\" + attrName + \" is complete........\");\r\n                var z = 32;\r\n            } else if (fieldType == \"date\") {\r\n                //we will see\r\n                // columnVector = _.pluck(rows,attrName);\r\n                _.each(rows, function (rowElement, index) {\r\n                    if (typeof rowElement[attrName] != \"date\") {//if is a string containing a date must be converted\r\n                        rowElement[attrName] = new Date(rowElement[attrName]);//old content in string is converted to date\r\n                    }\r\n                });\r\n                FL.common.printToConsole(\"createAttributesArrFromCsvAnalisys DATE attrName=\" + attrName + \" is complete........\");\r\n            }\r\n        });\r\n    };\r\n    var is_ColumnOfSubtype = function (subtype, sampleArr) {//scans all elements of sampleArr and returns true if all non empty elements belongs to subtype\r\n        //example\r\n        //\t\tif( is_ColumnOfSubtype(\"email\",arrOfRowValues) )\r\n        //\t\tif( is_ColumnOfSubtype(\"url\",arrOfRowValues) )\r\n        //\t\tif( is_ColumnOfSubtype(\"phone\",arrOfRowValues) )\r\n        //  the subtype must be one of the existing subtypes in FL.utils.typeUIOf()\r\n        var is = false;\r\n        var len = sampleArr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            if (sampleArr[i].trim().length > 0) {\r\n                if (utils.typeUIOf(sampleArr[i]) == subtype) {\r\n                    is = true;\r\n                } else {\r\n                    is = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return is;\r\n    };\r\n    var editGrid = function (entityName) {\r\n        // FL.common.makeModalInfo(\"Edit \" + entityName + \" x To be implemented soon\");\r\n        $(\"#_editGrid\").empty();\r\n        $(\"#_modalDialogB\").empty();\r\n\r\n        var singular = entityName;\r\n        var description = FL.dd.getEntityBySingular(entityName).description;\r\n        var attributesArrNoId = csvStore.getAttributesArrNoId();//we retrieve all except name=\"id\"\r\n        var detailItems = utils.buildMasterDetailStructureFromAttributesArr(attributesArrNoId);\r\n        var masterDetailItems = {\r\n            master: {entityName: singular, entityDescription: description},\r\n            detailHeader: [\"#\", \"Attribute\", \"what is it\", \"Statement to validate\"],\r\n            detail: detailItems //format is array with {attribute:<attribute name>,description:<attr description>,statement:<phrase>,type:<type>}\r\n        };\r\n        var arrOfObj = FL.dd.arrOfUserTypesForDropdown();\r\n        var options = {\r\n            type: \"primary\",\r\n            icon: \"pencil\",\r\n            button1: \"Cancel\",\r\n            button2: \"Confirm Table Dictionary\",\r\n            detailDropdown: {\r\n                \"userType\": {\r\n                    arr: arrOfObj,//array of types\r\n                    onSelect: function (objSelected, line) {\r\n                        var selectedType = objSelected.text;\r\n                        //we need to get the current attribute name from the DOM because it could have been changed\r\n                        var oldAttribute = masterDetailItems.detail[line].attribute;\r\n                        var currentAttribute = $(\"#_dictEditEntityTemplate__f\" + (line + 1) + \"_attribute\").val();//\"_dictEditEntityTemplate__f4_userType_options\"\r\n                        // var title = \" Define possible values for \"+masterDetailItems.detail[line].attribute;\r\n                        var title = \" Define possible values for \" + currentAttribute;\r\n                        var enumArr = csvStore.getEnumerableFromAttribute(oldAttribute);\r\n                        var enumStr = \"\";\r\n                        if (enumArr)\r\n                            enumStr = enumArr.join(\",\");\r\n                        if (selectedType == \"combo list\") {\r\n                            var masterDetailListItems = {master: {list: enumStr}};\r\n                            var enumOptions = {\r\n                                type: \"primary\",\r\n                                icon: \"th-list\",\r\n                                button1: \"Cancel\",\r\n                                button2: \"Confirm select list\"\r\n                            };\r\n                            FL.common.editMasterDetail(\"A2\", title, \"_getComboList\", masterDetailListItems, enumOptions, function (result) {\r\n                                if (result) {\r\n                                    // alert(\"The list is ->\"+masterDetailListItems.master.list);\r\n                                    var listOfValuesStr = masterDetailListItems.master.list;\r\n                                    csvStore.setEnumerableForAttribute(oldAttribute, listOfValuesStr.split(\",\"));\r\n                                }\r\n                            });\r\n                        }\r\n                        if (selectedType == \"lookup\") {\r\n                            FL.dd.init_t();//to init the temporary subsystem\r\n                            FL.dd.t.entities.dumpToConsole();\r\n                            var currentECN = FL.dd.getCEntity(entityName);\r\n                            var currentFCN = FL.dd.t.entities[currentECN].getCName(currentAttribute);\r\n                            var lookupArr = FL.dd.t.entities[currentECN].fields[currentFCN].specialTypeDef;\r\n                            var lookupTypeStr = \"Invalid format\";\r\n                            if (lookupArr) {\r\n                                if (FL.common.typeOf(lookupArr) == \"array\") {\r\n                                    var lookupObj = lookupArr[0];\r\n                                    if (FL.common.typeOf(lookupObj) == \"object\") {\r\n                                        lookupTypeStr = lookupObj.eCN + \",\" + lookupObj.fCN;//loojupObj format is {eCN:<entity compressed name>, fCN:<field compressed name>}\r\n                                    }\r\n                                }\r\n                            }\r\n                            ;\r\n                        }\r\n                        ;\r\n                        var masterDetailListItems = {master: {special: lookupTypeStr}};\r\n                        var enumOptions = {\r\n                            type: \"primary\",\r\n                            icon: \"th-list\",\r\n                            button1: \"Cancel\",\r\n                            button2: \"Confirm lookup data\"\r\n                        };\r\n                        FL.common.editMasterDetail(\"A2\", title, \"_getLookupTableAndField\", masterDetailListItems, enumOptions, function (result) {\r\n                            if (result) {\r\n                                // alert(\"The list is ->\"+masterDetailListItems.master.list);\r\n                                var specialTypeDef = masterDetailListItems.master.special;\r\n                                //save into the data dictionary\r\n                                var specialDefTemporaryArr = specialTypeDef.split(\",\");\r\n                                var specialObj = {eCN: specialDefTemporaryArr[0], fCN: specialDefTemporaryArr[1]};\r\n                                var specialArr = [];\r\n                                specialArr.push(specialObj);\r\n                                FL.dd.t.entities[currentECN].fields[currentFCN].setField({specialTypeDef: specialArr});\r\n                                var z = 32;\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                    // alert(\"The selection was \"+selectedType);\r\n                }\r\n            }\r\n        };\r\n        FL.common.editMasterDetail(\"B\", \" Define Table Dictionary\", \"_dictEditEntityTemplate\", masterDetailItems, options, function (result) {\r\n            if (result) {\r\n                //We update name and description in csvStore.attributesArr and then use it to create dictionary fields.\r\n                var attributesArrNoId = csvStore.getAttributesArrNoId();//we retrieve all except name=\"id\"\r\n                //   ex: {name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",typeUI:\"textbox\",enumerable:null,key:false});\r\n                var changedAttributesArr = [];\r\n                var changedTypeArr = [];\r\n                var newAttributesArr = [{\r\n                    name: \"id\",\r\n                    description: \"order of lines\",\r\n                    label: \"id\",\r\n                    type: \"number\",\r\n                    typeUI: \"numberbox\",\r\n                    enumerable: null,\r\n                    key: true\r\n                }];\r\n                _.each(attributesArrNoId, function (element, index) {//to retrieve the lines content from the interface\r\n                    var elObj = {};\r\n                    elObj[\"oldName\"] = attributesArrNoId[index].name;\r\n                    elObj[\"name\"] = masterDetailItems.detail[index].attribute.trim();\r\n                    if (elObj[\"name\"] != attributesArrNoId[index].name)\r\n                        changedAttributesArr.push([attributesArrNoId[index].name, elObj[\"name\"]]);//oldName,newName\r\n                    elObj[\"description\"] = masterDetailItems.detail[index].description.trim();\r\n                    elObj[\"label\"] = masterDetailItems.detail[index].attribute.trim();\r\n                    var userType = masterDetailItems.detail[index].userType.trim();//the item collected in the form combo\r\n                    var userTypeObj = FL.dd.userTypes[userType];//returns type and typeUI corresponding to that userType\r\n                    elObj[\"type\"] = userTypeObj.type;\r\n                    if (elObj[\"type\"] != attributesArrNoId[index].type)\r\n                        changedTypeArr.push([attributesArrNoId[index].name, attributesArrNoId[index].type, elObj[\"type\"]]);//oldName,oldType,newType\r\n                    elObj[\"typeUI\"] = userTypeObj.typeUI;\r\n                    elObj[\"enumerable\"] = csvStore.getEnumerableFromAttribute(attributesArrNoId[index].name);\r\n                    elObj[\"key\"] = false;\r\n                    newAttributesArr.push(elObj);\r\n                }, this);\r\n                var singular = masterDetailItems.master.entityName.trim();//to retrieve the header content from the interface\r\n                var description = masterDetailItems.master.entityDescription.trim();//to retrieve the header content from the interface\r\n                //if( csvStore.is_dictionaryUpdateLoseInformation( changedTypeArr) ){\r\n                //\tFL.common.makeModalConfirm(\"You will lose some information. Do you want to continue ?\",\"No, cancel changes\",\"Yes Please\",function(result){\r\n                //\t\tif(result){\r\n                //\t\t\tupdateDictionaryAndTypesInServer(entityName,singular,description,newAttributesArr,changedAttributesArr,changedTypeArr);\r\n                //\t\t}else{\r\n                //\t\t\tFL.common.makeModalInfo(\"Nothing was saved. The original grid is going to be restored....\");\r\n                //\t\t\tFL.grid.displayDefaultGrid(entityName);//loads from server and display\r\n                //\t\t}\r\n                //\t});\r\n                //}else{\r\n                //\tupdateDictionaryAndTypesInServer(entityName,singular,description,newAttributesArr,changedAttributesArr,changedTypeArr);\r\n                //}\r\n                updateDictionaryAndTypesInServer(entityName, singular, description, newAttributesArr, changedAttributesArr, changedTypeArr);\r\n            } else {\r\n                FL.common.makeModalInfo(\"Nothing was saved.\");\r\n            }\r\n            ;\r\n        });//OK\r\n    };\r\n    var updateDictionaryAndTypesInServer = function (entityName, newSingularName, description, newAttributesArr, changedAttributesArr, changedTypeArr) {\r\n        //Update Dictionary and Entity data in server - silently uses csvStore.csvRows and local dictionary\r\n        //updateTypesInServer must synchronize: local dictionary, server dictionary, csvStore and entity on server\r\n        // if data dictionary update fails on server it rools back the local dictionary change\r\n        //    tests:force dictionary fail\r\n        // if data dictionary update succeds but entity update on server fails\r\n        var storedArr = csvStore.extractFromCsvStore();\r\n        if (FL.API.nicoTestDuplicateIds(storedArr)) {//only works if no duplicate _id exist in csvStore\r\n            alert(\"FLGrid2 updateDictionaryAndTypesInServer - csvStore.csvRows _id duplicate DETECTED !!!. Nothing was done\");\r\n            return;\r\n        }\r\n        // var z = msg.abc; //to force error\r\n        var localDictEntityBackup = FL.dd.getDictEntityBackup(entityName);\r\n        var spinner = FL.common.loaderAnimationON('spinnerDiv');\r\n        var updateDictionaryAllAttributesPromise = FL.API.updateDictionaryAllAttributes(entityName, newSingularName, description, newAttributesArr);\r\n        updateDictionaryAllAttributesPromise.done(function () {//this update local and server dictionary\r\n            if (changedTypeArr.length > 0) {//there is type change(s)\r\n                csvStore.transformStoreTo(newAttributesArr, changedAttributesArr, changedTypeArr);//does changes in csvStore\r\n                var updatePromise = FL.grid.updateCurrentCSVToServer(newSingularName);\r\n                updatePromise.done(function () {\r\n                    spinner.stop();\r\n                    FL.grid.displayDefaultGrid(newSingularName);//loads from server and display\r\n                });\r\n                updatePromise.fail(function (err) {\r\n                    spinner.stop();\r\n                    FL.dd.entities[newSingularName] = localDictEntityBackup;//rools back local dictionary update\r\n                    FL.dd.setSync(entityName, false); //warns that local dict is not in sync with server dictionary\r\n                    alert(\"FLGrid2 updateDictionaryAndTypesInServer updateCurrentCSVToServer Failure err=\" + err);//loads from server and displaywithout newsl\r\n                });\r\n            } else {\r\n                spinner.stop();\r\n                FL.grid.displayDefaultGrid(newSingularName);//loads from server and display\r\n            }\r\n        });\r\n        updateDictionaryAllAttributesPromise.fail(function (err) {\r\n            spinner.stop();\r\n            FL.dd.entities[newSingularName] = localDictEntityBackup;//rools back local dictionary update - TESTED OK\r\n            alert(\"FLGrid2 updateDictionaryAndTypesInServer updateDictionaryAllAttributes Failure err=\" + err);//loads from server and displaywithout newsl\r\n        });\r\n    };\r\n    var addImageToMandrillImageArr = function (name, srcContent) {//mandrillImagesArr is formed to FL.login.emailImagesArray\r\n        // var srcContent = imageFromJson.substring(23);//removes the beginning chars:\"data:image/jpeg;base64,\"\r\n        var imageArrElement = {name: name, type: \"image/jpg\", content: srcContent};\r\n        FL.login.emailImagesArray.push(imageArrElement);\r\n    };\r\n    var elementTemplateHTML = function (type, thiz) {\r\n        var elementId = type + \"DroppedItem\";\r\n        var rawElementTemplate = $(\"#\" + elementId).html();\r\n        var templateFunc = _.template(rawElementTemplate);\r\n        var elementTemplate = templateFunc({\r\n            bgColor: thiz.bgColor,\r\n            paddingLeft: thiz.marginL,\r\n            centralWidth: thiz.centralWidth,\r\n            paddingRight: thiz.marginR,\r\n            elNo: ''//window.templateCounter FOR TESTING\r\n        });\r\n        return elementTemplate;\r\n    };\r\n    var buildSocialDivHTML = function (item) {\r\n//<a href=\"https://www.facebook.com/Weadvice.living.web\"><img id=\"facebook\" title=\"Facebook\" src=\"http://framelink.co/app/images/social/Facebook.png\" alt=\"Facebook\" width=\"48\" height=\"48\"></a>\r\n        var socialTemplate = '<a href=\"<%= url %>\"><img id=\"<%= socialId %>\" title=\"<%= socialTitle %>\" src=\"<%= src %>\" alt=\"<%= socialTitle %>\" width=\"48\" height=\"48\"></a>';\r\n        var socialEl = $(\"<div></div>\");\r\n        var templateFunc = _.template(socialTemplate);\r\n        var strHTML = \"\";\r\n        if (item.linksData.facebook.enable) {\r\n            strHTML = templateFunc({\r\n                url: item.linksData.facebook.url,\r\n                socialId: \"facebook\",\r\n                socialTitle: item.linksData.facebook.text,\r\n                src: \"http://framelink.co/app/images/social/Facebook.png\",\r\n            });\r\n            socialEl.append(strHTML);\r\n        }\r\n        if (item.linksData.linkedIn.enable) {\r\n            strHTML = templateFunc({\r\n                url: item.linksData.linkedIn.url,\r\n                socialId: \"linkedIn\",\r\n                socialTitle: item.linksData.linkedIn.text,\r\n                src: \"http://framelink.co/app/images/social/Linkedin.png\",\r\n            });\r\n            socialEl.append(strHTML);\r\n        }\r\n        if (item.linksData.googlePlus.enable) {\r\n            strHTML = templateFunc({\r\n                url: item.linksData.googlePlus.url,\r\n                socialId: \"googlePlus\",\r\n                socialTitle: item.linksData.googlePlus.text,\r\n                src: \"http://framelink.co/app/images/social/Google-Plus.png\",\r\n            });\r\n            socialEl.append(strHTML);\r\n        }\r\n        if (item.linksData.youTube.enable) {\r\n            strHTML = templateFunc({\r\n                url: item.linksData.youTube.url,\r\n                socialId: \"youTube\",\r\n                socialTitle: item.linksData.youTube.text,\r\n                src: \"http://framelink.co/app/images/social/Youtube.png\",\r\n            });\r\n            socialEl.append(strHTML);\r\n        }\r\n        // if(item.linksData.twitter.enable){\r\n        // \tstrHTML = templateFunc({\r\n        // \t\turl:item.linksData.twitter.url,\r\n        // \t\tsocialId:\"twitter\",\r\n        // \t\tsocialTitle:item.linksData.twitter.text,\r\n        // \t\tsrc:\"http://framelink.co/app/images/social/Twitter.png\",\r\n        // \t});\r\n        // \tsocialEl.append(strHTML);\r\n        // }\r\n        if (item.linksData.mail.enable) {\r\n            strHTML = templateFunc({\r\n                url: item.linksData.mail.url,\r\n                socialId: \"mail\",\r\n                socialTitle: item.linksData.mail.text,\r\n                src: \"http://framelink.co/app/images/social/Email.png\",\r\n            });\r\n            socialEl.append(strHTML);\r\n        }\r\n        return socialEl;\r\n    };\r\n    var appendTemplate = function (jsonObject, parentElement, centralWidth, percent, marginL, marginR, bgColor) {\r\n        // jsonObject - array jsons corresponding to a parentElement (ex.header, body or footer)\r\n        // ex:[{\"title\":\"<p>Mastruncio1</p>\",\"style\":{\"fontColor\":\"#000\",\"fontFamily\":\"Arial\",....\"imagePadding\":\"10px\"},\"type\":\"title\"}]\r\n        this.centralWidth = centralWidth;\r\n        this.marginL = marginL;\r\n        this.marginR = marginR;\r\n        this.bgColor = bgColor;\r\n        var thiz = this;\r\n        var centralWidth = centralWidth;\r\n        $.each(jsonObject, function (i, item) {//item is array element i\r\n            // var element = temp.getElementToDrop(item.type);\r\n            var element = null;\r\n            var elementId = item.type + \"DroppedItem\";\r\n            if (item.type == \"SocialLinks\") {\r\n                var rawElementTemplate = elementTemplateHTML(item.type, thiz);\r\n                var element = $(rawElementTemplate);\r\n                var insideDiv = element.find(\"div\");//returns the only div in element\r\n                var elementSocial = buildSocialDivHTML(item);\r\n                insideDiv.empty();\r\n                insideDiv.append(elementSocial.html());//only the innercontent of elementSocial is appended...\r\n                $(parentElement).append(element);\r\n            } else if (item.type == \"title\") {\r\n                var rawElementTemplate = elementTemplateHTML(item.type, thiz);\r\n                var element = $(rawElementTemplate);\r\n                var insideDiv = element.find(\"div\");//returns the only div in element\r\n                insideDiv.prop('id', \"template\" + window.templateCounter);\r\n                insideDiv.css(item.style);\r\n                insideDiv.html(item.title);//PRODUCTION\r\n                // insideDiv.html(\"<p>text of \"+window.templateCounter+\"</p>\");//TO TEST PURPOSES\r\n                $(parentElement).append(element);\r\n            } else if (item.type == \"image\") {\r\n                var rawElementTemplate = elementTemplateHTML(item.type, thiz);\r\n                var element = $(rawElementTemplate);\r\n                var insideDiv = element.find(\"div\").first();//returns the first div in element\r\n                insideDiv.prop('id', \"imageTemplate\" + window.templateCounter);\r\n\r\n                // var elementImg = $('#'+\"template\"+ window.templateCounter+ ' img');//Id already assigned we search the sub element image\r\n                var elementImg = insideDiv.find('img');//Id already assigned we search the sub element image\r\n                // var elementAnchor = $('#'+\"template\"+ window.templateCounter+ ' a');//Id already assigned we search the sub element anchor\r\n                var elementAnchor = insideDiv.find('a');//Id already assigned we search the sub element anchor\r\n                if (item.link)\r\n                    $(elementAnchor).attr('href', item.link);\r\n\r\n\r\n                /*\r\n                 //------TEST CODE\r\n                 //http://jsfiddle.net/joaool/MCSyr/230/\r\n                 var style ={};\r\n                 if(window.templateCounter==0){\r\n                 $(elementImg).attr('src','http://placehold.it/140x100');//<img src='http://placehold.it/200x200'/>\r\n                 $(elementImg).attr(\"align\",\"right\");\r\n                 }else if(window.templateCounter<4){\r\n                 $(elementImg).attr('src','http://dummyimage.com/200x100&text=200 by 100');//<img src='http://placehold.it/200x200'/>\r\n                 }else if(window.templateCounter<6){\r\n                 $(elementImg).attr('src','http://dummyimage.com/400x100&text=400 with max380');//<img src='http://placehold.it/200x200'/>\r\n                 $(elementImg).attr(\"width\",\"380\");\r\n                 $(elementImg).attr(\"height\",\"auto\");\r\n                 }else if(window.templateCounter<8){\r\n                 $(elementImg).attr('src','http://dummyimage.com/500x100&text=500 with max380');//<img src='http://placehold.it/200x200'/>\r\n                 $(elementImg).attr(\"width\",\"380\");\r\n                 $(elementImg).attr(\"height\",\"auto\");\r\n                 }else if(window.templateCounter<10){\r\n                 $(elementImg).attr('src','http://dummyimage.com/500x100&text=500 with max468');//<img src='http://placehold.it/200x200'/>\r\n                 $(elementImg).attr(\"width\",\"468\");\r\n                 $(elementImg).attr(\"height\",\"auto\");\r\n                 $(elementImg).attr(\"align\",\"right\");\r\n                 // $(elementImg).css(style);\r\n                 }else if(window.templateCounter<12){\r\n                 $(elementImg).attr('src','http://dummyimage.com/700x100&text=700 with max468');//<img src='http://placehold.it/200x200'/>\r\n                 $(elementImg).attr(\"width\",\"468\");\r\n                 $(elementImg).attr(\"height\",\"auto\");\r\n                 // $(elementImg).attr(\"border\", \"1px solid #ff0000;\");\r\n                 $(elementImg).attr(\"align\",\"right\");\r\n                 $(elementImg).css(style);\r\n                 }else{\r\n                 $(elementImg).attr('src','http://placehold.it/350x150');//<img src='http://placehold.it/200x200'/>\r\n                 }\r\n                 $(parentElement).append(element);\r\n                 //------END OF TEST CODE\r\n                 */\r\n                //------- PRODUCTION CODE\r\n                addImageToMandrillImageArr(\"template\" + window.templateCounter, item.source.substring(23));//name,imageFromJson - removes the beginning chars:\"data:image/jpeg;base64,\"\r\n                $(elementImg).attr('src', 'cid:template' + window.templateCounter);\r\n                var style = {};\r\n                var w = FL.common.getBase64Width(item.source);//check if size is bigger than central zone to prevebt broken layout\r\n                if (w > thiz.centralWidth) {//reduce size keeping ratio: (convenient for outlook)  width=\"400px\" height=\"auto\"\r\n                    // item.style[\"width\"]= thiz.centralWidth + \"px\";\r\n                    $(elementImg).attr(\"width\", thiz.centralWidth);\r\n                    $(elementImg).attr(\"height\", \"auto\");\r\n                } else {\r\n                    $(elementImg).attr(\"width\", w);\r\n                    $(elementImg).attr(\"height\", \"auto\");\r\n                }\r\n                $(parentElement).append(element);\r\n                //------ END OF PRODUCTION CODE\r\n            }\r\n            window.templateCounter++;\r\n        });\r\n    };\r\n    var getHTMLContent = function (jsonTemplate) {\r\n        // alert(jsonTemplate);\r\n        var jsonObj = JSON.parse(jsonTemplate);\r\n        // we assume a total with of 1300 - the percentage will act upon 1300 =>max=90%*1300 = 1170\r\n        var percent = Math.floor(Math.min(jsonObj.pageStyles.pageWidth, 900) / 10);\r\n        // var marginL = jsonObj.pageStyles.headerPaddingLeft*percent/100;\r\n        // var marginR = jsonObj.pageStyles.headerPaddingRight*percent/100;\r\n        var marginL = Math.floor(1300 * (jsonObj.pageStyles.headerPaddingLeft / jsonObj.pageStyles.pageWidth) * percent / 100);\r\n        var marginR = Math.floor(1300 * (jsonObj.pageStyles.headerPaddingRight / jsonObj.pageStyles.pageWidth) * percent / 100);\r\n\r\n        // var centralWidthHeader = percent*1300/100 - marginL - marginR;\r\n        var centralWidthHeader = 1300 * ((jsonObj.pageStyles.pageWidth - jsonObj.pageStyles.headerPaddingLeft - jsonObj.pageStyles.headerPaddingRight) / jsonObj.pageStyles.pageWidth) * percent / 100;\r\n        var rawEmailTemplate = $(\"#emailTemplateHolder\").html();\r\n        var templateFunc = _.template(rawEmailTemplate);\r\n        var emailTemplate = templateFunc({\r\n            globalPercent: percent,\r\n            headerBgcolor: jsonObj.pageStyles.headerBgColor,\r\n            headerPaddingLeft: marginL,//jsonObj.pageStyles.headerPaddingLeft,\r\n            headerPaddingRight: marginR,//jsonObj.pageStyles.headerPaddingRight,\r\n            bodyBgcolor: jsonObj.pageStyles.bodyBgColor,\r\n            bodyPaddingLeft: marginL,//jsonObj.pageStyles.bodyPaddingLeft,\r\n            bodyPaddingRight: marginR,//jsonObj.pageStyles.bodyPaddingRight,\r\n            footerBgcolor: jsonObj.pageStyles.footerBgColor,\r\n            footerPaddingLeft: marginL,//jsonObj.pageStyles.footerPaddingLeft,\r\n            footerPaddingRight: marginR,//jsonObj.pageStyles.footerPaddingRight,\r\n            // totWidth:jsonObj.pageStyles.pageWidth,\r\n            centralWidth: centralWidthHeader,\r\n            lateralMargin: \"80\"\r\n        });\r\n        $(\"#templateHolder\").empty();\r\n        $(emailTemplate).appendTo('body');//place emailTemplate HTML in DOM\r\n\r\n        var content = $(\"#templatePreview\").html();\r\n        // var template = _.template($(\"#templatePreview\").html());\r\n        var header = $(\"#template_holder_header\");\r\n        var body = $(\"#template_holder_body\");\r\n        var footer = $(\"#template_holder_footer\");\r\n        header.empty();\r\n        body.empty();\r\n        footer.empty();\r\n        FL.login.emailImagesArray = [];\r\n        // mountTemplate(jsonObj,header,body,footer);\r\n        window.templateCounter = 0;\r\n        appendTemplate(jsonObj.templateItems.header, header, centralWidthHeader, percent, marginL, marginR, jsonObj.pageStyles.headerBgColor);//fills header template with header content extracted from jsonObj\r\n        appendTemplate(jsonObj.templateItems.body, body, centralWidthHeader, percent, marginL, marginR, jsonObj.pageStyles.bodyBgColor);//fills body template with body content extracted from jsonObj\r\n        appendTemplate(jsonObj.templateItems.footer, footer, centralWidthHeader, percent, marginL, marginR, jsonObj.pageStyles.footerBgColor);//fills footer template with footer content extracted from jsonObj\r\n\r\n        var emailJQ = $(emailTemplate);\r\n        emailJQ.find(\"#template_holder_header\").append(header.contents());\r\n        emailJQ.find(\"#template_holder_body\").append(body.contents());\r\n        emailJQ.find(\"#template_holder_footer\").append(footer.contents());\r\n        // return $(\"#templateHolder\").html();\r\n        var z = $(emailJQ).html();\r\n        return $(emailJQ).html();\r\n    };\r\n    var convertsToArrOfObj = function (templateOptionsArr) {\r\n        //receives [{\"_id\": \"t 115\",jsonTemplate:\"dfdfdg\"},{\"_id\": \"t 116\",jsonTemplate:\"dfgd\"}] and returns [{value:1,text: \"t 115\",template:\"dfdfdg\"},{value:2,text: \"t 116\",template:\"dfgd\"}]\r\n        return _.map(templateOptionsArr, function (el, index) {\r\n            return {\"value\": index + 1, \"text\": el._id, \"template\": el.jsonTemplate};\r\n        });\r\n    };\r\n    var extractSenderObjFromModal = function () { //extracts senderObj from _sendNewsletterTemplate\r\n        var name = $(\"#_sendNewsletter_name\").val();\r\n        var email = $(\"#_sendNewsletter_email\").val();\r\n        var subject = $(\"#_sendNewsletter_subject\").val();\r\n        var testEmail = $(\"#_sendNewsletter_testEmail\").val();\r\n        var senderObj = {from_name: name, from_email: email, subject: subject, testEmail: testEmail};\r\n        return senderObj;\r\n    };\r\n    var newsletterEmissionUI = function (templateOptionsArr, entityName, grid, emailAttributeName) {//grid is the backgrid object necessary for select\r\n        var def = $.Deferred();\r\n        FL.login.emailTemplateName = null;//cleans any previous template name\r\n        FL.login.emailContentTemplate = null;\r\n        FL.login.emailImagesArray = [];\r\n        var arrOfObj = convertsToArrOfObj(templateOptionsArr); //converts templateOptionsArr to arrOfObjects\r\n        //ex:arrOfObj=[{value:1,text: \"t 115\",template:\"dfdfdg\"},{value:2,text: \"t 116\",template:\"dfgd\"}]\r\n\r\n        var pos = FL.login.token.userName.indexOf(\"@\");\r\n        var shortUserName = FL.login.token.userName.substring(0, pos);\r\n        var masterDetailItems = {\r\n            master: {\r\n                toEmail: shortUserName,\r\n                email: FL.login.token.userName,\r\n                subject: \"\",\r\n                testEmail: FL.login.token.userName\r\n            },\r\n            detail: {} //no detail\r\n        };\r\n        var options = {\r\n            type: \"primary\",\r\n            icon: \"send\",\r\n            button1: \"Cancel\",\r\n            button2: \"Send Newsletter\",\r\n            dropdown: {\r\n                \"_sendNewsletter_template\": {\r\n                    arr: arrOfObj,//titles,\r\n                    default: \"No template\",\r\n                    onSelect: function (objSelected) {// FL.common.printToConsole(\"Template choice was \"+objSelected.text + \" cId=\" + objSelected.cId);\r\n                        FL.login.emailTemplateName = objSelected.text;\r\n                        var htmlTemplate = getHTMLContent(objSelected.template);\r\n                        FL.login.emailContentTemplate = htmlTemplate;\r\n                        // alert(\"Template choice was \"+objSelected.text);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        FL.common.editMasterDetail(\"B\", \" Send email/Newsletter\", \"_sendNewsletterTemplate\", masterDetailItems, options, function (result) {\r\n            if (result) {//user choosed button2 ==>Send Newsletter button\r\n                if (FL.login.emailTemplateName !== null) {\r\n                    // var toArr = csvStore.extractEmailArray();//to arr becomes: [{\"email\":\"e1@live.com\"},{\"email\":\"email2@gmail.com\"}..]\r\n                    var toArr = getSelectedEmailArray(grid, emailAttributeName);//to arr becomes: [{\"email\":\"e1@live.com\"},{\"email\":\"email2@gmail.com\"}..]\r\n                    if (toArr.length == 0) {\r\n                        FL.common.makeModalInfo(\"No email to send. To send one or more emails, click the left column checkbox.\");\r\n                    } else {\r\n                        var senderObj = extractSenderObjFromModal();//var senderObj = {from_name:name,from_email:email,subject:subject,testEmail:testEmail};\r\n                        var mailHTML = FL.login.emailContentTemplate;// we also have FL.login.emailTemplateName\r\n                        // alert(\"FLmenulinks2 newsletterEmissionUI Ready to send after checking duplicates.....template=\" + mailHTML);\r\n                        checkDuplicateEmission(entityName, FL.login.emailTemplateName, toArr, senderObj);\r\n                    }\r\n                } else {\r\n                    FL.common.makeModalInfo(\"Canceled !!! No template selected.\");\r\n                }\r\n            } else {\r\n                FL.common.makeModalInfo(\"Canceled !!! you can always send these emails later...\");\r\n            }\r\n            return def.resolve();\r\n        });\r\n        return def.promise();\r\n    };\r\n    var getSelectedEmailArray = function (grid, emailAttributeName) {//TEM DE RECEBER A GRID !!!!\r\n        var emailsArr = [];\r\n        var selectedModels = grid.getSelectedModels();\r\n        if (selectedModels.length > 0) {\r\n            // alert(\"FLGrid2 selectedModels=\"+selectedModels);\r\n            _.each(selectedModels, function (element, index) {\r\n                emailsArr.push(element.attributes[emailAttributeName]);\r\n            });\r\n        }\r\n        return emailsArr;\r\n    };\r\n    var prepareNewsletterEmission = function (entityName, grid, emailAttributeName) {\r\n        var getTemplatesPromise = FL.API.loadTableId(\"_templates\", \"jsonTemplate\");//(\"_templates\",\"jsonTemplate\");\r\n        var entityName = entityName;\r\n        getTemplatesPromise.done(function (data) {\r\n            FL.common.printToConsole(\">>>>>FLGrid2.js prepareNewsletterEmission  SUCCESS <<<<<\");\r\n            if (data.length === 0) {\r\n                FL.common.makeModalInfo('No templates available. You must have at least one template saved.');\r\n            } else {\r\n                // aGrid2nulinks2.js prepareNewsletterEmission =>\\n\" + JSON.stringify(data));//data array of objects\r\n                var emissionPromise = newsletterEmissionUI(data, entityName, grid, emailAttributeName);\r\n                emissionPromise.done(function (data) {\r\n                    FL.common.printToConsole(\"FLmenulinks2 prepareNewsletterEmission emission done !\");\r\n                    return;// def.resolve(data);\r\n                });\r\n                emissionPromise.fail(function () {\r\n                    alert(\"FLmenulinks2 prepareNewsletterEmission ->ERROR !!!\");\r\n                    return;\r\n                });\r\n\r\n            }\r\n        });\r\n        getTemplatesPromise.fail(function (err) {\r\n            FL.common.printToConsole(\">>>>>FLGrid2.js prepareNewsletterEmission  FAILURE <<<<<\" + err);\r\n            return;\r\n        });\r\n    };\r\n    var getMailchimpHTML = function (cId) {\r\n        var def = $.Deferred();\r\n        var arr = null;\r\n        var fl = FL.fl;\r\n        if (fl) {\r\n            var mc = new fl.mailChimp();\r\n            mc.campaignContent({cid: cId}, function (err, data) {\r\n                if (!err) {\r\n                    FL.common.printToConsole(\"campaignlist returns no error data=\" + JSON.stringify(data.html));\r\n                    def.resolve(data.html);\r\n                } else {\r\n                    return def.reject(\"FLmenulink2.js getMailchimpHTML - ERROR:\" + err);\r\n                }\r\n            });\r\n        } else {\r\n            return def.reject(\"FLmenulink2.js getMailchimpHTML ->ERROR: token is empty\");\r\n        }\r\n        return def.promise();\r\n    };\r\n    var getMailchimpTemplates = function () {\r\n        var def = $.Deferred();\r\n        var arr = null;\r\n        var fl = FL.fl;\r\n        if (fl) {\r\n            var mc = new fl.mailChimp();\r\n            mc.campaignList({data: 1}, function (err, data) {\r\n                // FL.common.printToConsole(\"campaignlist returns no error data=\"+JSON.stringify(data.data));\r\n                if (!err) {\r\n                    var arrOfObj = [];\r\n                    var item = null;\r\n                    _.each(data.data, function (element, index) {\r\n                        item = {value: index, text: element.title, cId: element.id};\r\n                        arrOfObj.push(item);\r\n                    });\r\n                    // arrCid = _.pluck(data.data,\"id\");\r\n                    // arrTitles = _.pluck(data.data,\"title\");\r\n                    def.resolve(arrOfObj);\r\n                    // oneCampaign=data.data[data.data.length-1];\r\n                    // FL.common.printToConsole(\"requesting content for cid: \" + oneCampaign.id);\r\n                } else {\r\n                    return def.reject(\"FLmenulink2.js getTemplates -ERROR:\" + err);\r\n                }\r\n            });\r\n        } else {\r\n            return def.reject(\"FLmenulink2.js getTemplates ->ERROR: token is empty\");\r\n        }\r\n        return def.promise();\r\n    };\r\n    var prepareNewsletterMCEmission = function (entityName) {\r\n        //collects all data to send a newsletter to the current grid. Including the template to use.\r\n        FL.login.emailTemplateName = null;//cleans any previous template name\r\n        var pos = FL.login.token.userName.indexOf(\"@\");\r\n        var shortUserName = FL.login.token.userName.substring(0, pos);\r\n        var masterDetailItems = {\r\n            master: {\r\n                toEmail: shortUserName,\r\n                email: FL.login.token.userName,\r\n                subject: \"\",\r\n                testEmail: FL.login.token.userName\r\n            },\r\n            detail: {} //no detail\r\n        };\r\n        // prepares FL.common.editMasterDetail options (including the templates dropdown)\r\n        FL.login.emailContentTemplate = null;\r\n        var getTemplatesPromise = getMailchimpTemplates();\r\n        getTemplatesPromise.done(function (arrOfObj) {\r\n            // alert(\"getTemplatesPromise done getTemplates-->\"+_.pluck(arrOfObj,\"text\"));\r\n            var options = {\r\n                type: \"primary\",\r\n                icon: \"send\",\r\n                button1: \"Cancel\",\r\n                button2: \"Send MC Newsletter\",\r\n                dropdown: {\r\n                    \"_sendNewsletter_template\": {\r\n                        arr: arrOfObj,//titles,\r\n                        default: \"No template\",\r\n                        onSelect: function (objSelected) {// FL.common.printToConsole(\"Template choice was \"+objSelected.text + \" cId=\" + objSelected.cId);\r\n                            //now we will get the html for the selected cId saving it in FL.login.emailContentTemplate for future consummation\r\n                            var getMailchimpHTMLPromise = getMailchimpHTML(objSelected.cId);\r\n                            getMailchimpHTMLPromise.done(function (data) {\r\n                                // alert(\"getMailchimpHTMLPromise OK =>\"+JSON.stringify(data));\r\n                                FL.login.emailContentTemplate = data;\r\n                                FL.login.emailTemplateName = objSelected.text;\r\n                            });\r\n                            getMailchimpHTMLPromise.fail(function (err) {\r\n                                FL.common.printToConsole(\">>>>>FLGrid2.js prepareNewsletterMCEmission onSelect inside dropdown FAILURE <<<<<\" + err);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            FL.common.editMasterDetail(\"B\", \" Send MC email/Newsletter\", \"_sendNewsletterTemplate\", masterDetailItems, options, function (result) {\r\n                if (result) {//user choosed button2 ==>Send Newsletter button\r\n                    // FL.links.testEmail();\r\n                    var senderObj = extractSenderObjFromModal();//var senderObj = {from_name:name,from_email:email,subject:subject,testEmail:testEmail};\r\n                    var toArr = csvStore.extractEmailArray();//to arr becomes: [{\"email\":\"e1@live.com\"},{\"email\":\"email2@gmail.com\"}..]\r\n                    var mailHTML = FL.login.emailContentTemplate;\r\n                    // alert(\"before calling checkDuplicate ->\"+FL.login.emailTemplateName);\r\n                    if (FL.login.emailTemplateName !== null)\r\n                        checkDuplicateEmission(entityName, FL.login.emailTemplateName, toArr, senderObj);//CURRENTLY var IN FLmenulinks2.js\r\n                    else\r\n                        FL.common.makeModalInfo(\"Canceled !!! No template selected.\");\r\n                } else {\r\n                    // alert(\"newsletter canceled\");\r\n                    FL.common.makeModalInfo(\"Canceled !!! you can always send these emails later...\");\r\n                }\r\n            });\r\n            return;\r\n        });\r\n        getTemplatesPromise.fail(function (err) {\r\n            FL.common.printToConsole(\">>>>>FLGrid2.js prepareNewsletterMCEmission  FAILURE <<<<<\" + err);\r\n        });\r\n    };\r\n    var checkDuplicateEmission = function (entityName, NName, toSend, senderObj) {\r\n        // Assumes that NNAme is not null\r\n        // This method manages the users dialogs for the following cases:\r\n        //\t\tFirst time emission - the newsletter was not sent before ->sends  to missingEmails = the whole list (recipientsArr)\r\n        //\t\tRemission to all recipients - The same newsletter was sent previously - DANGEROUS !!!!\r\n        //         missing are null in this case ->\r\n        //\t\tEmission to new recipients that were introduced in the base table, after the last emission - sends to the missingEmails\t\t\tvar promise = FL.API.mailRecipientsOfTemplate(entityName,NName);\r\n        var promise = FL.API.mailRecipientsOfTemplate(entityName, NName);\r\n        promise.done(function (sent) {\r\n            // var toSend =  _.pluck(recipientsArr, \"email\");\r\n            FL.common.printToConsole(\"==========================================\");\r\n            FL.common.printToConsole(\"toSend->\" + JSON.stringify(toSend));\r\n            var missingEmails = _.difference(toSend, sent); //if sent = null =>missing = toSend\r\n\r\n            // missingEmails = [];//TEST CASE 2 - REEMISSION\r\n            // missingEmails.splice(0,2);//TEST CASE 3 - NEW ADDITIONS - remove position 0 and 1\r\n\r\n            FL.common.printToConsole(\"Emails to sent->\" + JSON.stringify(missingEmails));\r\n            // alert(\"missingEmails->\"+JSON.stringify(missingEmails));\r\n            var confirmQuestion = null;\r\n            var button2 = null;\r\n            if (missingEmails.length == toSend.length) {\r\n                confirmQuestion = \"Do you confirm the emission of \" + toSend.length + \" emails, using template '\" + NName + \"' ?\";\r\n                button2 = \"OK execute first emission\";\r\n            } else {\r\n                var missingHTML = \"\";\r\n                _.each(missingEmails, function (element) {\r\n                    missingHTML += \"<li>\" + element + \"</li>\";\r\n                });\r\n                confirmQuestion = NName + \" was sent previously, but \" + missingEmails.length + \" new recipient(s) were added to the send list.<br>Do you want to send only to the new recipient(s) ?<br>\" + missingHTML;\r\n                button2 = \"OK send to \" + missingEmails.length + \" new email(s)\";\r\n                if (missingEmails.length == 0) {\r\n                    confirmQuestion = \"This emission of \" + NName + \" was done previously to the same recipients !!! Do you really want to repeat it ?\";\r\n                    button2 = \"OK resend these emails\";\r\n                }\r\n            }\r\n            FL.common.makeModalConfirm(confirmQuestion, \"No, cancel the emission\", button2, function (result) {\r\n                if (result) {\r\n                    var mailHTML = FL.login.emailContentTemplate;\r\n                    var imagesArr = FL.login.emailImagesArray;\r\n                    // mailHTML = null; //to TEST ONLY\r\n                    var msg = \"Newsletter \" + FL.login.emailTemplateName + \" was not sent !!!. No content to send.\";\r\n                    if (mailHTML !== null) {\r\n                        if (button2 == \"OK resend these emails\") {\r\n                            missingEmails = toSend; //missingEmails now refers to toSend\r\n                            // alert(\"Resend the emission ->\"+JSON.stringify(missingEmails));\r\n                        }\r\n                        // var sentCount = FL.links.sendEmail(entityName,mailHTML,imagesArr,missingEmails,senderObj,FL.login.emailTemplateName);\r\n                        var eCN = FL.dd.getCEntity(FL.dd.histoMailPeer(entityName));\r\n                        var fCN = FL.dd.getFieldCompressedName(FL.dd.histoMailPeer(entityName), \"msg\");\r\n                        var metadataObj = {\r\n                            newsletterName: FL.login.emailTemplateName,\r\n                            dbName: FL.login.token.dbName,\r\n                            eCN: eCN,\r\n                            fCN: fCN\r\n                        }\r\n                        // var sentCount = FL.emailServices.sendEmail(entityName,mailHTML,imagesArr,missingEmails,senderObj,metadataObj);\r\n                        var sentCount = FL.emailServices.sendEmail(mailHTML, imagesArr, missingEmails, senderObj, metadataObj);\r\n                        // var sentCount = missingEmails.length;\r\n                        msg = \"Newsletter \" + FL.login.emailTemplateName + \" sent  to \" + sentCount + \" recipients !!!<br> - total rows checked = \" + toSend.length;\r\n                    }\r\n                    FL.common.makeModalInfo(msg);\r\n                } else {\r\n                    FL.common.makeModalInfo(\"Canceled !!! you can always send these emails later...\");\r\n                }\r\n            });\r\n        });\r\n        promise.fail(function () {\r\n            alert(\"checkDuplicateEmission ->ERROR !!!\");\r\n        });\r\n    };\r\n    var getLookupInGrid = function (oLayout) {//\r\n        var lookupObj = null\r\n        FL.dd.init_t();//to init the temporary subsystem\r\n        _.each(oLayout.format, function (element) {//each element of oLayout.format array is like {fCN:\"50\",\"1st Column\",width:20,nestingArr:[]}\r\n            var field = FL.dd.t.entities[oLayout.baseTable].fields[element.fCN];\r\n            if (field.typeUI == \"lookupbox\") {\r\n                var lookupArr = field.specialTypeDef;//{eCN:<entity compressed name>, fCN:<field compressed name>}\r\n                if (FL.common.typeOf(lookupArr) == \"array\") {\r\n                    lookupObj = lookupArr[0];//{eCN:<entity compressed name>, fCN:<field compressed name>}\r\n                }\r\n            }\r\n        });\r\n        return lookupObj;\r\n    };\r\n    var mountGridFromColumnsArr = function (columnsArr, eCN) {//\r\n        // alert(\"mountGridFromColumnsArr ->\" + JSON.stringify(columnsArr));\r\n        // return;\r\n        var entityName = FL.dd.getEntityByCName(eCN);\r\n        FL.common.printToConsole(\"New &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& entity=\" + entityName);\r\n        FL.common.printToConsole(\"show columnsArr=\" + JSON.stringify(columnsArr));\r\n        // FL.common.spin(false);\r\n        // spinner.stop();\r\n        FL.common.clearSpaceBelowMenus();\r\n        $(\"#addGrid\").show();\r\n        $(\"#addGrid\").html(\" Add Row\");\r\n        $('#_editGrid').off('click');\r\n        $(\"#_editGrid\").click(function () {\r\n            editGrid(entityName);\r\n        });\r\n        $(\"#_editGrid\").show();\r\n        // var eCN = FL.dd.getCEntity(entityName);//to remove later when we change entityName by eCN\r\n        var emailAttributeName = FL.dd.firstEmailAttribute(eCN);\r\n        if (emailAttributeName) {\r\n            $('#_newsletter').off('click');\r\n            $(\"#_newsletter\").click(function () {\r\n                var templatePromise = FL.API.createTemplates_ifNotExisting();\r\n                templatePromise.done(function () {\r\n                    // alert(\"FLGrid2 l1143 grid = \"+grid);\r\n                    prepareNewsletterEmission(entityName, grid, emailAttributeName);\r\n                    return;\r\n                });\r\n                templatePromise.fail(function (err) {\r\n                    alert(\"FLmenulinks2.js set3ButtonsAndGrid ->FAILURE with createTemplates_ifNotExisting err=\" + err);\r\n                    return;\r\n                });\r\n            });\r\n            $('#_newsletter').show();\r\n            $('#_newsletterMC').off('click');\r\n            $(\"#_newsletterMC\").click(function () {\r\n                prepareNewsletterMCEmission(entityName);\r\n            });\r\n            $('#_newsletterMC').show();\r\n            $(\"#_newsletterMC\").html(\" MC\");\r\n        }\r\n        var grid = utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid -\r\n        FL.API.serverCallBlocked = false;\r\n    };\r\n    var internalTest = function (x) {//\r\n        alert(\"grid internalTest() -->\" + x);\r\n    };\r\n    return {\r\n        // getPageNo: function(pagName){ //to be used by savePage and restorePage\r\n        // \tvar pageNoObj = {\"home\":1,\"about\":2};\r\n        // \treturn  pageNoObj[pagName];\r\n        // },\r\n        csvFile: null,\r\n        csvFileDelimiter: null,\r\n        csvEncoding: null,\r\n        createGrid: function () {//call with menu key \"uri\": \"javascript:FL.grid.createGrid()\"\r\n            var masterDetailItems = {\r\n                master: {entityName: \"sample\", headerString: \"\"},\r\n                detail: {} //format is array with {attribute:<attribute name>,description:<attr description>,statement;<phrase>}\r\n            };\r\n            var options = {\r\n                type: \"primary\",\r\n                icon: \"th\",\r\n                button1: \"Cancel\",\r\n                button2: \"Create Grid\"\r\n            };\r\n            FL.common.editMasterDetail(\"B\", \" Create Grid\", \"_createGridTemplate\", masterDetailItems, options, function (result) {\r\n                if (result) {//user choosed create\r\n                    // FL.links.testEmail();\r\n                    var entityName = $(\"#_createGrid_entityName\").val();\r\n                    var headerString = $(\"#_createGrid_header\").val();\r\n                    // alert(\"Title:\"+entityName+\"-->\"+headerString);\r\n                    if (entityName === \"\" || headerString === \"\")\r\n                        FL.common.makeModalInfo(\"Empty sample or headerString => nothing to do\");\r\n                    else {\r\n                        var arrOfColumns = prepareAttributesArr(headerString);\r\n                        injectId(\"id\", arrOfColumns); //now the first column is an \"id\" column\r\n                        if (FL.dd.createEntityAndFields(entityName, \"description of \" + entityName, arrOfColumns)) {\r\n                            var columnsArr = utils.backGridColumnsFromArray(arrOfColumns);//extracts attributes from dictionary and prepares columns object for backgrid\r\n                            csvStore.setAttributesArr(arrOfColumns);//saves arrOfColumns on csvStore -  [{label:\"xx\",name:fieldName,description:xDescription,type:xtype,enumerable:xEnumerable},{col2}...{}]\r\n                            var emptyRowArr = prepareOneEmptyRowArray(arrOfColumns);\r\n                            FL.grid.csvToStore(emptyRowArr); //feeds the csvStore data store object. It inserts id element and converts keys to lowercase\r\n                            FL.common.clearSpaceBelowMenus();\r\n                            utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                            var promise = FL.grid.storeCurrentCSVToServerAndInsertMenu(entityName);\r\n                            promise.done(function () {\r\n                                FL.grid.displayDefaultGrid(entityName);\r\n                            });\r\n                            promise.fail(function (err) {\r\n                                alert(\"FLgrid2.js createGrid Error:\" + err);\r\n                            });\r\n                        } else {\r\n                            FL.common.makeModalInfo(\"The entity name '\" + entityName + \"' already exist. Please choose another name.\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    // alert(\"Create Grid canceled\");\r\n                    FL.common.makeModalInfo(\"Create Grid canceled\");\r\n                }\r\n            });\r\n        },\r\n        adjustRowsToAttributes: function (rows, arrOfAttributes) {\r\n            adjustRowsToAttributes(rows, arrOfAttributes);\r\n        },\r\n        verifyPapaFields: function (metaFieldsArr) {\r\n            //Ex  metaFieldsArr has :{aborted: false, cursor: 322587, delimiter: \",\",fields: Array[52],linebreak: \"↵\",truncated: false}\r\n            //This is the place to add some inteligence in evaluation of CSV files.\r\n            //   for the time being the only criteria to refuse is aborted\r\n            //verifies if there are empty fields. If they exist flags an error.\r\n            //\tif delimiter diferent from null means that probabily the delimiter is the specified\r\n            //  NOTE: to choose the delimiter it checks the first field.\r\n            //\t\t\tif fistfields has more\r\n            //  encoding is the encoding recomendation - PC =>\r\n            var ok = true;\r\n            var fieldArray = metaFieldsArr.fields;\r\n            var numberOfFields = 0;\r\n            var emptyFields = 0;\r\n            var delimiter = null;\r\n            var linebreak = metaFieldsArr.linebreak;\r\n            var encoding = null;\r\n            var semi_colon_repetitions = 0;\r\n            var comma_repetitions = 0;\r\n            _.each(fieldArray, function (element, index) {\r\n                numberOfFields++;\r\n                if (index == 0) {//check semicolumns anbd comma repetiions on firtst line\r\n                    semi_colon_repetitions = ( element.match(/;/g) || [] ).length;\r\n                    comma_repetitions = ( element.match(/,/g) || [] ).length;\r\n                }\r\n                if (element === \"\") {\r\n                    emptyFields++;\r\n                }\r\n            });\r\n            if (metaFieldsArr.aborted)\r\n                ok = false;//one criteria to repeat\r\n            if (linebreak.length == 1 && linebreak.charCodeAt(0) == 13)\r\n                encoding = \"MacRoman\";//standard for mac\r\n            else if (linebreak.length == 2 && linebreak.charCodeAt(0) == 13 && linebreak.charCodeAt(1) == 10) //CR + LF\r\n                encoding = \"windows-1252\";//standard for PC\r\n            else\r\n                encoding = \"windows-1252\";//standard for PC\r\n            if (emptyFields > 0) {\r\n                if (semi_colon_repetitions > numberOfFields) { //one heuristic criteria\r\n                    delimiter = \";\"//recomended for next try\r\n                    ok = false;//one criteria to repeat\r\n                } else if (comma_repetitions > numberOfFields) {\r\n                    delimiter = \",\"\r\n                    ok = false;//one criteria to repeat\r\n                }\r\n            }\r\n            return {\r\n                ok: ok,\r\n                linebreak: linebreak,\r\n                delimiter: delimiter,\r\n                encoding: encoding,\r\n                numberOfFields: numberOfFields,\r\n                emptyFields: emptyFields,\r\n                comma_repetitions: comma_repetitions,\r\n                semi_colon_repetitions: semi_colon_repetitions\r\n            };\r\n        },\r\n        validateCSV: function (fileObj) {//this is called directly from template id=\"_importCSV\" ->onchange=\"FL.grid.validateCSV(this.files)\"\r\n            // if there is an error FL.grid.csvFile will be null. No error => FL.grid.csvFile = csvFile\r\n            // all this does is to leave a message in FL.grid.csvFile after verifing possible CSV errors !!!!\r\n            // The real treatment to the csvFile is done in FL.grid.importGrid() using FL.grid.csvFile prepared in FL.grid.validateCSV()\r\n\r\n            // alert(\"validateCSV---->\"+fileObj[0].name + \" type=\"+fileObj[0].type + \" Elements=\" + fileObj.length);\r\n            if (fileObj[0].name == \"\") {\r\n                alert(\"FL.grid.validateCSV() Error File Name Is empty\");\r\n            } else {\r\n                // alert(\"File Name not empty\");\r\n                var csvFile = fileObj[0];\r\n                FL.grid.csvFile = fileObj[0];\r\n                FL.grid.csvFileDelimiter = null;\r\n                Papa.parse(csvFile, {\r\n                    header: true,\r\n                    dynamicTyping: true,\r\n                    complete: function (results) {\r\n                        data = results;\r\n                        var rowsOnAttempt1 = results.data.length;\r\n                        // alert(\"Loaded rows:\" + rowsOnAttempt1 +  \"\\nAborted--->\" + results.meta.aborted + \"\\nDelimiter--->\"+JSON.stringify(results.meta.delimiter) + \"\\nFields--->\"+JSON.stringify(results.meta.fields) + \"\\n Errors--->\"+JSON.stringify(results.errors));\r\n                        var resultObj = FL.grid.verifyPapaFields(results.meta);\r\n                        // alert(\"Result of verification:-->\"+JSON.stringify(resultObj));\r\n                        FL.grid.csvEncoding = resultObj.encoding;\r\n                        if (resultObj.ok) {\r\n                            FL.common.printToConsole(\"OK on first attempt !!!!!!!!!!!!!! FILE IS A GOOD CSV \");\r\n                            // alert(\"OK on first attempt !!!!!!!!!!!!!! FILE IS A GOOD CSV \");\r\n                        } else {\r\n                            //SECOND ATTEMPT we will try again forcing the delimiter\r\n                            // FL.grid.csvFile = null;\r\n                            FL.grid.csvFileDelimiter = resultObj.delimiter;\r\n                            Papa.parse(csvFile, {\r\n                                delimiter: resultObj.delimiter,\r\n                                dynamicTyping: true,\r\n                                encoding: resultObj.encoding,\r\n                                complete: function (results) {\r\n                                    data = results;\r\n                                    if (results.data.length < rowsOnAttempt1) {//refuse because lines will be lost\r\n                                        FL.grid.csvFile = null;//to block the import\r\n                                    } else {\r\n                                        alert(\"attempt 2 --> !!!! Loaded rows:\" + results.data.length + \"\\nDelimiter--->\" + JSON.stringify(results.meta.delimiter) + \"\\nFields--->\" + JSON.stringify(results.meta.fields) + \"\\n Errors--->\" + JSON.stringify(results.errors));\r\n                                        var resultObj = FL.grid.verifyPapaFields(results.meta);\r\n                                        alert(\"attempt 2 --->Result of verification:-->\" + JSON.stringify(resultObj));\r\n                                        if (resultObj.ok) {\r\n                                            alert(\"OK AT SECOND ATTEMPT !!!!!!!!!!!!!! FILE IS A GOOD CSV \");\r\n                                        } else {\r\n                                            FL.grid.csvFile = null;//to block the import\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        importGrid: function () {//call with menu key \"uri\": \"javascript:FL.grid.importGrid()\" in Settings\r\n            // The real treatment to the csvFile is done here  - FL.grid.importGrid() -  using FL.grid.csvFile prepared in FL.grid.validateCSV()\r\n            var masterDetailItems = {\r\n                master: {entityName: \"\", fileName: \"jojo\"},\r\n                detail: {} //format is array with {attribute:<attribute name>,description:<attr description>,statement;<phrase>}\r\n            };\r\n            var options = {\r\n                type: \"primary\",\r\n                icon: \"cloud-upload\",\r\n                button1: \"Cancel\",\r\n                button2: \"Import CSV\"\r\n            };\r\n            FL.common.editMasterDetail(\"B\", \" Upload CSV\", \"_importCSV\", masterDetailItems, options, function (result) {\r\n                if (result) {//user choosed create\r\n                    // FL.links.testEmail();\r\n                    var entityName = $(\"#_importCSV_entityName\").val();\r\n                    var fileName = $(\"#_importCSV_fileName\").val();\r\n                    // alert(\"Title:\"+entityName+\"-->\"+headerString);\r\n                    if (fileName === \"\")\r\n                    // alert(\"One missing ---> entityName=\"+entityName+\" fileName=\"+fileName);\r\n                        FL.common.makeModalInfo('No CSV file selection - Nothing was done');\r\n                    else {\r\n                        //FL.ddcreateEntity()\r\n                        // alert(\"None missing ----> entityName=\"+entityName+\" fileName=\"+fileName);\r\n                        if (!FL.grid.csvFile) {\r\n                            FL.common.makeModalInfo('There is a problem with ' + fileName + ' - Nothing was done');\r\n                        } else {\r\n                            FL.common.clearSpaceBelowMenus();\r\n\r\n                            var csvFile = FL.grid.csvFile;//set by FL.grid.validateCSV(this.files) --- was val = $('input[type=file]');\r\n                            var delimiter = FL.grid.csvFileDelimiter;\r\n                            var encoding = FL.grid.csvEncoding;\r\n                            FL.grid.csvToGrid2(csvFile, delimiter, encoding, entityName);//csvFile is not a JQuery object\r\n                        }\r\n                        // utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                    }\r\n                } else {\r\n                    alert(\"Create Grid canceled\");\r\n                }\r\n            });\r\n        },\r\n        csvToStore: function (rows) {//rows is an array of JSON [{},{}...{}]; each JSON  has a key/value = attribute/content\r\n            //feeds the csvStore (memoryCsv.js)  with rows injecting id column and converting other column names to lower case\r\n            var csvrows = [];\r\n            _.each(rows, function (element, index) {\r\n                // FL.common.printToConsole((index+1)+\" ---> \"+element[data.fields[0]] + \" --- \" + element[data.fields[6]]);//shows column 0 and column 6\r\n                element[\"id\"] = index + 1;//to insert id in element...\r\n                //we need to be sure that each key is lowercase\r\n                var arrOfPairs = _.pairs(element);//returns an array w/ pairs [[\"one\", 1], [\"two\", 2], [\"three\", 3]]\r\n                arrOfPairs = _.map(arrOfPairs, function (value) {\r\n                    return [value[0], value[1]];\r\n                });\r\n                var element2 = _.object(arrOfPairs);//reconstruct object from arrOf Pairs\r\n                csvrows.push(element2);\r\n            });\r\n            csvStore.store(csvrows);\r\n        },\r\n        insertDefaultGridMenu: function (singular, plural) {// Adds a menu with title <plural> and content displayDefaultGrid(<singular>)\r\n            // cursor over menu position <plural> will show: javascript:FL.links.setDefaultGrid('<singular>')\r\n            // if singular has spaces, they will be changed by \"_\"\r\n            var singularToUseInMenu = singular.replace(/ /g, \"_\");\r\n            // var arrToSend = FL.grid.extractFromCsvStore(singular);\r\n            var arrToSend = csvStore.extractFromCsvStore(singular);\r\n            // FL.common.printToConsole(\"FLGrid2.js --> insertDefaultGridMenu show arrToSend=\"+JSON.stringify(arrToSend));\r\n            // format for arraTosend must be-->[{\"name\":\"Jojox\",\"phone\":\"123\"},{\"name\":\"Anton\",\"phone\":\"456\"}];\r\n            var saveTablePromise = FL.API.saveTable(singular, arrToSend);\r\n            saveTablePromise.done(function (data) {\r\n                // FL.common.printToConsole(\"FLGrid2.js --> insertDefaultGridMenu Succeded saving table. returned:\"+JSON.stringify(data));\r\n                FL.common.clearSpaceBelowMenus();\r\n                $.Topic('createGridOption').publish(plural, singularToUseInMenu);//broadcast that will be received by FL.menu to add an option\r\n            });\r\n            saveTablePromise.fail(function (err) {\r\n                alert(\"FLGrid2.js --> insertDefaultGridMenu FAILURE !!! err=\" + err);\r\n            });\r\n        },\r\n        storeCurrentCSVToServerAndInsertMenu: function (entityName, insertMenu) { //(entityName,plural) Adds a menu with title <plural> and content displayDefaultGrid(<singular>)\r\n            // entityName- Name of entity that will be stored\r\n            // insertMenu - true=> create new menu false=>no menu will be created\r\n            // cursor over menu position <plural> will show: javascript:FL.links.setDefaultGridByCN('<eCN>')\r\n            // if entityName has spaces, they will be changed by \"_\"\r\n            var def = $.Deferred();\r\n            var spinner = FL.common.loaderAnimationON('spinnerDiv');\r\n            if (_.isUndefined(insertMenu) || insertMenu === null)\r\n                insertMenu = true;\r\n            var menuName = null;\r\n            if (!entityName) {\r\n                entityName = FL.dd.nextEntityBeginningBy(\"unNamed\");\r\n                menuName = \"New Grid\";\r\n            } else {\r\n                menuName = FL.dd.plural(entityName, \"En\");\r\n            }\r\n            FL.dd.createEntityAndFields(entityName, entityName + \" description\", csvStore.attributesArr);\r\n\r\n            // var arrToSend = FL.grid.extractFromCsvStore();\r\n            var arrToSend = csvStore.extractFromCsvStore();\r\n            var saveTablePromise = FL.API.saveTable(entityName, arrToSend);\r\n            saveTablePromise.done(function (data) {\r\n                FL.common.printToConsole(\"FL.grid.storeCurrentCSVToServerAndInsertMenu --> dict synch and saveTable sucessfull ->\" + JSON.stringify(data));\r\n                if (insertMenu) {\r\n                    var eCN = FL.dd.getCEntity(entityName);\r\n                    FL.login.permissionToAddMenu = true;//forces true...tis flag is set to false in FL.menu.topicCreateGridByCN to prevent 2 calls\r\n                    $.Topic('createGridOptionByCN').publish(menuName, eCN);//broadcast that will be received by FL.menu to add an option\r\n                }\r\n                FL.common.clearSpaceBelowMenus();\r\n                spinner.stop();\r\n                return def.resolve();\r\n                // $.Topic( 'createGridOption' ).publish( plural,entityNameToUseInMenu );//broadcast that will be received by FL.menu to add an option\r\n            });\r\n            saveTablePromise.fail(function (err) {\r\n                spinner.stop();\r\n                alert(\"FL.grid.storeCurrentCSVToServerAndInsertMenu --> after successful synch->FAILURE in FL.API.saveTable err=\" + err);\r\n                def.reject(\"FL.grid.storeCurrentCSVToServerAndInsertMenu --> after successful synch->FAILURE in FL.API.saveTable err=\" + err);\r\n            });\r\n\r\n            //--------------------- old code\r\n            var singularToUseInMenu = entityName.replace(/ /g, \"_\");\r\n            return def.promise();\r\n        },\r\n        updateCurrentCSVToServer: function (entityName) { //update all records of entityName Table existing in dictionary\r\n            // entityName- Name of entity that will be stored\r\n            // if entityName has spaces, they will be changed by \"_\"\r\n            // we will delete all records of entity name, and then insert all with the same _ids.\r\n            //\t\tfd.remove(\"50\", {query:{}, single:{single:false}}, function(er, dr){\r\n            //\t\tfd.insert(\"50\",[{_id:x1,d:{\"51\":\"cliente 1\",\"52\":\"Lisboa\",\"53\":\"Portugal\"}}, {_id:x2,d:{\"51\":\"cliente 2\",\"52\":\"Porto\",\"53\":\"Portugal\"}}])\r\n            var def = $.Deferred();\r\n            if (FL.dd.isEntityInLocalDictionary(entityName)) {\r\n                var spinner = FL.common.loaderAnimationON('spinnerDiv');\r\n                var eCN = FL.dd.getCEntity(entityName);\r\n                var removeAllPromise = FL.API.removeAllRecords(eCN);\r\n                removeAllPromise.done(function (data) {\r\n                    FL.common.printToConsole(\"FL.grid.updateCurrentCSVToServer --> removeAll sucessfull !!! ->\" + JSON.stringify(data));\r\n                    //FL.API  var convertOneRecordTo_arrToSend\r\n                    // var arrToSend = csvStore.extractFromCsvStoreWith_Id();  //convertRecordsTo_arrToSend in FLAPI\r\n                    var arrToSend = csvStore.extractFromCsvStore();\r\n                    if (arrToSend.length != data.count)\r\n                        alert(\"FL.grid.updateCurrentCSVToServer - ça c'est pas bon --->arrToSend.length=\" + arrToSend.length + \" vs data.count=\" + data.count);\r\n                    // var insertAllPromise = FL.API._insert(eCN);\r\n                    //we NEED TO INTRODUCE _id at d:{} level and remove-it from\r\n                    var insertAllPromise = FL.API.addRecordsToTable(entityName, arrToSend, true);//last parameter is withId to force the same Ids\r\n                    insertAllPromise.done(function (data) {\r\n                        spinner.stop();\r\n                        return def.resolve(data);\r\n                    });\r\n                    insertAllPromise.fail(function (err) {\r\n                        spinner.stop();\r\n                        FL.common.printToConsole(\"FL.grid.updateCurrentCSVToServer --> after successful remove ->FAILURE in insertAllPromise err=\" + err);\r\n                        return def.reject(err);\r\n                    });\r\n                });\r\n                removeAllPromise.fail(function (err) {\r\n                    spinner.stop();\r\n                    FL.common.printToConsole(\"FL.grid.updateCurrentCSVToServer --> after successful remove ->FAILURE in FL.API.saveTable err=\" + err);\r\n                    return def.reject(err);\r\n                });\r\n            } else {\r\n                return def.reject(\"FL.grid.updateCurrentCSVToServer --> \" + entityName + \" does not exist in Local Dictionary !\");\r\n            }\r\n            return def.promise();\r\n        },\r\n        csvToGrid: function (csvFile) {//input is a JQuery object (a file representation). Ex var csvFile = $('input[type=file]');\r\n            csvFile.parse({//http://papaparse.com/\r\n                config: {\r\n                    // base config to use for each file\r\n                    encoding: \"ISO-8859-1\" // ISO-8859-1 is the good encoding for Portuguese chars  - \"UTF-8\" or \"utf-8\", \"latin-1\", \"windows-1255\"\r\n                    // encoding:\"\" // ISO-8859-1 is the good encoding for Portuguese chars  - \"UTF-8\" or \"utf-8\", \"latin-1\", \"windows-1255\"\r\n                },\r\n                before: function (file, inputElem) {\r\n                    // alert(\"file name=\"+file.name);\r\n                    // alert(\"inputElem=\"+inputElem);\r\n                },\r\n                checkData: function (data) {//returns true if columns are ok..false otherwise\r\n                    // alert(\"Before Cleaning -->\"+JSON.stringify(data.results.fields));\r\n                    var xRet = true;\r\n                    _.each(data.results.fields, function (element) {\r\n                        if (element === \"\")\r\n                            xRet = false;\r\n                    });\r\n                    return xRet;\r\n                },\r\n                complete: function (data) {\r\n                    // data is an object data = {errors:{}, meta:{}, results:{fields:[ elements are fields],rows:[elements are objects]} }\r\n                    // data.results.fields - array with columns titles to show\r\n                    // data.results.rows - an array of JSON [{},{}...{}]; each JSON  has a key/value = attribute/content\r\n                    //     eventualy key names have upper case chars ->if columnsArr is provided by\r\n                    //       method utils.backGridColumnsExtractedFromDictionary() they will be converted to lower case only\r\n                    //     eventually id will be missing among key names -  FL.grid.csvToStore() will inject id into csvStore\r\n\r\n                    //now we pass this entity to the data dictionary. Then the data dictionary will feed the grid columns\r\n                    // csvStore.currentGridCandidate[\"entityName\"] = entityName;\r\n                    // var entityName = utils.createEntityFromCsvAnalisys(data.results.rows);\r\n                    // FL.dd.displayEntities();\r\n                    // var columnsArr2 = utils.backGridColumnsExtractedFromDictionary(entityName);//extracts attributes from dictionary and prepares columns object for backgrid\r\n\r\n\r\n                    // this is an alternative without creating any entry in data dictionary\r\n                    // to use backGridColumnsFromArray() we need arrOfColumns with format: [{label:\"xx\",name:fieldName,type:xtype,enumerable:xEnumerable},{col2}...{}]\r\n                    //  to get arrOfColumns we need a method similar to  createEntityFromCsvAnalisys(rows)\r\n\r\n                    //in some cases data.result.fields has an empty field\r\n                    if (!this.checkData(data)) {\r\n                        alert(\"Csv has a problem. Verify columns that have content but title is missing. Please suply a title or remove content.\");\r\n                        return;\r\n                    }\r\n                    var arrOfColumns = createAttributesArrFromCsvAnalisys(data.results.rows);//returns all coluns from CSV\r\n                    injectId(\"id\", arrOfColumns); //now the first column is an \"id\" column\r\n                    var columnsArr = utils.backGridColumnsFromArray(arrOfColumns);//extracts attributes from dictionary and prepares columns object for backgrid\r\n\r\n                    FL.common.printToConsole(\"columns defined...\");\r\n                    var columnsArr2 = [//columns definition to mountGrid - Manual equivalent  to utils.backGridColumnsExtractedFromDictionary()\r\n                        {label: \"Order\", name: \"id\", type: \"string\", enumerable: null},\r\n                        {label: \"Col1\", name: \"f1\", type: \"string\", enumerable: null},\r\n                        {label: \"Col2\", name: \"f2\", type: \"string\", enumerable: null},\r\n                        {label: \"Col3\", name: \"f3\", type: \"enumerable\", enumerable: [\"A\", \"B\", \"C\"]},\r\n                        // {label:\"Col4\",name:\"f4\",type:\"number\",enumerable:null}\r\n                        {label: \"Col4\", name: \"f4\", type: \"number\", enumerable: null}\r\n                    ];\r\n                    var rowsArr2 = [\r\n                        {id: 1, f1: \"abcd Lda\", f2: \"Av Mortirmer 12\", f3: \"C\", f4: 225},\r\n                        {id: 2, f1: \"Jua Lda\", f2: \"Dr Vaquero 5\", f3: \"A\", f4: 322},\r\n                        {id: 3, f1: \"Moe Corp\", f2: \"Latham Street 24C\", f3: \"A\", f4: 242},\r\n                        {id: 4, f1: \"Zuka\", f2: \"123, Zuka Build.5\", f3: \"B\", f4: 357},\r\n                        {id: 5, f1: \"One World\", f2: \"One way street 23\", f3: \"A\", f4: 196},\r\n                        {id: 6, f1: \"Moe Corp\", f2: \"Latham Street 24C\", f3: \"A\", f4: 242},\r\n                        {id: 7, f1: \"ZumZum\", f2: \"Vitesse Road.5\", f3: \"B\", f4: 357},\r\n                        {id: 8, f1: \"2nd Lab\", f2: \"Two way street 57\", f3: \"A\", f4: 196},\r\n                        {id: 9, f1: \"Moe Corp\", f2: \"Latin America 1\", f3: \"A\", f4: 242},\r\n                        {id: 10, f1: \"Zukerman\", f2: \"29,Zukerman Bld.7\", f3: \"B\", f4: 357},\r\n                        {id: 11, f1: \"third A\", f2: \"One Str, 632\", f3: \"A\", f4: 196}\r\n\r\n                    ];\r\n                    // columnsArr - columns definition to mountGrid has the format: [{label:\"xx\",name:fieldName,type:xtype,enumerable:xEnumerable},{col2}...{}]\r\n                    // columnsArr2 = utils.backGridColumnsFromArray(columnsArr2);\r\n                    csvStore.setAttributesArr(arrOfColumns);\r\n                    FL.grid.csvToStore(data.results.rows); //feeds the csvStore data store object. It inserts id element and converts keys to lowercase\r\n\r\n                    utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                    // to prepare columnArr to backGrid use utils.backGridColumnsExtractedFromDictionary() or backGridColumnsFromArray()\r\n                    // utils.mountGridInCsvStore(columnsArr2);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                }\r\n            });\r\n        },\r\n        removeLastRowIfIncomplete: function (data) {\r\n            //by some unknown reason papaparse may leave a last row incomplete....\r\n            //to prevent the existence of an incomplete last line. We will check if last line has the rigth number of columns if not we remove it\r\n            var lastRowIndex = data.data.length - 1;\r\n            var lastLineObj = data.data[lastRowIndex];\r\n            var totColsPerRow = data.meta.fields.length;\r\n            var lastLineCols = ( _.values(lastLineObj) ).length;\r\n            if (lastLineCols != totColsPerRow)\r\n                data.data.splice(lastRowIndex, 1);\r\n        },\r\n        csvToGrid2: function (csvFile, delimiter, encoding, entityName) {//input is a file object obtained from DOM\t//http://papaparse.com/\r\n            //csvFile - file to load file from local computer\r\n            //delimiter - eventual delimiter to use instead of auto delimiter. This is decided by onchange=\"FL.grid.validateCSV(this.files)\"\r\n            // var spinner=FL.common.loaderAnimationON('spinnerDiv');\r\n            var thiz = this;\r\n            skipEmptyLines = true;\r\n            if (!delimiter) {\r\n                delimiter = \"\";//this is the default =>autodetect\r\n                skipEmptyLines = false;//this is the default\r\n            }\r\n            Papa.parse(csvFile, {\r\n                header: true,\r\n                dynamicTyping: true,//If true, numeric and boolean data will be converted to their type instead of remaining strings.\r\n                                    //Numeric data must conform to the definition of a decimal literal. (European-formatted numbers must have commas and dots swapped.)\r\n                                    //Papa parse don't know how to automatically detect if the number is American- or European-formatted.\r\n                delimiter: delimiter,\r\n                skipEmptyLines: skipEmptyLines,\r\n                // encoding:\"ISO-8859-1\",// ISO-8859-1 is the good encoding for Portuguese chars  - \"UTF-8\" or \"utf-8\", \"latin-1\", \"windows-1255\"\r\n                encoding: encoding, //defined in verifyPapaFields()\r\n                complete: function (data) {\r\n                    // data is an object data = {errors:{}, meta:{}, results:{fields:[ elements are fields],rows:[elements are objects]} }\r\n                    // data.results.fields - array with columns titles to show\r\n                    // data.results.rows - an array of JSON [{},{}...{}]; each JSON  has a key/value = attribute/content\r\n                    //     eventualy key names have upper case chars ->if columnsArr is provided by\r\n                    //       method utils.backGridColumnsExtractedFromDictionary() they will be converted to lower case only\r\n                    //     eventually id will be missing among key names -  FL.grid.csvToStore() will inject id into csvStore\r\n\r\n                    //Process:\r\n                    //  removeLastRowIfIncomplete->Analyse CSV data to determine type of columns ->\r\n                    //  ->Scan every line to adjust it to type ->save data.rows to csvStore ->mount and display grid ->\r\n                    //  ->Store csvStore to Serverr and place menu titem to acess data from server.\r\n\r\n                    thiz.removeLastRowIfIncomplete(data);//to remove eventual incomplete last line\r\n                    var arrOfAttributes = dataRowAnalisys(data.data, 0.5);//row analisys returning array of attributes (one element per column)\r\n                    // arrOfAttributes ->[attributeName1:{fieldType\":\"string\",\"fieldTypeUI\":\"textbox\",\"numberFormat\":null, enumerable:null,label:element},attributeName2{..}]\r\n\r\n                    adjustRowsToAttributes(data.data, arrOfAttributes);//here we will adjust data.data according with the analisys feedback in arrOfColumns\r\n\r\n                    var arrOfColumns = translateToDDFormat(arrOfAttributes);//translates arrOfAttributes format to dd format\r\n                    // returns an array with the same format as dd dictionary array of attributes. Each element has the following format:\r\n                    //   ex: {name:\"address\",description:\"address to send invoices\",label:\"Address\",type:\"string\",enumerable:null,key:false});\r\n\r\n                    // injectId(\"id\",arrOfColumns); //now the first column is an \"id\" column\r\n                    injectId(\"#\", arrOfColumns); //now the first column is an \"id\" column\r\n\r\n                    csvStore.setAttributesArr(arrOfColumns);\r\n                    FL.grid.csvToStore(data.data); //feeds the csvStore data store object. It inserts id element and converts keys to lowercase\r\n\r\n                    var columnsArr = utils.backGridColumnsFromArray(arrOfColumns);//extracts attributes from dictionary and prepares columns object for backgrid\r\n                    FL.common.printToConsole(\"columns defined...\" + JSON.stringify(columnsArr));\r\n\r\n                    utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                    // to prepare columnArr to backGrid use utils.backGridColumnsExtractedFromDictionary() or backGridColumnsFromArray()\r\n                    // utils.mountGridInCsvStore(columnsArr2);//mount backbone views and operates grid - columnsArr must be prepared to backGrid\r\n                    // FL.grid.storeCurrentCSVToServerAndInsertMenu(entityName);//the\r\n                    var promise = FL.grid.storeCurrentCSVToServerAndInsertMenu(entityName);\r\n                    promise.done(function () {\r\n                        FL.grid.displayDefaultGrid(entityName);\r\n                    });\r\n                    promise.fail(function (err) {\r\n                        alert(\"FLgrid2.js csvToGrid2 Error:\" + err);\r\n                    });\r\n                    // spinner.stop();\r\n                }\r\n            });\r\n        },\r\n        displayDefaultGrid: function (entityName) { //loads entity from server and display the grid with add,del,edit grid buttons at left and newsletter if a email field exist\r\n            //condition to execute is: FL.API.serverCallBlocked = false;\r\n            entityName = entityName.replace(/_/g, \" \");\r\n            var spinner = FL.common.loaderAnimationON('spinnerDiv');\r\n\r\n            var promiseUnblock = FL.API.checkServerCallBlocked()\r\n                .then(function () {\r\n                    FL.API.serverCallBlocked = true;\r\n                    var promise = FL.API.loadTable(entityName);\r\n                    promise.done(function (data) {\r\n                        FL.common.printToConsole(\"New %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\");\r\n                        csvStore.setEntityName(entityName);//stores <entityName> in csvStore object\r\n                        csvStore.store(data);//data is an array of objects [{},{},....{}] where id field is mandatory inside {}\r\n                        var z = csvStore.csvRows;//only for debugging\r\n                        FL.common.printToConsole(\"show csvStore=\" + JSON.stringify(csvStore.csvRows));\r\n\r\n                        var eCN = FL.dd.getCEntity(entityName);//to remove later when we change entityName by eCN\r\n                        var gridLayout = FL.bg.getGridDefaultLayout(eCN);\r\n                        //gridLayout={baseTable:\"5M\",format:[{fCN:\"50\",label:\"1st Column\",width:20,nestingArr:[]},{fCN:\"5P\",label:\"2st Column\",width:30,nestingArr:[]},\r\n                        //\t\t\t{fCN:\"5Q\",label:\"3st Column\",width:10,nestingArr:[]}] }\r\n                        var lookupObj = getLookupInGrid(gridLayout);\r\n                        if (lookupObj) {\r\n                            console.log(\"1367 Lookup !\");\r\n                            var lookupECN = lookupObj.eCN; //\"6A\";//field.specialTypeDef.eCN;\r\n                            var openPromise = FL.API.openTable(lookupECN);\r\n                            openPromise.done(function (lookupTableObj) {\r\n                                FL.common.printToConsole(\">>>>>displayDefaultGrid openTable SUCCESS <<<<< \", \"API\");\r\n                                spinner.stop();\r\n                                var columnsArr = FL.bg.setupGridColumnsArr(gridLayout, lookupTableObj);\r\n                                mountGridFromColumnsArr(columnsArr, eCN);\r\n                            });\r\n                            openPromise.fail(function (err) {\r\n                                FL.common.printToConsole(\">>>>>displayDefaultGrid openTable FAILURE <<<<<\" + err, \"API\");\r\n                                def.reject(err);\r\n                            });\r\n                        } else {\r\n                            console.log(\"1369 no lookup !\");\r\n                            spinner.stop();\r\n                            var columnsArr = FL.bg.setupGridColumnsArr(gridLayout);\r\n                            mountGridFromColumnsArr(columnsArr, eCN);\r\n                        }\r\n                        ;\r\n                    });\r\n                    promise.fail(function (err) {\r\n                        FL.API.serverCallBlocked = false;\r\n                        spinner.stop();\r\n                        alert(\"DefaultGridWithNewsLetterAndEditButtons Error=\" + err);\r\n                    });\r\n                }, function (err) {\r\n                    alert(\"FL.grid.displayDefaultGrid ERROR: Please try again !\" + err);\r\n                });\r\n        },\r\n        displayDefaultGrid2: function (entityName) { //loads entity from server and display the grid with add,del,edit grid buttons at left and newsletter if a email field exist\r\n            var def = $.Deferred();\r\n            entityName = entityName.replace(/_/g, \" \");\r\n            // FL.common.spin(true);\r\n\r\n            var spinner = FL.common.loaderAnimationON('spinnerDiv');\r\n            var promiseUnblock = FL.API.checkServerCallBlocked()\r\n                .then(function () {//this only occurs when checkServerCallBlocked is resolved\r\n                    var promise = FL.API.loadTable(entityName);\r\n                    promise.done(function (data) {\r\n                        csvStore.setEntityName(entityName);//stores <entityName> in csvStore object\r\n                        csvStore.store(data);//data is an array of objects [{},{},....{}] where id field is mandatory inside {}\r\n                        FL.common.printToConsole(\"FL.grid.displayDefaultGrid2 -->loadTable is done\");\r\n                        FL.common.printToConsole(\"show csvStore=\" + JSON.stringify(csvStore.csvRows));\r\n                        var columnsArr = utils.backGridColumnsExtractedFromDictionary(entityName);//extracts attributes from dictionary and prepares columns object for backgrid\r\n                        FL.common.printToConsole(\"FL.grid.displayDefaultGrid2 &&&&&&&& entity=\" + entityName);\r\n                        FL.common.printToConsole(\"show columnsArr=\" + JSON.stringify(columnsArr));\r\n                        FL.common.clearSpaceBelowMenus();\r\n                        $(\"#addGrid\").show();\r\n                        $(\"#addGrid\").html(\" Add Row\");\r\n                        $('#_editGrid').off('click');\r\n                        $(\"#_editGrid\").click(function () {\r\n                            editGrid(entityName);\r\n                        });\r\n                        $(\"#_editGrid\").show();\r\n                        if (FL.dd.isEntityWithTypeUI(entityName, \"emailbox\") || FL.dd.isEntityWithTypeUI(entityName, \"email\")) {//the newsletter option only appears to entities that have an email\r\n                            $('#_newsletter').off('click');\r\n                            $(\"#_newsletter\").click(function (grid) {\r\n                                var templatePromise = FL.API.createTemplates_ifNotExisting();\r\n                                templatePromise.done(function () {\r\n                                    prepareNewsletterEmission(entityName, grid);\r\n                                    return;\r\n                                });\r\n                                templatePromise.fail(function (err) {\r\n                                    alert(\"FL.grid.displayDefaultGrid2 ->FAILURE with createTemplates_ifNotExisting err=\" + err);\r\n                                    return;\r\n                                });\r\n                            });\r\n                            $('#_newsletter').show();\r\n                            $('#_newsletterMC').off('click');\r\n                            $(\"#_newsletterMC\").click(function () {\r\n                                prepareNewsletterMCEmission(entityName);\r\n                            });\r\n                            $('#_newsletterMC').show();\r\n                            $(\"#_newsletterMC\").html(\" MC\");\r\n                        }\r\n                        utils.mountGridInCsvStore(columnsArr);//mount backbone views and operates grid -\r\n                        spinner.stop();\r\n                        return def.resolve();\r\n                    });\r\n                    promise.fail(function (err) {\r\n                        spinner.stop();\r\n                        return def.reject(\"FL.grid.displayDefaultGrid2 failure on loadTable \" + err);\r\n                    });\r\n                }, function (err) {\r\n                    spinner.stop();\r\n                    return def.reject(\"FL.grid.displayDefaultGrid2 failure on checkServerCallBlocked() \" + err);\r\n                });\r\n            return def.promise();\r\n        },\r\n        sendEmailTest: function () {//sends a sample email with eMail/newsletter\r\n            if (FL.login.emailContentTemplate) {\r\n                // var mailHTML = '<p>Thank you for selecting <a href=\"http://www.framelink.co\"><strong>FrameLink version 8</strong></a> to build your backend site !</p>';\r\n                var mailHTML = FL.login.emailContentTemplate;\r\n                var imagesArr = FL.login.emailImagesArray;\r\n                var senderObj = extractSenderObjFromModal();\r\n                // var toArr = [{\"email\":testEmail}];\r\n                var toArr = [senderObj.testEmail];\r\n                var metadataObj = {newsletterName: \"test\", dbName: \"test\", eCN: null, fCN: null}\r\n\r\n                FL.common.printToConsole(\"Sends test email to from_name:\" + senderObj.from_name + \" email:\" + senderObj.from_email + \" subject:\" + senderObj.subject);\r\n                FL.common.printToConsole(\"Sends to -->\" + JSON.stringify(toArr));\r\n                FL.common.printToConsole(\"Sends HTML -->\" + mailHTML);\r\n                FL.common.printToConsole(\"----------------------------------------------------------------------\");\r\n                // FL.links.sendEmail(null,mailHTML,imagesArr,toArr,senderObj,\"test\");\r\n                // FL.emailServices.sendEmail(null,mailHTML,imagesArr,toArr,senderObj,\"test\",\"test\");//2 last param: FL.login.emailTemplateName,FL.login.token.dbName\r\n                FL.emailServices.sendEmail(mailHTML, imagesArr, toArr, senderObj, metadataObj);\r\n                // alert(\"Email test sent to \"+senderObj.testEmail);\r\n                FL.common.makeModalInfo(\"Test Email sent to \" + senderObj.testEmail, null, 2);\r\n            } else {\r\n                // alert(\"Email content is empty - choose a template and try again \");\r\n                FL.common.makeModalInfo(\"Email content is empty - choose a template and try again\", null, 2);\r\n            }\r\n            if (FL.common.getBrowser() == \"ie\") {\r\n                var elem = document.getElementById('form__sendNewsletterTemplate_emailTest');\r\n                elem.parentNode.removeChild(elem);\r\n            }\r\n        },\r\n        testFunc: function (x) {\r\n            alert(\"FL.grid.test() -->\" + x);\r\n        }\r\n    };\r\n})\r\n();\r\n// });"]}